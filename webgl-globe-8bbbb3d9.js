!function(){"use strict";!function(t){var e={};function n(r){if(e[r])return e[r].exports;var s=e[r]={i:r,l:!1,exports:{}};return t[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)n.d(r,s,function(e){return t[e]}.bind(null,s));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=18)}([function(t,e,n){var r=n(9)();t.exports=function(t){return t!==r&&null!==t}},function(t,e,n){var r,s,a,o,l,h,c,u=n(2),d=n(16),p=Function.prototype.apply,g=Function.prototype.call,y=Object.create,_=Object.defineProperty,E=Object.defineProperties,T=Object.prototype.hasOwnProperty,A={configurable:!0,enumerable:!1,writable:!0};s=function(t,e){var n,s;return d(e),s=this,r.call(this,t,n=function(){a.call(s,t,n),p.call(e,this,arguments)}),n.__eeOnceListener__=e,this},l={on:r=function(t,e){var n;return d(e),T.call(this,"__ee__")?n=this.__ee__:(n=A.value=y(null),_(this,"__ee__",A),A.value=null),n[t]?"object"==typeof n[t]?n[t].push(e):n[t]=[n[t],e]:n[t]=e,this},once:s,off:a=function(t,e){var n,r,s,a;if(d(e),!T.call(this,"__ee__"))return this;if(!(n=this.__ee__)[t])return this;if("object"==typeof(r=n[t]))for(a=0;s=r[a];++a)s!==e&&s.__eeOnceListener__!==e||(2===r.length?n[t]=r[a?0:1]:r.splice(a,1));else r!==e&&r.__eeOnceListener__!==e||delete n[t];return this},emit:o=function(t){var e,n,r,s,a;if(T.call(this,"__ee__")&&(s=this.__ee__[t]))if("object"==typeof s){for(n=arguments.length,a=new Array(n-1),e=1;e<n;++e)a[e-1]=arguments[e];for(s=s.slice(),e=0;r=s[e];++e)p.call(r,this,a)}else switch(arguments.length){case 1:g.call(s,this);break;case 2:g.call(s,this,arguments[1]);break;case 3:g.call(s,this,arguments[1],arguments[2]);break;default:for(n=arguments.length,a=new Array(n-1),e=1;e<n;++e)a[e-1]=arguments[e];p.call(s,this,a)}}},h={on:u(r),once:u(s),off:u(a),emit:u(o)},c=E({},h),t.exports=e=function(t){return null==t?y(c):E(Object(t),h)},e.methods=l},function(t,e,n){var r=n(3),s=n(11),a=n(12),o=n(13);(t.exports=function(t,e){var n,a,l,h,c;return arguments.length<2||"string"!=typeof t?(h=e,e=t,t=null):h=arguments[2],null==t?(n=l=!0,a=!1):(n=o.call(t,"c"),a=o.call(t,"e"),l=o.call(t,"w")),c={value:e,configurable:n,enumerable:a,writable:l},h?r(s(h),c):c}).gs=function(t,e,n){var l,h,c,u;return"string"!=typeof t?(c=n,n=e,e=t,t=null):c=arguments[3],null==e?e=void 0:a(e)?null==n?n=void 0:a(n)||(c=n,n=void 0):(c=e,e=n=void 0),null==t?(l=!0,h=!1):(l=o.call(t,"c"),h=o.call(t,"e")),u={get:e,set:n,configurable:l,enumerable:h},c?r(s(c),u):u}},function(t,e,n){t.exports=n(4)()?Object.assign:n(5)},function(t,e,n){t.exports=function(){var t,e=Object.assign;return"function"==typeof e&&(e(t={foo:"raz"},{bar:"dwa"},{trzy:"trzy"}),t.foo+t.bar+t.trzy==="razdwatrzy")}},function(t,e,n){var r=n(6),s=n(10),a=Math.max;t.exports=function(t,e){var n,o,l,h=a(arguments.length,2);for(t=Object(s(t)),l=function(r){try{t[r]=e[r]}catch(t){n||(n=t)}},o=1;o<h;++o)r(e=arguments[o]).forEach(l);if(void 0!==n)throw n;return t}},function(t,e,n){t.exports=n(7)()?Object.keys:n(8)},function(t,e,n){t.exports=function(){try{return Object.keys("primitive"),!0}catch(t){return!1}}},function(t,e,n){var r=n(0),s=Object.keys;t.exports=function(t){return s(r(t)?Object(t):t)}},function(t,e,n){t.exports=function(){}},function(t,e,n){var r=n(0);t.exports=function(t){if(!r(t))throw new TypeError("Cannot use null or undefined");return t}},function(t,e,n){var r=n(0),s=Array.prototype.forEach,a=Object.create,o=function(t,e){var n;for(n in t)e[n]=t[n]};t.exports=function(t){var e=a(null);return s.call(arguments,(function(t){r(t)&&o(Object(t),e)})),e}},function(t,e,n){t.exports=function(t){return"function"==typeof t}},function(t,e,n){t.exports=n(14)()?String.prototype.contains:n(15)},function(t,e,n){var r="razdwatrzy";t.exports=function(){return"function"==typeof r.contains&&!0===r.contains("dwa")&&!1===r.contains("foo")}},function(t,e,n){var r=String.prototype.indexOf;t.exports=function(t){return r.call(this,t,arguments[1])>-1}},function(t,e,n){t.exports=function(t){if("function"!=typeof t)throw new TypeError(t+" is not a function");return t}},function(t,e,n){},function(t,e,n){n.r(e);class i{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let e=0,r=n.length;e<r;e++)n[e].call(this,t);t.target=null}}}const r=[];for(let zl=0;zl<256;zl++)r[zl]=(zl<16?"0":"")+zl.toString(16);const s=Math.PI/180,a=180/Math.PI;function o(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,s=4294967295*Math.random()|0;return(r[255&t]+r[t>>8&255]+r[t>>16&255]+r[t>>24&255]+"-"+r[255&e]+r[e>>8&255]+"-"+r[e>>16&15|64]+r[e>>24&255]+"-"+r[63&n|128]+r[n>>8&255]+"-"+r[n>>16&255]+r[n>>24&255]+r[255&s]+r[s>>8&255]+r[s>>16&255]+r[s>>24&255]).toUpperCase()}function l(t,e,n){return Math.max(e,Math.min(n,t))}function h(t,e,n){return(1-n)*t+n*e}function c(t){return 0==(t&t-1)&&0!==t}function u(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}class m{constructor(t=0,e=0){this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6],this.y=r[1]*e+r[4]*n+r[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),r=Math.sin(e),s=this.x-t.x,a=this.y-t.y;return this.x=s*n-a*r+t.x,this.y=s*r+a*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}m.prototype.isVector2=!0;class f{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,r,s,a,o,l,h){const c=this.elements;return c[0]=t,c[1]=r,c[2]=o,c[3]=e,c[4]=s,c[5]=l,c[6]=n,c[7]=a,c[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,r=e.elements,s=this.elements,a=n[0],o=n[3],l=n[6],h=n[1],c=n[4],u=n[7],d=n[2],p=n[5],g=n[8],y=r[0],_=r[3],E=r[6],T=r[1],A=r[4],C=r[7],P=r[2],R=r[5],I=r[8];return s[0]=a*y+o*T+l*P,s[3]=a*_+o*A+l*R,s[6]=a*E+o*C+l*I,s[1]=h*y+c*T+u*P,s[4]=h*_+c*A+u*R,s[7]=h*E+c*C+u*I,s[2]=d*y+p*T+g*P,s[5]=d*_+p*A+g*R,s[8]=d*E+p*C+g*I,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],r=t[2],s=t[3],a=t[4],o=t[5],l=t[6],h=t[7],c=t[8];return e*a*c-e*o*h-n*s*c+n*o*l+r*s*h-r*a*l}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],s=t[3],a=t[4],o=t[5],l=t[6],h=t[7],c=t[8],u=c*a-o*h,d=o*l-c*s,p=h*s-a*l,g=e*u+n*d+r*p;if(0===g)return this.set(0,0,0,0,0,0,0,0,0);const y=1/g;return t[0]=u*y,t[1]=(r*h-c*n)*y,t[2]=(o*n-r*a)*y,t[3]=d*y,t[4]=(c*e-r*l)*y,t[5]=(r*s-o*e)*y,t[6]=p*y,t[7]=(n*l-h*e)*y,t[8]=(a*e-n*s)*y,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,r,s,a,o){const l=Math.cos(s),h=Math.sin(s);return this.set(n*l,n*h,-n*(l*a+h*o)+a+t,-r*h,r*l,-r*(-h*a+l*o)+o+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),r=this.elements,s=r[0],a=r[3],o=r[6],l=r[1],h=r[4],c=r[7];return r[0]=e*s+n*l,r[3]=e*a+n*h,r[6]=e*o+n*c,r[1]=-n*s+e*l,r[4]=-n*a+e*h,r[7]=-n*o+e*c,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let r=0;r<9;r++)if(e[r]!==n[r])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}let d;f.prototype.isMatrix3=!0;class v{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===d&&(d=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),d.width=t.width,d.height=t.height;const n=d.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=d}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}}let p=0;class x extends i{constructor(t=x.DEFAULT_IMAGE,e=x.DEFAULT_MAPPING,n=1001,r=1001,s=1006,a=1008,l=1023,h=1009,c=1,u=3e3){super(),Object.defineProperty(this,"id",{value:p++}),this.uuid=o(),this.name="",this.image=t,this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=r,this.magFilter=s,this.minFilter=a,this.anisotropy=c,this.format=l,this.internalFormat=null,this.type=h,this.offset=new m(0,0),this.repeat=new m(1,1),this.center=new m(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new f,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.version=0,this.onUpdate=null}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const r=this.image;if(void 0===r.uuid&&(r.uuid=o()),!e&&void 0===t.images[r.uuid]){let e;if(Array.isArray(r)){e=[];for(let t=0,n=r.length;t<n;t++)r[t].isDataTexture?e.push(g(r[t].image)):e.push(g(r[t]))}else e=g(r);t.images[r.uuid]={uuid:r.uuid,url:e}}n.image=r.uuid}return e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case 1e3:t.x=t.x-Math.floor(t.x);break;case 1001:t.x=t.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case 1e3:t.y=t.y-Math.floor(t.y);break;case 1001:t.y=t.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&this.version++}}function g(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?v.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}x.DEFAULT_IMAGE=void 0,x.DEFAULT_MAPPING=300,x.prototype.isTexture=!0;class b{constructor(t=0,e=0,n=0,r=1){this.x=t,this.y=e,this.z=n,this.w=r}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,r){return this.x=t,this.y=e,this.z=n,this.w=r,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,s=this.w,a=t.elements;return this.x=a[0]*e+a[4]*n+a[8]*r+a[12]*s,this.y=a[1]*e+a[5]*n+a[9]*r+a[13]*s,this.z=a[2]*e+a[6]*n+a[10]*r+a[14]*s,this.w=a[3]*e+a[7]*n+a[11]*r+a[15]*s,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,r,s;const a=t.elements,o=a[0],l=a[4],h=a[8],c=a[1],u=a[5],d=a[9],p=a[2],g=a[6],y=a[10];if(Math.abs(l-c)<.01&&Math.abs(h-p)<.01&&Math.abs(d-g)<.01){if(Math.abs(l+c)<.1&&Math.abs(h+p)<.1&&Math.abs(d+g)<.1&&Math.abs(o+u+y-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const t=(o+1)/2,a=(u+1)/2,_=(y+1)/2,E=(l+c)/4,T=(h+p)/4,A=(d+g)/4;return t>a&&t>_?t<.01?(n=0,r=.707106781,s=.707106781):(n=Math.sqrt(t),r=E/n,s=T/n):a>_?a<.01?(n=.707106781,r=0,s=.707106781):(r=Math.sqrt(a),n=E/r,s=A/r):_<.01?(n=.707106781,r=.707106781,s=0):(s=Math.sqrt(_),n=T/s,r=A/s),this.set(n,r,s,e),this}let _=Math.sqrt((g-d)*(g-d)+(h-p)*(h-p)+(c-l)*(c-l));return Math.abs(_)<.001&&(_=1),this.x=(g-d)/_,this.y=(h-p)/_,this.z=(c-l)/_,this.w=Math.acos((o+u+y-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}b.prototype.isVector4=!0;class w extends i{constructor(t,e,n){super(),this.width=t,this.height=e,this.depth=1,this.scissor=new b(0,0,t,e),this.scissorTest=!1,this.viewport=new b(0,0,t,e),n=n||{},this.texture=new x(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:1006,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(t){t.image={width:this.width,height:this.height,depth:this.depth},this.texture=t}setSize(t,e,n=1){this.width===t&&this.height===e&&this.depth===n||(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}w.prototype.isWebGLRenderTarget=!0,class extends w{constructor(t,e,n){super(t,e,n),this.samples=4}copy(t){return super.copy.call(this,t),this.samples=t.samples,this}}.prototype.isWebGLMultisampleRenderTarget=!0;class M{constructor(t=0,e=0,n=0,r=1){this._x=t,this._y=e,this._z=n,this._w=r}static slerp(t,e,n,r){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(t,e,r)}static slerpFlat(t,e,n,r,s,a,o){let l=n[r+0],h=n[r+1],c=n[r+2],u=n[r+3];const d=s[a+0],p=s[a+1],g=s[a+2],y=s[a+3];if(0===o)return t[e+0]=l,t[e+1]=h,t[e+2]=c,void(t[e+3]=u);if(1===o)return t[e+0]=d,t[e+1]=p,t[e+2]=g,void(t[e+3]=y);if(u!==y||l!==d||h!==p||c!==g){let t=1-o;const e=l*d+h*p+c*g+u*y,n=e>=0?1:-1,r=1-e*e;if(r>Number.EPSILON){const s=Math.sqrt(r),a=Math.atan2(s,e*n);t=Math.sin(t*a)/s,o=Math.sin(o*a)/s}const s=o*n;if(l=l*t+d*s,h=h*t+p*s,c=c*t+g*s,u=u*t+y*s,t===1-o){const t=1/Math.sqrt(l*l+h*h+c*c+u*u);l*=t,h*=t,c*=t,u*=t}}t[e]=l,t[e+1]=h,t[e+2]=c,t[e+3]=u}static multiplyQuaternionsFlat(t,e,n,r,s,a){const o=n[r],l=n[r+1],h=n[r+2],c=n[r+3],u=s[a],d=s[a+1],p=s[a+2],g=s[a+3];return t[e]=o*g+c*u+l*p-h*d,t[e+1]=l*g+c*d+h*u-o*p,t[e+2]=h*g+c*p+o*d-l*u,t[e+3]=c*g-o*u-l*d-h*p,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,r){return this._x=t,this._y=e,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,r=t._y,s=t._z,a=t._order,o=Math.cos,l=Math.sin,h=o(n/2),c=o(r/2),u=o(s/2),d=l(n/2),p=l(r/2),g=l(s/2);switch(a){case"XYZ":this._x=d*c*u+h*p*g,this._y=h*p*u-d*c*g,this._z=h*c*g+d*p*u,this._w=h*c*u-d*p*g;break;case"YXZ":this._x=d*c*u+h*p*g,this._y=h*p*u-d*c*g,this._z=h*c*g-d*p*u,this._w=h*c*u+d*p*g;break;case"ZXY":this._x=d*c*u-h*p*g,this._y=h*p*u+d*c*g,this._z=h*c*g+d*p*u,this._w=h*c*u-d*p*g;break;case"ZYX":this._x=d*c*u-h*p*g,this._y=h*p*u+d*c*g,this._z=h*c*g-d*p*u,this._w=h*c*u+d*p*g;break;case"YZX":this._x=d*c*u+h*p*g,this._y=h*p*u+d*c*g,this._z=h*c*g-d*p*u,this._w=h*c*u-d*p*g;break;case"XZY":this._x=d*c*u-h*p*g,this._y=h*p*u-d*c*g,this._z=h*c*g+d*p*u,this._w=h*c*u+d*p*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,r=Math.sin(n);return this._x=t.x*r,this._y=t.y*r,this._z=t.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],r=e[4],s=e[8],a=e[1],o=e[5],l=e[9],h=e[2],c=e[6],u=e[10],d=n+o+u;if(d>0){const t=.5/Math.sqrt(d+1);this._w=.25/t,this._x=(c-l)*t,this._y=(s-h)*t,this._z=(a-r)*t}else if(n>o&&n>u){const t=2*Math.sqrt(1+n-o-u);this._w=(c-l)/t,this._x=.25*t,this._y=(r+a)/t,this._z=(s+h)/t}else if(o>u){const t=2*Math.sqrt(1+o-n-u);this._w=(s-h)/t,this._x=(r+a)/t,this._y=.25*t,this._z=(l+c)/t}else{const t=2*Math.sqrt(1+u-n-o);this._w=(a-r)/t,this._x=(s+h)/t,this._y=(l+c)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(l(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const r=Math.min(1,e/n);return this.slerp(t,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,r=t._y,s=t._z,a=t._w,o=e._x,l=e._y,h=e._z,c=e._w;return this._x=n*c+a*o+r*h-s*l,this._y=r*c+a*l+s*o-n*h,this._z=s*c+a*h+n*l-r*o,this._w=a*c-n*o-r*l-s*h,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,r=this._y,s=this._z,a=this._w;let o=a*t._w+n*t._x+r*t._y+s*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=a,this._x=n,this._y=r,this._z=s,this;const l=1-o*o;if(l<=Number.EPSILON){const t=1-e;return this._w=t*a+e*this._w,this._x=t*n+e*this._x,this._y=t*r+e*this._y,this._z=t*s+e*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(l),c=Math.atan2(h,o),u=Math.sin((1-e)*c)/h,d=Math.sin(e*c)/h;return this._w=a*u+this._w*d,this._x=n*u+this._x*d,this._y=r*u+this._y*d,this._z=s*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(t,e,n){this.copy(t).slerp(e,n)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}M.prototype.isQuaternion=!0;class S{constructor(t=0,e=0,n=0){this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(_.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(_.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,r=this.z,s=t.elements;return this.x=s[0]*e+s[3]*n+s[6]*r,this.y=s[1]*e+s[4]*n+s[7]*r,this.z=s[2]*e+s[5]*n+s[8]*r,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,s=t.elements,a=1/(s[3]*e+s[7]*n+s[11]*r+s[15]);return this.x=(s[0]*e+s[4]*n+s[8]*r+s[12])*a,this.y=(s[1]*e+s[5]*n+s[9]*r+s[13])*a,this.z=(s[2]*e+s[6]*n+s[10]*r+s[14])*a,this}applyQuaternion(t){const e=this.x,n=this.y,r=this.z,s=t.x,a=t.y,o=t.z,l=t.w,h=l*e+a*r-o*n,c=l*n+o*e-s*r,u=l*r+s*n-a*e,d=-s*e-a*n-o*r;return this.x=h*l+d*-s+c*-o-u*-a,this.y=c*l+d*-a+u*-s-h*-o,this.z=u*l+d*-o+h*-a-c*-s,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,r=this.z,s=t.elements;return this.x=s[0]*e+s[4]*n+s[8]*r,this.y=s[1]*e+s[5]*n+s[9]*r,this.z=s[2]*e+s[6]*n+s[10]*r,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,r=t.y,s=t.z,a=e.x,o=e.y,l=e.z;return this.x=r*l-s*o,this.y=s*a-n*l,this.z=n*o-r*a,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return y.copy(this).projectOnVector(t),this.sub(y)}reflect(t){return this.sub(y.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(l(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,r=this.z-t.z;return e*e+n*n+r*r}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const r=Math.sin(e)*t;return this.x=r*Math.sin(n),this.y=Math.cos(e)*t,this.z=r*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),r=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=r,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}S.prototype.isVector3=!0;const y=new S,_=new M;class L{constructor(t=new S(1/0,1/0,1/0),e=new S(-1/0,-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,r=1/0,s=-1/0,a=-1/0,o=-1/0;for(let l=0,h=t.length;l<h;l+=3){const h=t[l],c=t[l+1],u=t[l+2];h<e&&(e=h),c<n&&(n=c),u<r&&(r=u),h>s&&(s=h),c>a&&(a=c),u>o&&(o=u)}return this.min.set(e,n,r),this.max.set(s,a,o),this}setFromBufferAttribute(t){let e=1/0,n=1/0,r=1/0,s=-1/0,a=-1/0,o=-1/0;for(let l=0,h=t.count;l<h;l++){const h=t.getX(l),c=t.getY(l),u=t.getZ(l);h<e&&(e=h),c<n&&(n=c),u<r&&(r=u),h>s&&(s=h),c>a&&(a=c),u>o&&(o=u)}return this.min.set(e,n,r),this.max.set(s,a,o),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=T.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return void 0===t&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new S),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new S),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const e=t.geometry;void 0!==e&&(null===e.boundingBox&&e.computeBoundingBox(),A.copy(e.boundingBox),A.applyMatrix4(t.matrixWorld),this.union(A));const n=t.children;for(let r=0,s=n.length;r<s;r++)this.expandByObject(n[r]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new S),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,T),T.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(z),O.subVectors(this.max,z),C.subVectors(t.a,z),P.subVectors(t.b,z),R.subVectors(t.c,z),I.subVectors(P,C),D.subVectors(R,P),N.subVectors(C,R);let e=[0,-I.z,I.y,0,-D.z,D.y,0,-N.z,N.y,I.z,0,-I.x,D.z,0,-D.x,N.z,0,-N.x,-I.y,I.x,0,-D.y,D.x,0,-N.y,N.x,0];return!!H(e,C,P,R,O)&&(e=[1,0,0,0,1,0,0,0,1],!!H(e,C,P,R,O)&&(B.crossVectors(I,D),e=[B.x,B.y,B.z],H(e,C,P,R,O)))}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new S),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return T.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return void 0===t&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=.5*this.getSize(T).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(E[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),E[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),E[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),E[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),E[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),E[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),E[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),E[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(E)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}L.prototype.isBox3=!0;const E=[new S,new S,new S,new S,new S,new S,new S,new S],T=new S,A=new L,C=new S,P=new S,R=new S,I=new S,D=new S,N=new S,z=new S,O=new S,B=new S,F=new S;function H(t,e,n,r,s){for(let a=0,o=t.length-3;a<=o;a+=3){F.fromArray(t,a);const o=s.x*Math.abs(F.x)+s.y*Math.abs(F.y)+s.z*Math.abs(F.z),l=e.dot(F),h=n.dot(F),c=r.dot(F);if(Math.max(-Math.max(l,h,c),Math.min(l,h,c))>o)return!1}return!0}const U=new L,G=new S,V=new S,k=new S;class q{constructor(t=new S,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):U.setFromPoints(t).getCenter(n);let r=0;for(let s=0,a=t.length;s<a;s++)r=Math.max(r,n.distanceToSquared(t[s]));return this.radius=Math.sqrt(r),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return void 0===e&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new S),e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return void 0===t&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new L),this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){k.subVectors(t,this.center);const e=k.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.add(k.multiplyScalar(n/t)),this.radius+=n}return this}union(t){return V.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(G.copy(t.center).add(V)),this.expandByPoint(G.copy(t.center).sub(V)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const W=new S,j=new S,X=new S,Y=new S,J=new S,Z=new S,Q=new S;class tt{constructor(t=new S,e=new S(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return void 0===e&&(console.warn("THREE.Ray: .at() target is now required"),e=new S),e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,W)),this}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new S),e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=W.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(W.copy(this.direction).multiplyScalar(e).add(this.origin),W.distanceToSquared(t))}distanceSqToSegment(t,e,n,r){j.copy(t).add(e).multiplyScalar(.5),X.copy(e).sub(t).normalize(),Y.copy(this.origin).sub(j);const s=.5*t.distanceTo(e),a=-this.direction.dot(X),o=Y.dot(this.direction),l=-Y.dot(X),h=Y.lengthSq(),c=Math.abs(1-a*a);let u,d,p,g;if(c>0)if(u=a*l-o,d=a*o-l,g=s*c,u>=0)if(d>=-g)if(d<=g){const t=1/c;u*=t,d*=t,p=u*(u+a*d+2*o)+d*(a*u+d+2*l)+h}else d=s,u=Math.max(0,-(a*d+o)),p=-u*u+d*(d+2*l)+h;else d=-s,u=Math.max(0,-(a*d+o)),p=-u*u+d*(d+2*l)+h;else d<=-g?(u=Math.max(0,-(-a*s+o)),d=u>0?-s:Math.min(Math.max(-s,-l),s),p=-u*u+d*(d+2*l)+h):d<=g?(u=0,d=Math.min(Math.max(-s,-l),s),p=d*(d+2*l)+h):(u=Math.max(0,-(a*s+o)),d=u>0?s:Math.min(Math.max(-s,-l),s),p=-u*u+d*(d+2*l)+h);else d=a>0?-s:s,u=Math.max(0,-(a*d+o)),p=-u*u+d*(d+2*l)+h;return n&&n.copy(this.direction).multiplyScalar(u).add(this.origin),r&&r.copy(X).multiplyScalar(d).add(j),p}intersectSphere(t,e){W.subVectors(t.center,this.origin);const n=W.dot(this.direction),r=W.dot(W)-n*n,s=t.radius*t.radius;if(r>s)return null;const a=Math.sqrt(s-r),o=n-a,l=n+a;return o<0&&l<0?null:o<0?this.at(l,e):this.at(o,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,r,s,a,o,l;const h=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,d=this.origin;return h>=0?(n=(t.min.x-d.x)*h,r=(t.max.x-d.x)*h):(n=(t.max.x-d.x)*h,r=(t.min.x-d.x)*h),c>=0?(s=(t.min.y-d.y)*c,a=(t.max.y-d.y)*c):(s=(t.max.y-d.y)*c,a=(t.min.y-d.y)*c),n>a||s>r?null:((s>n||n!=n)&&(n=s),(a<r||r!=r)&&(r=a),u>=0?(o=(t.min.z-d.z)*u,l=(t.max.z-d.z)*u):(o=(t.max.z-d.z)*u,l=(t.min.z-d.z)*u),n>l||o>r?null:((o>n||n!=n)&&(n=o),(l<r||r!=r)&&(r=l),r<0?null:this.at(n>=0?n:r,e)))}intersectsBox(t){return null!==this.intersectBox(t,W)}intersectTriangle(t,e,n,r,s){J.subVectors(e,t),Z.subVectors(n,t),Q.crossVectors(J,Z);let a,o=this.direction.dot(Q);if(o>0){if(r)return null;a=1}else{if(!(o<0))return null;a=-1,o=-o}Y.subVectors(this.origin,t);const l=a*this.direction.dot(Z.crossVectors(Y,Z));if(l<0)return null;const h=a*this.direction.dot(J.cross(Y));if(h<0)return null;if(l+h>o)return null;const c=-a*Y.dot(Q);return c<0?null:this.at(c/o,s)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class et{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,r,s,a,o,l,h,c,u,d,p,g,y,_){const E=this.elements;return E[0]=t,E[4]=e,E[8]=n,E[12]=r,E[1]=s,E[5]=a,E[9]=o,E[13]=l,E[2]=h,E[6]=c,E[10]=u,E[14]=d,E[3]=p,E[7]=g,E[11]=y,E[15]=_,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new et).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,r=1/K.setFromMatrixColumn(t,0).length(),s=1/K.setFromMatrixColumn(t,1).length(),a=1/K.setFromMatrixColumn(t,2).length();return e[0]=n[0]*r,e[1]=n[1]*r,e[2]=n[2]*r,e[3]=0,e[4]=n[4]*s,e[5]=n[5]*s,e[6]=n[6]*s,e[7]=0,e[8]=n[8]*a,e[9]=n[9]*a,e[10]=n[10]*a,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,r=t.y,s=t.z,a=Math.cos(n),o=Math.sin(n),l=Math.cos(r),h=Math.sin(r),c=Math.cos(s),u=Math.sin(s);if("XYZ"===t.order){const t=a*c,n=a*u,r=o*c,s=o*u;e[0]=l*c,e[4]=-l*u,e[8]=h,e[1]=n+r*h,e[5]=t-s*h,e[9]=-o*l,e[2]=s-t*h,e[6]=r+n*h,e[10]=a*l}else if("YXZ"===t.order){const t=l*c,n=l*u,r=h*c,s=h*u;e[0]=t+s*o,e[4]=r*o-n,e[8]=a*h,e[1]=a*u,e[5]=a*c,e[9]=-o,e[2]=n*o-r,e[6]=s+t*o,e[10]=a*l}else if("ZXY"===t.order){const t=l*c,n=l*u,r=h*c,s=h*u;e[0]=t-s*o,e[4]=-a*u,e[8]=r+n*o,e[1]=n+r*o,e[5]=a*c,e[9]=s-t*o,e[2]=-a*h,e[6]=o,e[10]=a*l}else if("ZYX"===t.order){const t=a*c,n=a*u,r=o*c,s=o*u;e[0]=l*c,e[4]=r*h-n,e[8]=t*h+s,e[1]=l*u,e[5]=s*h+t,e[9]=n*h-r,e[2]=-h,e[6]=o*l,e[10]=a*l}else if("YZX"===t.order){const t=a*l,n=a*h,r=o*l,s=o*h;e[0]=l*c,e[4]=s-t*u,e[8]=r*u+n,e[1]=u,e[5]=a*c,e[9]=-o*c,e[2]=-h*c,e[6]=n*u+r,e[10]=t-s*u}else if("XZY"===t.order){const t=a*l,n=a*h,r=o*l,s=o*h;e[0]=l*c,e[4]=-u,e[8]=h*c,e[1]=t*u+s,e[5]=a*c,e[9]=n*u-r,e[2]=r*u-n,e[6]=o*c,e[10]=s*u+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(nt,t,it)}lookAt(t,e,n){const r=this.elements;return at.subVectors(t,e),0===at.lengthSq()&&(at.z=1),at.normalize(),rt.crossVectors(n,at),0===rt.lengthSq()&&(1===Math.abs(n.z)?at.x+=1e-4:at.z+=1e-4,at.normalize(),rt.crossVectors(n,at)),rt.normalize(),st.crossVectors(at,rt),r[0]=rt.x,r[4]=st.x,r[8]=at.x,r[1]=rt.y,r[5]=st.y,r[9]=at.y,r[2]=rt.z,r[6]=st.z,r[10]=at.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,r=e.elements,s=this.elements,a=n[0],o=n[4],l=n[8],h=n[12],c=n[1],u=n[5],d=n[9],p=n[13],g=n[2],y=n[6],_=n[10],E=n[14],T=n[3],A=n[7],C=n[11],P=n[15],R=r[0],I=r[4],D=r[8],N=r[12],z=r[1],O=r[5],B=r[9],F=r[13],H=r[2],U=r[6],G=r[10],V=r[14],k=r[3],W=r[7],j=r[11],X=r[15];return s[0]=a*R+o*z+l*H+h*k,s[4]=a*I+o*O+l*U+h*W,s[8]=a*D+o*B+l*G+h*j,s[12]=a*N+o*F+l*V+h*X,s[1]=c*R+u*z+d*H+p*k,s[5]=c*I+u*O+d*U+p*W,s[9]=c*D+u*B+d*G+p*j,s[13]=c*N+u*F+d*V+p*X,s[2]=g*R+y*z+_*H+E*k,s[6]=g*I+y*O+_*U+E*W,s[10]=g*D+y*B+_*G+E*j,s[14]=g*N+y*F+_*V+E*X,s[3]=T*R+A*z+C*H+P*k,s[7]=T*I+A*O+C*U+P*W,s[11]=T*D+A*B+C*G+P*j,s[15]=T*N+A*F+C*V+P*X,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],r=t[8],s=t[12],a=t[1],o=t[5],l=t[9],h=t[13],c=t[2],u=t[6],d=t[10],p=t[14];return t[3]*(+s*l*u-r*h*u-s*o*d+n*h*d+r*o*p-n*l*p)+t[7]*(+e*l*p-e*h*d+s*a*d-r*a*p+r*h*c-s*l*c)+t[11]*(+e*h*u-e*o*p-s*a*u+n*a*p+s*o*c-n*h*c)+t[15]*(-r*o*c-e*l*u+e*o*d+r*a*u-n*a*d+n*l*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const r=this.elements;return t.isVector3?(r[12]=t.x,r[13]=t.y,r[14]=t.z):(r[12]=t,r[13]=e,r[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],s=t[3],a=t[4],o=t[5],l=t[6],h=t[7],c=t[8],u=t[9],d=t[10],p=t[11],g=t[12],y=t[13],_=t[14],E=t[15],T=u*_*h-y*d*h+y*l*p-o*_*p-u*l*E+o*d*E,A=g*d*h-c*_*h-g*l*p+a*_*p+c*l*E-a*d*E,C=c*y*h-g*u*h+g*o*p-a*y*p-c*o*E+a*u*E,P=g*u*l-c*y*l-g*o*d+a*y*d+c*o*_-a*u*_,R=e*T+n*A+r*C+s*P;if(0===R)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const I=1/R;return t[0]=T*I,t[1]=(y*d*s-u*_*s-y*r*p+n*_*p+u*r*E-n*d*E)*I,t[2]=(o*_*s-y*l*s+y*r*h-n*_*h-o*r*E+n*l*E)*I,t[3]=(u*l*s-o*d*s-u*r*h+n*d*h+o*r*p-n*l*p)*I,t[4]=A*I,t[5]=(c*_*s-g*d*s+g*r*p-e*_*p-c*r*E+e*d*E)*I,t[6]=(g*l*s-a*_*s-g*r*h+e*_*h+a*r*E-e*l*E)*I,t[7]=(a*d*s-c*l*s+c*r*h-e*d*h-a*r*p+e*l*p)*I,t[8]=C*I,t[9]=(g*u*s-c*y*s-g*n*p+e*y*p+c*n*E-e*u*E)*I,t[10]=(a*y*s-g*o*s+g*n*h-e*y*h-a*n*E+e*o*E)*I,t[11]=(c*o*s-a*u*s-c*n*h+e*u*h+a*n*p-e*o*p)*I,t[12]=P*I,t[13]=(c*y*r-g*u*r+g*n*d-e*y*d-c*n*_+e*u*_)*I,t[14]=(g*o*r-a*y*r-g*n*l+e*y*l+a*n*_-e*o*_)*I,t[15]=(a*u*r-c*o*r+c*n*l-e*u*l-a*n*d+e*o*d)*I,this}scale(t){const e=this.elements,n=t.x,r=t.y,s=t.z;return e[0]*=n,e[4]*=r,e[8]*=s,e[1]*=n,e[5]*=r,e[9]*=s,e[2]*=n,e[6]*=r,e[10]*=s,e[3]*=n,e[7]*=r,e[11]*=s,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],r=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,r))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),r=Math.sin(e),s=1-n,a=t.x,o=t.y,l=t.z,h=s*a,c=s*o;return this.set(h*a+n,h*o-r*l,h*l+r*o,0,h*o+r*l,c*o+n,c*l-r*a,0,h*l-r*o,c*l+r*a,s*l*l+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n){return this.set(1,e,n,0,t,1,n,0,t,e,1,0,0,0,0,1),this}compose(t,e,n){const r=this.elements,s=e._x,a=e._y,o=e._z,l=e._w,h=s+s,c=a+a,u=o+o,d=s*h,p=s*c,g=s*u,y=a*c,_=a*u,E=o*u,T=l*h,A=l*c,C=l*u,P=n.x,R=n.y,I=n.z;return r[0]=(1-(y+E))*P,r[1]=(p+C)*P,r[2]=(g-A)*P,r[3]=0,r[4]=(p-C)*R,r[5]=(1-(d+E))*R,r[6]=(_+T)*R,r[7]=0,r[8]=(g+A)*I,r[9]=(_-T)*I,r[10]=(1-(d+y))*I,r[11]=0,r[12]=t.x,r[13]=t.y,r[14]=t.z,r[15]=1,this}decompose(t,e,n){const r=this.elements;let s=K.set(r[0],r[1],r[2]).length();const a=K.set(r[4],r[5],r[6]).length(),o=K.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),t.x=r[12],t.y=r[13],t.z=r[14],$.copy(this);const l=1/s,h=1/a,c=1/o;return $.elements[0]*=l,$.elements[1]*=l,$.elements[2]*=l,$.elements[4]*=h,$.elements[5]*=h,$.elements[6]*=h,$.elements[8]*=c,$.elements[9]*=c,$.elements[10]*=c,e.setFromRotationMatrix($),n.x=s,n.y=a,n.z=o,this}makePerspective(t,e,n,r,s,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements,l=2*s/(e-t),h=2*s/(n-r),c=(e+t)/(e-t),u=(n+r)/(n-r),d=-(a+s)/(a-s),p=-2*a*s/(a-s);return o[0]=l,o[4]=0,o[8]=c,o[12]=0,o[1]=0,o[5]=h,o[9]=u,o[13]=0,o[2]=0,o[6]=0,o[10]=d,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(t,e,n,r,s,a){const o=this.elements,l=1/(e-t),h=1/(n-r),c=1/(a-s),u=(e+t)*l,d=(n+r)*h,p=(a+s)*c;return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-u,o[1]=0,o[5]=2*h,o[9]=0,o[13]=-d,o[2]=0,o[6]=0,o[10]=-2*c,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let r=0;r<16;r++)if(e[r]!==n[r])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}et.prototype.isMatrix4=!0;const K=new S,$=new et,nt=new S(0,0,0),it=new S(1,1,1),rt=new S,st=new S,at=new S,ot=new et,lt=new M;class ut{constructor(t=0,e=0,n=0,r=ut.DefaultOrder){this._x=t,this._y=e,this._z=n,this._order=r}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,r){return this._x=t,this._y=e,this._z=n,this._order=r||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e,n){const r=t.elements,s=r[0],a=r[4],o=r[8],h=r[1],c=r[5],u=r[9],d=r[2],p=r[6],g=r[10];switch(e=e||this._order){case"XYZ":this._y=Math.asin(l(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,g),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(p,c),this._z=0);break;case"YXZ":this._x=Math.asin(-l(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(o,g),this._z=Math.atan2(h,c)):(this._y=Math.atan2(-d,s),this._z=0);break;case"ZXY":this._x=Math.asin(l(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(-d,g),this._z=Math.atan2(-a,c)):(this._y=0,this._z=Math.atan2(h,s));break;case"ZYX":this._y=Math.asin(-l(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(p,g),this._z=Math.atan2(h,s)):(this._x=0,this._z=Math.atan2(-a,c));break;case"YZX":this._z=Math.asin(l(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-d,s)):(this._x=0,this._y=Math.atan2(o,g));break;case"XZY":this._z=Math.asin(-l(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(p,c),this._y=Math.atan2(o,s)):(this._x=Math.atan2(-u,g),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!1!==n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return ot.makeRotationFromQuaternion(t),this.setFromRotationMatrix(ot,e,n)}setFromVector3(t,e){return this.set(t.x,t.y,t.z,e||this._order)}reorder(t){return lt.setFromEuler(this),this.setFromQuaternion(lt,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new S(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}ut.prototype.isEuler=!0,ut.DefaultOrder="XYZ",ut.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class dt{constructor(){this.mask=1}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}}let ht=0;const ct=new S,pt=new M,mt=new et,ft=new S,gt=new S,vt=new S,yt=new M,xt=new S(1,0,0),_t=new S(0,1,0),bt=new S(0,0,1),wt={type:"added"},Mt={type:"removed"};class Tt extends i{constructor(){super(),Object.defineProperty(this,"id",{value:ht++}),this.uuid=o(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Tt.DefaultUp.clone();const t=new S,e=new ut,n=new M,r=new S(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new et},normalMatrix:{value:new f}}),this.matrix=new et,this.matrixWorld=new et,this.matrixAutoUpdate=Tt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new dt,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return pt.setFromAxisAngle(t,e),this.quaternion.multiply(pt),this}rotateOnWorldAxis(t,e){return pt.setFromAxisAngle(t,e),this.quaternion.premultiply(pt),this}rotateX(t){return this.rotateOnAxis(xt,t)}rotateY(t){return this.rotateOnAxis(_t,t)}rotateZ(t){return this.rotateOnAxis(bt,t)}translateOnAxis(t,e){return ct.copy(t).applyQuaternion(this.quaternion),this.position.add(ct.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(xt,t)}translateY(t){return this.translateOnAxis(_t,t)}translateZ(t){return this.translateOnAxis(bt,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(mt.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?ft.copy(t):ft.set(t,e,n);const r=this.parent;this.updateWorldMatrix(!0,!1),gt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?mt.lookAt(gt,ft,this.up):mt.lookAt(ft,gt,this.up),this.quaternion.setFromRotationMatrix(mt),r&&(mt.extractRotation(r.matrixWorld),pt.setFromRotationMatrix(mt),this.quaternion.premultiply(pt.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(wt)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Mt)),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(Mt)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),mt.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),mt.multiply(t.parent.matrixWorld)),t.applyMatrix4(mt),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,r=this.children.length;n<r;n++){const r=this.children[n].getObjectByProperty(t,e);if(void 0!==r)return r}}getWorldPosition(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new S),this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new M),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(gt,t,vt),t}getWorldScale(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new S),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(gt,yt,t),t}getWorldDirection(t){void 0===t&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new S),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateWorldMatrix(!1,!0)}}toJSON(t){const e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};function s(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(r.instanceColor=this.instanceColor.toJSON())),this.isMesh||this.isLine||this.isPoints){r.geometry=s(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,r=n.length;e<r;e++){const r=n[e];s(t.shapes,r)}else s(t.shapes,n)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(s(t.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,r=this.material.length;n<r;n++)e.push(s(t.materials,this.material[n]));r.material=e}else r.material=s(t.materials,this.material);if(this.children.length>0){r.children=[];for(let e=0;e<this.children.length;e++)r.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){r.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];r.animations.push(s(t.animations,n))}}if(e){const e=a(t.geometries),r=a(t.materials),s=a(t.textures),o=a(t.images),l=a(t.shapes),h=a(t.skeletons),c=a(t.animations);e.length>0&&(n.geometries=e),r.length>0&&(n.materials=r),s.length>0&&(n.textures=s),o.length>0&&(n.images=o),l.length>0&&(n.shapes=l),h.length>0&&(n.skeletons=h),c.length>0&&(n.animations=c)}return n.object=r,n;function a(t){const e=[];for(const n in t){const r=t[n];delete r.metadata,e.push(r)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let n=0;n<t.children.length;n++){const e=t.children[n];this.add(e.clone())}return this}}Tt.DefaultUp=new S(0,1,0),Tt.DefaultMatrixAutoUpdate=!0,Tt.prototype.isObject3D=!0;const St=new S,Et=new S,Lt=new f;class Pt{constructor(t=new S(1,0,0),e=0){this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,r){return this.normal.set(t,e,n),this.constant=r,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const r=St.subVectors(n,e).cross(Et.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(r,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return void 0===e&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new S),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){void 0===e&&(console.warn("THREE.Plane: .intersectLine() target is now required"),e=new S);const n=t.delta(St),r=this.normal.dot(n);if(0===r)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const s=-(t.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:e.copy(n).multiplyScalar(s).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return void 0===t&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new S),t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||Lt.getNormalMatrix(t),r=this.coplanarPoint(St).applyMatrix4(t),s=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(s),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}Pt.prototype.isPlane=!0;const At=new S,Ct=new S,Rt=new S,It=new S,Dt=new S,Nt=new S,zt=new S,Ot=new S,Bt=new S,Ft=new S;class Gt{constructor(t=new S,e=new S,n=new S){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,r){void 0===r&&(console.warn("THREE.Triangle: .getNormal() target is now required"),r=new S),r.subVectors(n,e),At.subVectors(t,e),r.cross(At);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(t,e,n,r,s){At.subVectors(r,e),Ct.subVectors(n,e),Rt.subVectors(t,e);const a=At.dot(At),o=At.dot(Ct),l=At.dot(Rt),h=Ct.dot(Ct),c=Ct.dot(Rt),u=a*h-o*o;if(void 0===s&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),s=new S),0===u)return s.set(-2,-1,-1);const d=1/u,p=(h*l-o*c)*d,g=(a*c-o*l)*d;return s.set(1-p-g,g,p)}static containsPoint(t,e,n,r){return this.getBarycoord(t,e,n,r,It),It.x>=0&&It.y>=0&&It.x+It.y<=1}static getUV(t,e,n,r,s,a,o,l){return this.getBarycoord(t,e,n,r,It),l.set(0,0),l.addScaledVector(s,It.x),l.addScaledVector(a,It.y),l.addScaledVector(o,It.z),l}static isFrontFacing(t,e,n,r){return At.subVectors(n,e),Ct.subVectors(t,e),At.cross(Ct).dot(r)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,r){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[r]),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return At.subVectors(this.c,this.b),Ct.subVectors(this.a,this.b),.5*At.cross(Ct).length()}getMidpoint(t){return void 0===t&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new S),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Gt.getNormal(this.a,this.b,this.c,t)}getPlane(t){return void 0===t&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new Pt),t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Gt.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,r,s){return Gt.getUV(t,this.a,this.b,this.c,e,n,r,s)}containsPoint(t){return Gt.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Gt.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),e=new S);const n=this.a,r=this.b,s=this.c;let a,o;Dt.subVectors(r,n),Nt.subVectors(s,n),Ot.subVectors(t,n);const l=Dt.dot(Ot),h=Nt.dot(Ot);if(l<=0&&h<=0)return e.copy(n);Bt.subVectors(t,r);const c=Dt.dot(Bt),u=Nt.dot(Bt);if(c>=0&&u<=c)return e.copy(r);const d=l*u-c*h;if(d<=0&&l>=0&&c<=0)return a=l/(l-c),e.copy(n).addScaledVector(Dt,a);Ft.subVectors(t,s);const p=Dt.dot(Ft),g=Nt.dot(Ft);if(g>=0&&p<=g)return e.copy(s);const y=p*h-l*g;if(y<=0&&h>=0&&g<=0)return o=h/(h-g),e.copy(n).addScaledVector(Nt,o);const _=c*g-p*u;if(_<=0&&u-c>=0&&p-g>=0)return zt.subVectors(s,r),o=(u-c)/(u-c+(p-g)),e.copy(r).addScaledVector(zt,o);const E=1/(_+y+d);return a=y*E,o=d*E,e.copy(n).addScaledVector(Dt,a).addScaledVector(Nt,o)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let Ht=0;function Ut(){Object.defineProperty(this,"id",{value:Ht++}),this.uuid=o(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}Ut.prototype=Object.assign(Object.create(i.prototype),{constructor:Ut,isMaterial:!0,onBuild:function(){},onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;continue}const r=this[e];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}},toJSON:function(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(t){const e=[];for(const n in t){const r=t[n];delete r.metadata,e.push(r)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.morphNormals&&(n.morphNormals=!0),!0===this.skinning&&(n.skinning=!0),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e){const e=r(t.textures),s=r(t.images);e.length>0&&(n.textures=e),s.length>0&&(n.images=s)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let r=0;r!==t;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(Ut.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}});const Vt={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},kt={h:0,s:0,l:0},Wt={h:0,s:0,l:0};function jt(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}function qt(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function Xt(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class Jt{constructor(t,e,n){return void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,e,n){return this.r=t,this.g=e,this.b=n,this}setHSL(t,e,n){if(t=function(t,e){return(t%e+e)%e}(t,1),e=l(e,0,1),n=l(n,0,1),0===e)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,s=2*n-r;this.r=jt(s,r,t+1/3),this.g=jt(s,r,t),this.b=jt(s,r,t-1/3)}return this}setStyle(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;const r=n[1],s=n[2];switch(r){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,e(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,e(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s)){const n=parseFloat(t[1])/360,r=parseInt(t[2],10)/100,s=parseInt(t[3],10)/100;return e(t[4]),this.setHSL(n,r,s)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=n[1],e=t.length;if(3===e)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===e)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const e=Vt[t.toLowerCase()];return void 0!==e?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,e=2){return this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}copyLinearToGamma(t,e=2){const n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=qt(t.r),this.g=qt(t.g),this.b=qt(t.b),this}copyLinearToSRGB(t){return this.r=Xt(t.r),this.g=Xt(t.g),this.b=Xt(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){void 0===t&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});const e=this.r,n=this.g,r=this.b,s=Math.max(e,n,r),a=Math.min(e,n,r);let o,l;const h=(a+s)/2;if(a===s)o=0,l=0;else{const t=s-a;switch(l=h<=.5?t/(s+a):t/(2-s-a),s){case e:o=(n-r)/t+(n<r?6:0);break;case n:o=(r-e)/t+2;break;case r:o=(e-n)/t+4}o/=6}return t.h=o,t.s=l,t.l=h,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,e,n){return this.getHSL(kt),kt.h+=t,kt.s+=e,kt.l+=n,this.setHSL(kt.h,kt.s,kt.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(kt),t.getHSL(Wt);const n=h(kt.h,Wt.h,e),r=h(kt.s,Wt.s,e),s=h(kt.l,Wt.l,e);return this.setHSL(n,r,s),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Jt.NAMES=Vt,Jt.prototype.isColor=!0,Jt.prototype.r=1,Jt.prototype.g=1,Jt.prototype.b=1;class Qt extends Ut{constructor(t){super(),this.type="MeshBasicMaterial",this.color=new Jt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this}}Qt.prototype.isMeshBasicMaterial=!0;const Yt=new S,Zt=new m;class te{constructor(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0,this.onUploadCallback=function(){}}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[t+r]=e.array[n+r];return this}copyArray(t){return this.array.set(t),this}copyColorsArray(t){const e=this.array;let n=0;for(let r=0,s=t.length;r<s;r++){let s=t[r];void 0===s&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),s=new Jt),e[n++]=s.r,e[n++]=s.g,e[n++]=s.b}return this}copyVector2sArray(t){const e=this.array;let n=0;for(let r=0,s=t.length;r<s;r++){let s=t[r];void 0===s&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),s=new m),e[n++]=s.x,e[n++]=s.y}return this}copyVector3sArray(t){const e=this.array;let n=0;for(let r=0,s=t.length;r<s;r++){let s=t[r];void 0===s&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),s=new S),e[n++]=s.x,e[n++]=s.y,e[n++]=s.z}return this}copyVector4sArray(t){const e=this.array;let n=0;for(let r=0,s=t.length;r<s;r++){let s=t[r];void 0===s&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),s=new b),e[n++]=s.x,e[n++]=s.y,e[n++]=s.z,e[n++]=s.w}return this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)Zt.fromBufferAttribute(this,e),Zt.applyMatrix3(t),this.setXY(e,Zt.x,Zt.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)Yt.fromBufferAttribute(this,e),Yt.applyMatrix3(t),this.setXYZ(e,Yt.x,Yt.y,Yt.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)Yt.x=this.getX(e),Yt.y=this.getY(e),Yt.z=this.getZ(e),Yt.applyMatrix4(t),this.setXYZ(e,Yt.x,Yt.y,Yt.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Yt.x=this.getX(e),Yt.y=this.getY(e),Yt.z=this.getZ(e),Yt.applyNormalMatrix(t),this.setXYZ(e,Yt.x,Yt.y,Yt.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Yt.x=this.getX(e),Yt.y=this.getY(e),Yt.z=this.getZ(e),Yt.transformDirection(t),this.setXYZ(e,Yt.x,Yt.y,Yt.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){return this.array[t*this.itemSize]}setX(t,e){return this.array[t*this.itemSize]=e,this}getY(t){return this.array[t*this.itemSize+1]}setY(t,e){return this.array[t*this.itemSize+1]=e,this}getZ(t){return this.array[t*this.itemSize+2]}setZ(t,e){return this.array[t*this.itemSize+2]=e,this}getW(t){return this.array[t*this.itemSize+3]}setW(t,e){return this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this}setXYZW(t,e,n,r,s){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this.array[t+3]=s,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),35044!==this.usage&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}}te.prototype.isBufferAttribute=!0;class ee extends te{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class ne extends te{constructor(t,e,n){super(new Uint32Array(t),e,n)}}(class extends te{constructor(t,e,n){super(new Uint16Array(t),e,n)}}).prototype.isFloat16BufferAttribute=!0;class ie extends te{constructor(t,e,n){super(new Float32Array(t),e,n)}}function Kt(t){if(0===t.length)return-1/0;let e=t[0];for(let n=1,r=t.length;n<r;++n)t[n]>e&&(e=t[n]);return e}let $t=0;const re=new et,se=new Tt,ae=new S,oe=new L,le=new L,he=new S;class de extends i{constructor(){super(),Object.defineProperty(this,"id",{value:$t++}),this.uuid=o(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Kt(t)>65535?ne:ee)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new f).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(t),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}rotateX(t){return re.makeRotationX(t),this.applyMatrix4(re),this}rotateY(t){return re.makeRotationY(t),this.applyMatrix4(re),this}rotateZ(t){return re.makeRotationZ(t),this.applyMatrix4(re),this}translate(t,e,n){return re.makeTranslation(t,e,n),this.applyMatrix4(re),this}scale(t,e,n){return re.makeScale(t,e,n),this.applyMatrix4(re),this}lookAt(t){return se.lookAt(t),se.updateMatrix(),this.applyMatrix4(se.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ae).negate(),this.translate(ae.x,ae.y,ae.z),this}setFromPoints(t){const e=[];for(let n=0,r=t.length;n<r;n++){const r=t[n];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new ie(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new L);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new S(-1/0,-1/0,-1/0),new S(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,r=e.length;n<r;n++){const t=e[n];oe.setFromBufferAttribute(t),this.morphTargetsRelative?(he.addVectors(this.boundingBox.min,oe.min),this.boundingBox.expandByPoint(he),he.addVectors(this.boundingBox.max,oe.max),this.boundingBox.expandByPoint(he)):(this.boundingBox.expandByPoint(oe.min),this.boundingBox.expandByPoint(oe.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new q);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new S,1/0);if(t){const n=this.boundingSphere.center;if(oe.setFromBufferAttribute(t),e)for(let t=0,s=e.length;t<s;t++){const n=e[t];le.setFromBufferAttribute(n),this.morphTargetsRelative?(he.addVectors(oe.min,le.min),oe.expandByPoint(he),he.addVectors(oe.max,le.max),oe.expandByPoint(he)):(oe.expandByPoint(le.min),oe.expandByPoint(le.max))}oe.getCenter(n);let r=0;for(let e=0,s=t.count;e<s;e++)he.fromBufferAttribute(t,e),r=Math.max(r,n.distanceToSquared(he));if(e)for(let s=0,a=e.length;s<a;s++){const a=e[s],o=this.morphTargetsRelative;for(let e=0,s=a.count;e<s;e++)he.fromBufferAttribute(a,e),o&&(ae.fromBufferAttribute(t,e),he.add(ae)),r=Math.max(r,n.distanceToSquared(he))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeFaceNormals(){}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=t.array,r=e.position.array,s=e.normal.array,a=e.uv.array,o=r.length/3;void 0===e.tangent&&this.setAttribute("tangent",new te(new Float32Array(4*o),4));const l=e.tangent.array,h=[],c=[];for(let z=0;z<o;z++)h[z]=new S,c[z]=new S;const u=new S,d=new S,p=new S,g=new m,y=new m,_=new m,E=new S,T=new S;function A(t,e,n){u.fromArray(r,3*t),d.fromArray(r,3*e),p.fromArray(r,3*n),g.fromArray(a,2*t),y.fromArray(a,2*e),_.fromArray(a,2*n),d.sub(u),p.sub(u),y.sub(g),_.sub(g);const s=1/(y.x*_.y-_.x*y.y);isFinite(s)&&(E.copy(d).multiplyScalar(_.y).addScaledVector(p,-y.y).multiplyScalar(s),T.copy(p).multiplyScalar(y.x).addScaledVector(d,-_.x).multiplyScalar(s),h[t].add(E),h[e].add(E),h[n].add(E),c[t].add(T),c[e].add(T),c[n].add(T))}let C=this.groups;0===C.length&&(C=[{start:0,count:n.length}]);for(let z=0,O=C.length;z<O;++z){const t=C[z],e=t.start;for(let r=e,s=e+t.count;r<s;r+=3)A(n[r+0],n[r+1],n[r+2])}const P=new S,R=new S,I=new S,D=new S;function N(t){I.fromArray(s,3*t),D.copy(I);const e=h[t];P.copy(e),P.sub(I.multiplyScalar(I.dot(e))).normalize(),R.crossVectors(D,e);const n=R.dot(c[t])<0?-1:1;l[4*t]=P.x,l[4*t+1]=P.y,l[4*t+2]=P.z,l[4*t+3]=n}for(let z=0,O=C.length;z<O;++z){const t=C[z],e=t.start;for(let r=e,s=e+t.count;r<s;r+=3)N(n[r+0]),N(n[r+1]),N(n[r+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new te(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const r=new S,s=new S,a=new S,o=new S,l=new S,h=new S,c=new S,u=new S;if(t)for(let d=0,p=t.count;d<p;d+=3){const p=t.getX(d+0),g=t.getX(d+1),y=t.getX(d+2);r.fromBufferAttribute(e,p),s.fromBufferAttribute(e,g),a.fromBufferAttribute(e,y),c.subVectors(a,s),u.subVectors(r,s),c.cross(u),o.fromBufferAttribute(n,p),l.fromBufferAttribute(n,g),h.fromBufferAttribute(n,y),o.add(c),l.add(c),h.add(c),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(g,l.x,l.y,l.z),n.setXYZ(y,h.x,h.y,h.z)}else for(let t=0,d=e.count;t<d;t+=3)r.fromBufferAttribute(e,t+0),s.fromBufferAttribute(e,t+1),a.fromBufferAttribute(e,t+2),c.subVectors(a,s),u.subVectors(r,s),c.cross(u),n.setXYZ(t+0,c.x,c.y,c.z),n.setXYZ(t+1,c.x,c.y,c.z),n.setXYZ(t+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const r in n){if(void 0===t.attributes[r])continue;const s=n[r].array,a=t.attributes[r],o=a.array,l=a.itemSize*e,h=Math.min(o.length,s.length-l);for(let t=0,e=l;t<h;t++,e++)s[e]=o[t]}return this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)he.fromBufferAttribute(t,e),he.normalize(),t.setXYZ(e,he.x,he.y,he.z)}toNonIndexed(){function t(t,e){const n=t.array,r=t.itemSize,s=t.normalized,a=new n.constructor(e.length*r);let o=0,l=0;for(let h=0,c=e.length;h<c;h++){o=e[h]*r;for(let t=0;t<r;t++)a[l++]=n[o++]}return new te(a,r,s)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new de,n=this.index.array,r=this.attributes;for(const o in r){const s=t(r[o],n);e.setAttribute(o,s)}const s=this.morphAttributes;for(const o in s){const r=[],a=s[o];for(let e=0,s=a.length;e<s;e++){const s=t(a[e],n);r.push(s)}e.morphAttributes[o]=r}e.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,l=a.length;o<l;o++){const t=a[o];e.addGroup(t.start,t.count,t.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const l in n){const e=n[l];t.data.attributes[l]=e.toJSON(t.data)}const r={};let s=!1;for(const l in this.morphAttributes){const e=this.morphAttributes[l],n=[];for(let r=0,s=e.length;r<s;r++){const s=e[r];n.push(s.toJSON(t.data))}n.length>0&&(r[l]=n,s=!0)}s&&(t.data.morphAttributes=r,t.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(t.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return null!==o&&(t.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),t}clone(){return(new de).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const r=t.attributes;for(const h in r){const t=r[h];this.setAttribute(h,t.clone(e))}const s=t.morphAttributes;for(const h in s){const t=[],n=s[h];for(let r=0,s=n.length;r<s;r++)t.push(n[r].clone(e));this.morphAttributes[h]=t}this.morphTargetsRelative=t.morphTargetsRelative;const a=t.groups;for(let h=0,c=a.length;h<c;h++){const t=a[h];this.addGroup(t.start,t.count,t.materialIndex)}const o=t.boundingBox;null!==o&&(this.boundingBox=o.clone());const l=t.boundingSphere;return null!==l&&(this.boundingSphere=l.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}de.prototype.isBufferGeometry=!0;const ce=new et,ue=new tt,pe=new q,me=new S,fe=new S,ge=new S,ve=new S,ye=new S,xe=new S,_e=new S,be=new S,we=new S,Me=new m,Se=new m,Ee=new m,Te=new S,Le=new S;class Pe extends Tt{constructor(t=new de,e=new Qt){super(),this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(t,e){const n=this.geometry,r=this.material,s=this.matrixWorld;if(void 0===r)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),pe.copy(n.boundingSphere),pe.applyMatrix4(s),!1===t.ray.intersectsSphere(pe))return;if(ce.copy(s).invert(),ue.copy(t.ray).applyMatrix4(ce),null!==n.boundingBox&&!1===ue.intersectsBox(n.boundingBox))return;let a;if(n.isBufferGeometry){const s=n.index,o=n.attributes.position,l=n.morphAttributes.position,h=n.morphTargetsRelative,c=n.attributes.uv,u=n.attributes.uv2,d=n.groups,p=n.drawRange;if(null!==s)if(Array.isArray(r))for(let n=0,g=d.length;n<g;n++){const g=d[n],y=r[g.materialIndex];for(let n=Math.max(g.start,p.start),r=Math.min(g.start+g.count,p.start+p.count);n<r;n+=3){const r=s.getX(n),d=s.getX(n+1),p=s.getX(n+2);a=Ae(this,y,t,ue,o,l,h,c,u,r,d,p),a&&(a.faceIndex=Math.floor(n/3),a.face.materialIndex=g.materialIndex,e.push(a))}}else for(let n=Math.max(0,p.start),g=Math.min(s.count,p.start+p.count);n<g;n+=3){const d=s.getX(n),p=s.getX(n+1),g=s.getX(n+2);a=Ae(this,r,t,ue,o,l,h,c,u,d,p,g),a&&(a.faceIndex=Math.floor(n/3),e.push(a))}else if(void 0!==o)if(Array.isArray(r))for(let n=0,g=d.length;n<g;n++){const s=d[n],g=r[s.materialIndex];for(let n=Math.max(s.start,p.start),r=Math.min(s.start+s.count,p.start+p.count);n<r;n+=3)a=Ae(this,g,t,ue,o,l,h,c,u,n,n+1,n+2),a&&(a.faceIndex=Math.floor(n/3),a.face.materialIndex=s.materialIndex,e.push(a))}else for(let n=Math.max(0,p.start),g=Math.min(o.count,p.start+p.count);n<g;n+=3)a=Ae(this,r,t,ue,o,l,h,c,u,n,n+1,n+2),a&&(a.faceIndex=Math.floor(n/3),e.push(a))}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function Ae(t,e,n,r,s,a,o,l,h,c,u,d){me.fromBufferAttribute(s,c),fe.fromBufferAttribute(s,u),ge.fromBufferAttribute(s,d);const p=t.morphTargetInfluences;if(e.morphTargets&&a&&p){_e.set(0,0,0),be.set(0,0,0),we.set(0,0,0);for(let t=0,e=a.length;t<e;t++){const e=p[t],n=a[t];0!==e&&(ve.fromBufferAttribute(n,c),ye.fromBufferAttribute(n,u),xe.fromBufferAttribute(n,d),o?(_e.addScaledVector(ve,e),be.addScaledVector(ye,e),we.addScaledVector(xe,e)):(_e.addScaledVector(ve.sub(me),e),be.addScaledVector(ye.sub(fe),e),we.addScaledVector(xe.sub(ge),e)))}me.add(_e),fe.add(be),ge.add(we)}t.isSkinnedMesh&&e.skinning&&(t.boneTransform(c,me),t.boneTransform(u,fe),t.boneTransform(d,ge));const g=function(t,e,n,r,s,a,o,l){let h;if(h=1===e.side?r.intersectTriangle(o,a,s,!0,l):r.intersectTriangle(s,a,o,2!==e.side,l),null===h)return null;Le.copy(l),Le.applyMatrix4(t.matrixWorld);const c=n.ray.origin.distanceTo(Le);return c<n.near||c>n.far?null:{distance:c,point:Le.clone(),object:t}}(t,e,n,r,me,fe,ge,Te);if(g){l&&(Me.fromBufferAttribute(l,c),Se.fromBufferAttribute(l,u),Ee.fromBufferAttribute(l,d),g.uv=Gt.getUV(Te,me,fe,ge,Me,Se,Ee,new m)),h&&(Me.fromBufferAttribute(h,c),Se.fromBufferAttribute(h,u),Ee.fromBufferAttribute(h,d),g.uv2=Gt.getUV(Te,me,fe,ge,Me,Se,Ee,new m));const t={a:c,b:u,c:d,normal:new S,materialIndex:0};Gt.getNormal(me,fe,ge,t.normal),g.face=t}return g}Pe.prototype.isMesh=!0;class Ie extends de{constructor(t=1,e=1,n=1,r=1,s=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:r,heightSegments:s,depthSegments:a};const o=this;r=Math.floor(r),s=Math.floor(s),a=Math.floor(a);const l=[],h=[],c=[],u=[];let d=0,p=0;function g(t,e,n,r,s,a,g,y,_,E,T){const A=a/_,C=g/E,P=a/2,R=g/2,I=y/2,D=_+1,N=E+1;let z=0,O=0;const B=new S;for(let o=0;o<N;o++){const a=o*C-R;for(let l=0;l<D;l++){const d=l*A-P;B[t]=d*r,B[e]=a*s,B[n]=I,h.push(B.x,B.y,B.z),B[t]=0,B[e]=0,B[n]=y>0?1:-1,c.push(B.x,B.y,B.z),u.push(l/_),u.push(1-o/E),z+=1}}for(let o=0;o<E;o++)for(let t=0;t<_;t++){const e=d+t+D*o,n=d+t+D*(o+1),r=d+(t+1)+D*(o+1),s=d+(t+1)+D*o;l.push(e,n,s),l.push(n,r,s),O+=6}o.addGroup(p,O,T),p+=O,d+=z}g("z","y","x",-1,-1,n,e,t,a,s,0),g("z","y","x",1,-1,n,e,-t,a,s,1),g("x","z","y",1,1,t,n,e,r,a,2),g("x","z","y",1,-1,t,n,-e,r,a,3),g("x","y","z",1,-1,t,e,n,r,s,4),g("x","y","z",-1,-1,t,e,-n,r,s,5),this.setIndex(l),this.setAttribute("position",new ie(h,3)),this.setAttribute("normal",new ie(c,3)),this.setAttribute("uv",new ie(u,2))}}function Ce(t){const e={};for(const n in t){e[n]={};for(const r in t[n]){const s=t[n][r];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?e[n][r]=s.clone():Array.isArray(s)?e[n][r]=s.slice():e[n][r]=s}}return e}function Re(t){const e={};for(let n=0;n<t.length;n++){const r=Ce(t[n]);for(const t in r)e[t]=r[t]}return e}const De={clone:Ce,merge:Re};class Oe extends Ut{constructor(t){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Ce(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const r in this.uniforms){const n=this.uniforms[r].value;n&&n.isTexture?e.uniforms[r]={type:"t",value:n.toJSON(t).uuid}:n&&n.isColor?e.uniforms[r]={type:"c",value:n.getHex()}:n&&n.isVector2?e.uniforms[r]={type:"v2",value:n.toArray()}:n&&n.isVector3?e.uniforms[r]={type:"v3",value:n.toArray()}:n&&n.isVector4?e.uniforms[r]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?e.uniforms[r]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?e.uniforms[r]={type:"m4",value:n.toArray()}:e.uniforms[r]={value:n}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const r in this.extensions)!0===this.extensions[r]&&(n[r]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}Oe.prototype.isShaderMaterial=!0;class Fe extends Tt{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new et,this.projectionMatrix=new et,this.projectionMatrixInverse=new et}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){void 0===t&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new S),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}Fe.prototype.isCamera=!0;class Be extends Fe{constructor(t=50,e=1,n=.1,r=2e3){super(),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*a*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*s*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*a*Math.atan(Math.tan(.5*s*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,r,s,a){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*s*this.fov)/this.zoom,n=2*e,r=this.aspect*n,a=-.5*r;const o=this.view;if(null!==this.view&&this.view.enabled){const t=o.fullWidth,s=o.fullHeight;a+=o.offsetX*r/t,e-=o.offsetY*n/s,r*=o.width/t,n*=o.height/s}const l=this.filmOffset;0!==l&&(a+=t*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(a,a+r,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}Be.prototype.isPerspectiveCamera=!0;class He extends Tt{constructor(t,e,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const r=new Be(90,1,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new S(1,0,0)),this.add(r);const s=new Be(90,1,t,e);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new S(-1,0,0)),this.add(s);const a=new Be(90,1,t,e);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new S(0,1,0)),this.add(a);const o=new Be(90,1,t,e);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new S(0,-1,0)),this.add(o);const l=new Be(90,1,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new S(0,0,1)),this.add(l);const h=new Be(90,1,t,e);h.layers=this.layers,h.up.set(0,-1,0),h.lookAt(new S(0,0,-1)),this.add(h)}update(t,e){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[r,s,a,o,l,h]=this.children,c=t.xr.enabled,u=t.getRenderTarget();t.xr.enabled=!1;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,r),t.setRenderTarget(n,1),t.render(e,s),t.setRenderTarget(n,2),t.render(e,a),t.setRenderTarget(n,3),t.render(e,o),t.setRenderTarget(n,4),t.render(e,l),n.texture.generateMipmaps=d,t.setRenderTarget(n,5),t.render(e,h),t.setRenderTarget(u),t.xr.enabled=c}}class Ue extends x{constructor(t,e,n,r,s,a,o,l,h,c){super(t=void 0!==t?t:[],e=void 0!==e?e:301,n,r,s,a,o=void 0!==o?o:1022,l,h,c),this._needsFlipEnvMap=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}Ue.prototype.isCubeTexture=!0;class Ge extends w{constructor(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),super(t,t,e),e=e||{},this.texture=new Ue(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:1006,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.format=1023,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={tEquirect:{value:null}},r="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",s="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",a=new Ie(5,5,5),o=new Oe({name:"CubemapFromEquirect",uniforms:Ce(n),vertexShader:r,fragmentShader:s,side:1,blending:0});o.uniforms.tEquirect.value=e;const l=new Pe(a,o),h=e.minFilter;return 1008===e.minFilter&&(e.minFilter=1006),new He(1,10,this).update(t,l),e.minFilter=h,l.geometry.dispose(),l.material.dispose(),this}clear(t,e,n,r){const s=t.getRenderTarget();for(let a=0;a<6;a++)t.setRenderTarget(this,a),t.clear(e,n,r);t.setRenderTarget(s)}}Ge.prototype.isWebGLCubeRenderTarget=!0;class Ve extends x{constructor(t,e,n,r,s,a,o,l,h,c,u,d){super(null,a,o,l,h,c,r,s,u,d),this.image={data:t||null,width:e||1,height:n||1},this.magFilter=void 0!==h?h:1003,this.minFilter=void 0!==c?c:1003,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Ve.prototype.isDataTexture=!0;const Ne=new q,ze=new S;class je{constructor(t=new Pt,e=new Pt,n=new Pt,r=new Pt,s=new Pt,a=new Pt){this.planes=[t,e,n,r,s,a]}set(t,e,n,r,s,a){const o=this.planes;return o[0].copy(t),o[1].copy(e),o[2].copy(n),o[3].copy(r),o[4].copy(s),o[5].copy(a),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,r=n[0],s=n[1],a=n[2],o=n[3],l=n[4],h=n[5],c=n[6],u=n[7],d=n[8],p=n[9],g=n[10],y=n[11],_=n[12],E=n[13],T=n[14],A=n[15];return e[0].setComponents(o-r,u-l,y-d,A-_).normalize(),e[1].setComponents(o+r,u+l,y+d,A+_).normalize(),e[2].setComponents(o+s,u+h,y+p,A+E).normalize(),e[3].setComponents(o-s,u-h,y-p,A-E).normalize(),e[4].setComponents(o-a,u-c,y-g,A-T).normalize(),e[5].setComponents(o+a,u+c,y+g,A+T).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),Ne.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(Ne)}intersectsSprite(t){return Ne.center.set(0,0,0),Ne.radius=.7071067811865476,Ne.applyMatrix4(t.matrixWorld),this.intersectsSphere(Ne)}intersectsSphere(t){const e=this.planes,n=t.center,r=-t.radius;for(let s=0;s<6;s++)if(e[s].distanceToPoint(n)<r)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const r=e[n];if(ze.x=r.normal.x>0?t.max.x:t.min.x,ze.y=r.normal.y>0?t.max.y:t.min.y,ze.z=r.normal.z>0?t.max.z:t.min.z,r.distanceToPoint(ze)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function ke(){let t=null,e=!1,n=null,r=null;function s(e,a){n(e,a),r=t.requestAnimationFrame(s)}return{start:function(){!0!==e&&null!==n&&(r=t.requestAnimationFrame(s),e=!0)},stop:function(){t.cancelAnimationFrame(r),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function We(t,e){const n=e.isWebGL2,r=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),r.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const n=r.get(e);n&&(t.deleteBuffer(n.buffer),r.delete(e))},update:function(e,s){if(e.isGLBufferAttribute){const t=r.get(e);return void((!t||t.version<e.version)&&r.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const a=r.get(e);void 0===a?r.set(e,function(e,r){const s=e.array,a=e.usage,o=t.createBuffer();t.bindBuffer(r,o),t.bufferData(r,s,a),e.onUploadCallback();let l=5126;return s instanceof Float32Array?l=5126:s instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):s instanceof Uint16Array?e.isFloat16BufferAttribute?n?l=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):l=5123:s instanceof Int16Array?l=5122:s instanceof Uint32Array?l=5125:s instanceof Int32Array?l=5124:s instanceof Int8Array?l=5120:s instanceof Uint8Array&&(l=5121),{buffer:o,type:l,bytesPerElement:s.BYTES_PER_ELEMENT,version:e.version}}(e,s)):a.version<e.version&&(function(e,r,s){const a=r.array,o=r.updateRange;t.bindBuffer(s,e),-1===o.count?t.bufferSubData(s,0,a):(n?t.bufferSubData(s,o.offset*a.BYTES_PER_ELEMENT,a,o.offset,o.count):t.bufferSubData(s,o.offset*a.BYTES_PER_ELEMENT,a.subarray(o.offset,o.offset+o.count)),o.count=-1)}(a.buffer,e,s),a.version=e.version)}}}class Ye extends de{constructor(t=1,e=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:r};const s=t/2,a=e/2,o=Math.floor(n),l=Math.floor(r),h=o+1,c=l+1,u=t/o,d=e/l,p=[],g=[],y=[],_=[];for(let E=0;E<c;E++){const t=E*d-a;for(let e=0;e<h;e++){const n=e*u-s;g.push(n,-t,0),y.push(0,0,1),_.push(e/o),_.push(1-E/l)}}for(let E=0;E<l;E++)for(let t=0;t<o;t++){const e=t+h*E,n=t+h*(E+1),r=t+1+h*(E+1),s=t+1+h*E;p.push(e,n,s),p.push(n,r,s)}this.setIndex(p),this.setAttribute("position",new ie(g,3)),this.setAttribute("normal",new ie(y,3)),this.setAttribute("uv",new ie(_,2))}}const qe={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},Xe={common:{diffuse:{value:new Jt(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new f},uv2Transform:{value:new f},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new m(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Jt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Jt(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new f}},sprite:{diffuse:{value:new Jt(15658734)},opacity:{value:1},center:{value:new m(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new f}}},Je={basic:{uniforms:Re([Xe.common,Xe.specularmap,Xe.envmap,Xe.aomap,Xe.lightmap,Xe.fog]),vertexShader:qe.meshbasic_vert,fragmentShader:qe.meshbasic_frag},lambert:{uniforms:Re([Xe.common,Xe.specularmap,Xe.envmap,Xe.aomap,Xe.lightmap,Xe.emissivemap,Xe.fog,Xe.lights,{emissive:{value:new Jt(0)}}]),vertexShader:qe.meshlambert_vert,fragmentShader:qe.meshlambert_frag},phong:{uniforms:Re([Xe.common,Xe.specularmap,Xe.envmap,Xe.aomap,Xe.lightmap,Xe.emissivemap,Xe.bumpmap,Xe.normalmap,Xe.displacementmap,Xe.fog,Xe.lights,{emissive:{value:new Jt(0)},specular:{value:new Jt(1118481)},shininess:{value:30}}]),vertexShader:qe.meshphong_vert,fragmentShader:qe.meshphong_frag},standard:{uniforms:Re([Xe.common,Xe.envmap,Xe.aomap,Xe.lightmap,Xe.emissivemap,Xe.bumpmap,Xe.normalmap,Xe.displacementmap,Xe.roughnessmap,Xe.metalnessmap,Xe.fog,Xe.lights,{emissive:{value:new Jt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:qe.meshphysical_vert,fragmentShader:qe.meshphysical_frag},toon:{uniforms:Re([Xe.common,Xe.aomap,Xe.lightmap,Xe.emissivemap,Xe.bumpmap,Xe.normalmap,Xe.displacementmap,Xe.gradientmap,Xe.fog,Xe.lights,{emissive:{value:new Jt(0)}}]),vertexShader:qe.meshtoon_vert,fragmentShader:qe.meshtoon_frag},matcap:{uniforms:Re([Xe.common,Xe.bumpmap,Xe.normalmap,Xe.displacementmap,Xe.fog,{matcap:{value:null}}]),vertexShader:qe.meshmatcap_vert,fragmentShader:qe.meshmatcap_frag},points:{uniforms:Re([Xe.points,Xe.fog]),vertexShader:qe.points_vert,fragmentShader:qe.points_frag},dashed:{uniforms:Re([Xe.common,Xe.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:qe.linedashed_vert,fragmentShader:qe.linedashed_frag},depth:{uniforms:Re([Xe.common,Xe.displacementmap]),vertexShader:qe.depth_vert,fragmentShader:qe.depth_frag},normal:{uniforms:Re([Xe.common,Xe.bumpmap,Xe.normalmap,Xe.displacementmap,{opacity:{value:1}}]),vertexShader:qe.normal_vert,fragmentShader:qe.normal_frag},sprite:{uniforms:Re([Xe.sprite,Xe.fog]),vertexShader:qe.sprite_vert,fragmentShader:qe.sprite_frag},background:{uniforms:{uvTransform:{value:new f},t2D:{value:null}},vertexShader:qe.background_vert,fragmentShader:qe.background_frag},cube:{uniforms:Re([Xe.envmap,{opacity:{value:1}}]),vertexShader:qe.cube_vert,fragmentShader:qe.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:qe.equirect_vert,fragmentShader:qe.equirect_frag},distanceRGBA:{uniforms:Re([Xe.common,Xe.displacementmap,{referencePosition:{value:new S},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:qe.distanceRGBA_vert,fragmentShader:qe.distanceRGBA_frag},shadow:{uniforms:Re([Xe.lights,Xe.fog,{color:{value:new Jt(0)},opacity:{value:1}}]),vertexShader:qe.shadow_vert,fragmentShader:qe.shadow_frag}};function Ze(t,e,n,r,s){const a=new Jt(0);let o,l,h=0,c=null,u=0,d=null;function p(t,e){n.buffers.color.setClear(t.r,t.g,t.b,e,s)}return{getClearColor:function(){return a},setClearColor:function(t,e=1){a.set(t),h=e,p(a,h)},getClearAlpha:function(){return h},setClearAlpha:function(t){h=t,p(a,h)},render:function(n,s,g,y){let _=!0===s.isScene?s.background:null;_&&_.isTexture&&(_=e.get(_));const E=t.xr,T=E.getSession&&E.getSession();T&&"additive"===T.environmentBlendMode&&(_=null),null===_?p(a,h):_&&_.isColor&&(p(_,1),y=!0),(t.autoClear||y)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),_&&(_.isCubeTexture||306===_.mapping)?(void 0===l&&(l=new Pe(new Ie(1,1,1),new Oe({name:"BackgroundCubeMaterial",uniforms:Ce(Je.cube.uniforms),vertexShader:Je.cube.vertexShader,fragmentShader:Je.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(l)),l.material.uniforms.envMap.value=_,l.material.uniforms.flipEnvMap.value=_.isCubeTexture&&_._needsFlipEnvMap?-1:1,c===_&&u===_.version&&d===t.toneMapping||(l.material.needsUpdate=!0,c=_,u=_.version,d=t.toneMapping),n.unshift(l,l.geometry,l.material,0,0,null)):_&&_.isTexture&&(void 0===o&&(o=new Pe(new Ye(2,2),new Oe({name:"BackgroundMaterial",uniforms:Ce(Je.background.uniforms),vertexShader:Je.background.vertexShader,fragmentShader:Je.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(o)),o.material.uniforms.t2D.value=_,!0===_.matrixAutoUpdate&&_.updateMatrix(),o.material.uniforms.uvTransform.value.copy(_.matrix),c===_&&u===_.version&&d===t.toneMapping||(o.material.needsUpdate=!0,c=_,u=_.version,d=t.toneMapping),n.unshift(o,o.geometry,o.material,0,0,null))}}}function Qe(t,e,n,r){const s=t.getParameter(34921),a=r.isWebGL2?null:e.get("OES_vertex_array_object"),o=r.isWebGL2||null!==a,l={},h=p(null);let c=h;function u(e){return r.isWebGL2?t.bindVertexArray(e):a.bindVertexArrayOES(e)}function d(e){return r.isWebGL2?t.deleteVertexArray(e):a.deleteVertexArrayOES(e)}function p(t){const e=[],n=[],r=[];for(let a=0;a<s;a++)e[a]=0,n[a]=0,r[a]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:r,object:t,attributes:{},index:null}}function g(){const t=c.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function y(t){_(t,0)}function _(n,s){const a=c.newAttributes,o=c.enabledAttributes,l=c.attributeDivisors;a[n]=1,0===o[n]&&(t.enableVertexAttribArray(n),o[n]=1),l[n]!==s&&((r.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,s),l[n]=s)}function E(){const e=c.newAttributes,n=c.enabledAttributes;for(let r=0,s=n.length;r<s;r++)n[r]!==e[r]&&(t.disableVertexAttribArray(r),n[r]=0)}function T(e,n,s,a,o,l){!0!==r.isWebGL2||5124!==s&&5125!==s?t.vertexAttribPointer(e,n,s,a,o,l):t.vertexAttribIPointer(e,n,s,o,l)}function A(){C(),c!==h&&(c=h,u(c.object))}function C(){h.geometry=null,h.program=null,h.wireframe=!1}return{setup:function(s,h,d,A,C){let P=!1;if(o){const e=function(e,n,s){const o=!0===s.wireframe;let h=l[e.id];void 0===h&&(h={},l[e.id]=h);let c=h[n.id];void 0===c&&(c={},h[n.id]=c);let u=c[o];return void 0===u&&(u=p(r.isWebGL2?t.createVertexArray():a.createVertexArrayOES()),c[o]=u),u}(A,d,h);c!==e&&(c=e,u(c.object)),P=function(t,e){const n=c.attributes,r=t.attributes;let s=0;for(const a in r){const t=n[a],e=r[a];if(void 0===t)return!0;if(t.attribute!==e)return!0;if(t.data!==e.data)return!0;s++}return c.attributesNum!==s||c.index!==e}(A,C),P&&function(t,e){const n={},r=t.attributes;let s=0;for(const a in r){const t=r[a],e={};e.attribute=t,t.data&&(e.data=t.data),n[a]=e,s++}c.attributes=n,c.attributesNum=s,c.index=e}(A,C)}else{const t=!0===h.wireframe;c.geometry===A.id&&c.program===d.id&&c.wireframe===t||(c.geometry=A.id,c.program=d.id,c.wireframe=t,P=!0)}!0===s.isInstancedMesh&&(P=!0),null!==C&&n.update(C,34963),P&&(function(s,a,o,l){if(!1===r.isWebGL2&&(s.isInstancedMesh||l.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;g();const h=l.attributes,c=o.getAttributes(),u=a.defaultAttributeValues;for(const e in c){const r=c[e];if(r>=0){const a=h[e];if(void 0!==a){const e=a.normalized,s=a.itemSize,o=n.get(a);if(void 0===o)continue;const h=o.buffer,c=o.type,u=o.bytesPerElement;if(a.isInterleavedBufferAttribute){const n=a.data,o=n.stride,d=a.offset;n&&n.isInstancedInterleavedBuffer?(_(r,n.meshPerAttribute),void 0===l._maxInstanceCount&&(l._maxInstanceCount=n.meshPerAttribute*n.count)):y(r),t.bindBuffer(34962,h),T(r,s,c,e,o*u,d*u)}else a.isInstancedBufferAttribute?(_(r,a.meshPerAttribute),void 0===l._maxInstanceCount&&(l._maxInstanceCount=a.meshPerAttribute*a.count)):y(r),t.bindBuffer(34962,h),T(r,s,c,e,0,0)}else if("instanceMatrix"===e){const e=n.get(s.instanceMatrix);if(void 0===e)continue;const a=e.buffer,o=e.type;_(r+0,1),_(r+1,1),_(r+2,1),_(r+3,1),t.bindBuffer(34962,a),t.vertexAttribPointer(r+0,4,o,!1,64,0),t.vertexAttribPointer(r+1,4,o,!1,64,16),t.vertexAttribPointer(r+2,4,o,!1,64,32),t.vertexAttribPointer(r+3,4,o,!1,64,48)}else if("instanceColor"===e){const e=n.get(s.instanceColor);if(void 0===e)continue;const a=e.buffer,o=e.type;_(r,1),t.bindBuffer(34962,a),t.vertexAttribPointer(r,3,o,!1,12,0)}else if(void 0!==u){const n=u[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(r,n);break;case 3:t.vertexAttrib3fv(r,n);break;case 4:t.vertexAttrib4fv(r,n);break;default:t.vertexAttrib1fv(r,n)}}}}E()}(s,h,d,A),null!==C&&t.bindBuffer(34963,n.get(C).buffer))},reset:A,resetDefaultState:C,dispose:function(){A();for(const t in l){const e=l[t];for(const t in e){const n=e[t];for(const t in n)d(n[t].object),delete n[t];delete e[t]}delete l[t]}},releaseStatesOfGeometry:function(t){if(void 0===l[t.id])return;const e=l[t.id];for(const n in e){const t=e[n];for(const e in t)d(t[e].object),delete t[e];delete e[n]}delete l[t.id]},releaseStatesOfProgram:function(t){for(const e in l){const n=l[e];if(void 0===n[t.id])continue;const r=n[t.id];for(const t in r)d(r[t].object),delete r[t];delete n[t.id]}},initAttributes:g,enableAttribute:y,disableUnusedAttributes:E}}function Ke(t,e,n,r){const s=r.isWebGL2;let a;this.setMode=function(t){a=t},this.render=function(e,r){t.drawArrays(a,e,r),n.update(r,a,1)},this.renderInstances=function(r,o,l){if(0===l)return;let h,c;if(s)h=t,c="drawArraysInstanced";else if(h=e.get("ANGLE_instanced_arrays"),c="drawArraysInstancedANGLE",null===h)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");h[c](a,r,o,l),n.update(o,a,l)}}function $e(t,e,n){let r;function s(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let o=void 0!==n.precision?n.precision:"highp";const l=s(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const h=!0===n.logarithmicDepthBuffer,c=t.getParameter(34930),u=t.getParameter(35660),d=t.getParameter(3379),p=t.getParameter(34076),g=t.getParameter(34921),y=t.getParameter(36347),_=t.getParameter(36348),E=t.getParameter(36349),T=u>0,A=a||e.has("OES_texture_float");return{isWebGL2:a,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===e.has("EXT_texture_filter_anisotropic")){const n=e.get("EXT_texture_filter_anisotropic");r=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:s,precision:o,logarithmicDepthBuffer:h,maxTextures:c,maxVertexTextures:u,maxTextureSize:d,maxCubemapSize:p,maxAttributes:g,maxVertexUniforms:y,maxVaryings:_,maxFragmentUniforms:E,vertexTextures:T,floatFragmentTextures:A,floatVertexTextures:T&&A,maxSamples:a?t.getParameter(36183):0}}function tn(t){const e=this;let n=null,r=0,s=!1,a=!1;const o=new Pt,l=new f,h={value:null,needsUpdate:!1};function c(){h.value!==n&&(h.value=n,h.needsUpdate=r>0),e.numPlanes=r,e.numIntersection=0}function u(t,n,r,s){const a=null!==t?t.length:0;let c=null;if(0!==a){if(c=h.value,!0!==s||null===c){const e=r+4*a,s=n.matrixWorldInverse;l.getNormalMatrix(s),(null===c||c.length<e)&&(c=new Float32Array(e));for(let n=0,h=r;n!==a;++n,h+=4)o.copy(t[n]).applyMatrix4(s,l),o.normal.toArray(c,h),c[h+3]=o.constant}h.value=c,h.needsUpdate=!0}return e.numPlanes=a,e.numIntersection=0,c}this.uniform=h,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,a){const o=0!==t.length||e||0!==r||s;return s=e,n=u(t,a,0),r=t.length,o},this.beginShadows=function(){a=!0,u(null)},this.endShadows=function(){a=!1,c()},this.setState=function(e,o,l){const d=e.clippingPlanes,p=e.clipIntersection,g=e.clipShadows,y=t.get(e);if(!s||null===d||0===d.length||a&&!g)a?u(null):c();else{const t=a?0:r,e=4*t;let s=y.clippingState||null;h.value=s,s=u(d,o,e,l);for(let r=0;r!==e;++r)s[r]=n[r];y.clippingState=s,this.numIntersection=p?this.numPlanes:0,this.numPlanes+=t}}}function en(t){let e=new WeakMap;function n(t,e){return 303===e?t.mapping=301:304===e&&(t.mapping=302),t}function r(t){const n=t.target;n.removeEventListener("dispose",r);const s=e.get(n);void 0!==s&&(e.delete(n),s.dispose())}return{get:function(s){if(s&&s.isTexture){const a=s.mapping;if(303===a||304===a){if(e.has(s))return n(e.get(s).texture,s.mapping);{const a=s.image;if(a&&a.height>0){const o=t.getRenderTarget(),l=new Ge(a.height/2);return l.fromEquirectangularTexture(t,s),e.set(s,l),t.setRenderTarget(o),s.addEventListener("dispose",r),n(l.texture,s.mapping)}return null}}}return s},dispose:function(){e=new WeakMap}}}function nn(t){const e={};function n(n){if(void 0!==e[n])return e[n];let r;switch(n){case"WEBGL_depth_texture":r=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=t.getExtension(n)}return e[n]=r,r}return{has:function(t){return null!==n(t)},init:function(t){t.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float")},get:function(t){const e=n(t);return null===e&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function rn(t,e,n,r){const s={},a=new WeakMap;function o(t){const l=t.target;null!==l.index&&e.remove(l.index);for(const n in l.attributes)e.remove(l.attributes[n]);l.removeEventListener("dispose",o),delete s[l.id];const h=a.get(l);h&&(e.remove(h),a.delete(l)),r.releaseStatesOfGeometry(l),!0===l.isInstancedBufferGeometry&&delete l._maxInstanceCount,n.memory.geometries--}function l(t){const n=[],r=t.index,s=t.attributes.position;let o=0;if(null!==r){const t=r.array;o=r.version;for(let e=0,r=t.length;e<r;e+=3){const r=t[e+0],s=t[e+1],a=t[e+2];n.push(r,s,s,a,a,r)}}else{const t=s.array;o=s.version;for(let e=0,r=t.length/3-1;e<r;e+=3){const t=e+0,r=e+1,s=e+2;n.push(t,r,r,s,s,t)}}const l=new(Kt(n)>65535?ne:ee)(n,1);l.version=o;const h=a.get(t);h&&e.remove(h),a.set(t,l)}return{get:function(t,e){return!0===s[e.id]||(e.addEventListener("dispose",o),s[e.id]=!0,n.memory.geometries++),e},update:function(t){const n=t.attributes;for(const s in n)e.update(n[s],34962);const r=t.morphAttributes;for(const s in r){const t=r[s];for(let n=0,r=t.length;n<r;n++)e.update(t[n],34962)}},getWireframeAttribute:function(t){const e=a.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&l(t)}else l(t);return a.get(t)}}}function sn(t,e,n,r){const s=r.isWebGL2;let a,o,l;this.setMode=function(t){a=t},this.setIndex=function(t){o=t.type,l=t.bytesPerElement},this.render=function(e,r){t.drawElements(a,r,o,e*l),n.update(r,a,1)},this.renderInstances=function(r,h,c){if(0===c)return;let u,d;if(s)u=t,d="drawElementsInstanced";else if(u=e.get("ANGLE_instanced_arrays"),d="drawElementsInstancedANGLE",null===u)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");u[d](a,h,o,r*l,c),n.update(h,a,c)}}function an(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,n,r){switch(e.calls++,n){case 4:e.triangles+=r*(t/3);break;case 1:e.lines+=r*(t/2);break;case 3:e.lines+=r*(t-1);break;case 2:e.lines+=r*t;break;case 0:e.points+=r*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function on(t,e){return t[0]-e[0]}function ln(t,e){return Math.abs(e[1])-Math.abs(t[1])}function hn(t){const e={},n=new Float32Array(8),r=[];for(let s=0;s<8;s++)r[s]=[s,0];return{update:function(s,a,o,l){const h=s.morphTargetInfluences,c=void 0===h?0:h.length;let u=e[a.id];if(void 0===u){u=[];for(let t=0;t<c;t++)u[t]=[t,0];e[a.id]=u}for(let t=0;t<c;t++){const e=u[t];e[0]=t,e[1]=h[t]}u.sort(ln);for(let t=0;t<8;t++)t<c&&u[t][1]?(r[t][0]=u[t][0],r[t][1]=u[t][1]):(r[t][0]=Number.MAX_SAFE_INTEGER,r[t][1]=0);r.sort(on);const d=o.morphTargets&&a.morphAttributes.position,p=o.morphNormals&&a.morphAttributes.normal;let g=0;for(let t=0;t<8;t++){const e=r[t],s=e[0],o=e[1];s!==Number.MAX_SAFE_INTEGER&&o?(d&&a.getAttribute("morphTarget"+t)!==d[s]&&a.setAttribute("morphTarget"+t,d[s]),p&&a.getAttribute("morphNormal"+t)!==p[s]&&a.setAttribute("morphNormal"+t,p[s]),n[t]=o,g+=o):(d&&!0===a.hasAttribute("morphTarget"+t)&&a.deleteAttribute("morphTarget"+t),p&&!0===a.hasAttribute("morphNormal"+t)&&a.deleteAttribute("morphNormal"+t),n[t]=0)}const y=a.morphTargetsRelative?1:1-g;l.getUniforms().setValue(t,"morphTargetBaseInfluence",y),l.getUniforms().setValue(t,"morphTargetInfluences",n)}}}function cn(t,e,n,r){let s=new WeakMap;function a(t){const e=t.target;e.removeEventListener("dispose",a),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(t){const o=r.render.frame,l=t.geometry,h=e.get(t,l);return s.get(h)!==o&&(e.update(h),s.set(h,o)),t.isInstancedMesh&&(!1===t.hasEventListener("dispose",a)&&t.addEventListener("dispose",a),n.update(t.instanceMatrix,34962),null!==t.instanceColor&&n.update(t.instanceColor,34962)),h},dispose:function(){s=new WeakMap}}}Je.physical={uniforms:Re([Je.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new m(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Jt(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:qe.meshphysical_vert,fragmentShader:qe.meshphysical_frag};class pn extends x{constructor(t=null,e=1,n=1,r=1){super(null),this.image={data:t,width:e,height:n,depth:r},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}pn.prototype.isDataTexture2DArray=!0;class mn extends x{constructor(t=null,e=1,n=1,r=1){super(null),this.image={data:t,width:e,height:n,depth:r},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}mn.prototype.isDataTexture3D=!0;const un=new x,dn=new pn,fn=new mn,gn=new Ue,vn=[],yn=[],xn=new Float32Array(16),_n=new Float32Array(9),bn=new Float32Array(4);function wn(t,e,n){const r=t[0];if(r<=0||r>0)return t;const s=e*n;let a=vn[s];if(void 0===a&&(a=new Float32Array(s),vn[s]=a),0!==e){r.toArray(a,0);for(let r=1,s=0;r!==e;++r)s+=n,t[r].toArray(a,s)}return a}function Mn(t,e){if(t.length!==e.length)return!1;for(let n=0,r=t.length;n<r;n++)if(t[n]!==e[n])return!1;return!0}function Sn(t,e){for(let n=0,r=e.length;n<r;n++)t[n]=e[n]}function En(t,e){let n=yn[e];void 0===n&&(n=new Int32Array(e),yn[e]=n);for(let r=0;r!==e;++r)n[r]=t.allocateTextureUnit();return n}function Tn(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function Ln(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Mn(n,e))return;t.uniform2fv(this.addr,e),Sn(n,e)}}function An(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Mn(n,e))return;t.uniform3fv(this.addr,e),Sn(n,e)}}function Cn(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Mn(n,e))return;t.uniform4fv(this.addr,e),Sn(n,e)}}function Pn(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(Mn(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),Sn(n,e)}else{if(Mn(n,r))return;bn.set(r),t.uniformMatrix2fv(this.addr,!1,bn),Sn(n,r)}}function Rn(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(Mn(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),Sn(n,e)}else{if(Mn(n,r))return;_n.set(r),t.uniformMatrix3fv(this.addr,!1,_n),Sn(n,r)}}function In(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(Mn(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),Sn(n,e)}else{if(Mn(n,r))return;xn.set(r),t.uniformMatrix4fv(this.addr,!1,xn),Sn(n,r)}}function Dn(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function Nn(t,e){const n=this.cache;Mn(n,e)||(t.uniform2iv(this.addr,e),Sn(n,e))}function zn(t,e){const n=this.cache;Mn(n,e)||(t.uniform3iv(this.addr,e),Sn(n,e))}function On(t,e){const n=this.cache;Mn(n,e)||(t.uniform4iv(this.addr,e),Sn(n,e))}function Bn(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function Fn(t,e){const n=this.cache;Mn(n,e)||(t.uniform2uiv(this.addr,e),Sn(n,e))}function Hn(t,e){const n=this.cache;Mn(n,e)||(t.uniform3uiv(this.addr,e),Sn(n,e))}function Un(t,e){const n=this.cache;Mn(n,e)||(t.uniform4uiv(this.addr,e),Sn(n,e))}function Gn(t,e,n){const r=this.cache,s=n.allocateTextureUnit();r[0]!==s&&(t.uniform1i(this.addr,s),r[0]=s),n.safeSetTexture2D(e||un,s)}function Vn(t,e,n){const r=this.cache,s=n.allocateTextureUnit();r[0]!==s&&(t.uniform1i(this.addr,s),r[0]=s),n.setTexture3D(e||fn,s)}function kn(t,e,n){const r=this.cache,s=n.allocateTextureUnit();r[0]!==s&&(t.uniform1i(this.addr,s),r[0]=s),n.safeSetTextureCube(e||gn,s)}function Wn(t,e,n){const r=this.cache,s=n.allocateTextureUnit();r[0]!==s&&(t.uniform1i(this.addr,s),r[0]=s),n.setTexture2DArray(e||dn,s)}function jn(t,e){t.uniform1fv(this.addr,e)}function qn(t,e){const n=wn(e,this.size,2);t.uniform2fv(this.addr,n)}function Xn(t,e){const n=wn(e,this.size,3);t.uniform3fv(this.addr,n)}function Yn(t,e){const n=wn(e,this.size,4);t.uniform4fv(this.addr,n)}function Jn(t,e){const n=wn(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function Zn(t,e){const n=wn(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function Qn(t,e){const n=wn(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function Kn(t,e){t.uniform1iv(this.addr,e)}function $n(t,e){t.uniform2iv(this.addr,e)}function ti(t,e){t.uniform3iv(this.addr,e)}function ei(t,e){t.uniform4iv(this.addr,e)}function ni(t,e){t.uniform1uiv(this.addr,e)}function ii(t,e){t.uniform2uiv(this.addr,e)}function ri(t,e){t.uniform3uiv(this.addr,e)}function si(t,e){t.uniform4uiv(this.addr,e)}function ai(t,e,n){const r=e.length,s=En(n,r);t.uniform1iv(this.addr,s);for(let a=0;a!==r;++a)n.safeSetTexture2D(e[a]||un,s[a])}function oi(t,e,n){const r=e.length,s=En(n,r);t.uniform1iv(this.addr,s);for(let a=0;a!==r;++a)n.safeSetTextureCube(e[a]||gn,s[a])}function li(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){switch(t){case 5126:return Tn;case 35664:return Ln;case 35665:return An;case 35666:return Cn;case 35674:return Pn;case 35675:return Rn;case 35676:return In;case 5124:case 35670:return Dn;case 35667:case 35671:return Nn;case 35668:case 35672:return zn;case 35669:case 35673:return On;case 5125:return Bn;case 36294:return Fn;case 36295:return Hn;case 36296:return Un;case 35678:case 36198:case 36298:case 36306:case 35682:return Gn;case 35679:case 36299:case 36307:return Vn;case 35680:case 36300:case 36308:case 36293:return kn;case 36289:case 36303:case 36311:case 36292:return Wn}}(e.type)}function hi(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return jn;case 35664:return qn;case 35665:return Xn;case 35666:return Yn;case 35674:return Jn;case 35675:return Zn;case 35676:return Qn;case 5124:case 35670:return Kn;case 35667:case 35671:return $n;case 35668:case 35672:return ti;case 35669:case 35673:return ei;case 5125:return ni;case 36294:return ii;case 36295:return ri;case 36296:return si;case 35678:case 36198:case 36298:case 36306:case 35682:return ai;case 35680:case 36300:case 36308:case 36293:return oi}}(e.type)}function ci(t){this.id=t,this.seq=[],this.map={}}hi.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),Sn(e,t)},ci.prototype.setValue=function(t,e,n){const r=this.seq;for(let s=0,a=r.length;s!==a;++s){const a=r[s];a.setValue(t,e[a.id],n)}};const ui=/(\w+)(\])?(\[|\.)?/g;function di(t,e){t.seq.push(e),t.map[e.id]=e}function pi(t,e,n){const r=t.name,s=r.length;for(ui.lastIndex=0;;){const a=ui.exec(r),o=ui.lastIndex;let l=a[1];const h="]"===a[2],c=a[3];if(h&&(l|=0),void 0===c||"["===c&&o+2===s){di(n,void 0===c?new li(l,t,e):new hi(l,t,e));break}{let t=n.map[l];void 0===t&&(t=new ci(l),di(n,t)),n=t}}}function mi(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let r=0;r<n;++r){const n=t.getActiveUniform(e,r);pi(n,t.getUniformLocation(e,n.name),this)}}function fi(t,e,n){const r=t.createShader(e);return t.shaderSource(r,n),t.compileShader(r),r}mi.prototype.setValue=function(t,e,n,r){const s=this.map[e];void 0!==s&&s.setValue(t,n,r)},mi.prototype.setOptional=function(t,e,n){const r=e[n];void 0!==r&&this.setValue(t,n,r)},mi.upload=function(t,e,n,r){for(let s=0,a=e.length;s!==a;++s){const a=e[s],o=n[a.id];!1!==o.needsUpdate&&a.setValue(t,o.value,r)}},mi.seqWithValue=function(t,e){const n=[];for(let r=0,s=t.length;r!==s;++r){const s=t[r];s.id in e&&n.push(s)}return n};let gi=0;function vi(t){switch(t){case 3e3:return["Linear","( value )"];case 3001:return["sRGB","( value )"];case 3002:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case 3007:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case 3003:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function yi(t,e,n){const r=t.getShaderParameter(e,35713),s=t.getShaderInfoLog(e).trim();return r&&""===s?"":"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\n"+s+function(t){const e=t.split("\n");for(let n=0;n<e.length;n++)e[n]=n+1+": "+e[n];return e.join("\n")}(t.getShaderSource(e))}function xi(t,e){const n=vi(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function _i(t,e){const n=vi(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function bi(t,e){let n;switch(e){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function wi(t){return""!==t}function Mi(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Si(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Ei=/^[ \t]*#include +<([\w\d./]+)>/gm;function Ti(t){return t.replace(Ei,Li)}function Li(t,e){const n=qe[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return Ti(n)}const Ai=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Ci=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Pi(t){return t.replace(Ci,Ii).replace(Ai,Ri)}function Ri(t,e,n,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Ii(t,e,n,r)}function Ii(t,e,n,r){let s="";for(let a=parseInt(e);a<parseInt(n);a++)s+=r.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return s}function Di(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function Ni(t,e,n,r){const s=t.getContext(),a=n.defines;let o=n.vertexShader,l=n.fragmentShader;const h=function(t){let e="SHADOWMAP_TYPE_BASIC";return 1===t.shadowMapType?e="SHADOWMAP_TYPE_PCF":2===t.shadowMapType?e="SHADOWMAP_TYPE_PCF_SOFT":3===t.shadowMapType&&(e="SHADOWMAP_TYPE_VSM"),e}(n),c=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case 301:case 302:e="ENVMAP_TYPE_CUBE";break;case 306:case 307:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),u=function(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case 302:case 307:e="ENVMAP_MODE_REFRACTION"}return e}(n),d=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD"}return e}(n),p=t.gammaFactor>0?t.gammaFactor:1,g=n.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(wi).join("\n")}(n),y=function(t){const e=[];for(const n in t){const r=t[n];!1!==r&&e.push("#define "+n+" "+r)}return e.join("\n")}(a),_=s.createProgram();let E,T,A=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(E=[y].filter(wi).join("\n"),E.length>0&&(E+="\n"),T=[g,y].filter(wi).join("\n"),T.length>0&&(T+="\n")):(E=[Di(n),"#define SHADER_NAME "+n.shaderName,y,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+p,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+h:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(wi).join("\n"),T=[g,Di(n),"#define SHADER_NAME "+n.shaderName,y,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+p,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+u:"",n.envMap?"#define "+d:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+h:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?qe.tonemapping_pars_fragment:"",0!==n.toneMapping?bi("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",qe.encodings_pars_fragment,n.map?xi("mapTexelToLinear",n.mapEncoding):"",n.matcap?xi("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?xi("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?xi("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?xi("lightMapTexelToLinear",n.lightMapEncoding):"",_i("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(wi).join("\n")),o=Ti(o),o=Mi(o,n),o=Si(o,n),l=Ti(l),l=Mi(l,n),l=Si(l,n),o=Pi(o),l=Pi(l),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(A="#version 300 es\n",E=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+E,T=["#define varying in","300 es"===n.glslVersion?"":"out highp vec4 pc_fragColor;","300 es"===n.glslVersion?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+T);const C=A+T+l,P=fi(s,35633,A+E+o),R=fi(s,35632,C);if(s.attachShader(_,P),s.attachShader(_,R),void 0!==n.index0AttributeName?s.bindAttribLocation(_,0,n.index0AttributeName):!0===n.morphTargets&&s.bindAttribLocation(_,0,"position"),s.linkProgram(_),t.debug.checkShaderErrors){const t=s.getProgramInfoLog(_).trim(),e=s.getShaderInfoLog(P).trim(),n=s.getShaderInfoLog(R).trim();let r=!0,a=!0;if(!1===s.getProgramParameter(_,35714)){r=!1;const e=yi(s,P,"vertex"),n=yi(s,R,"fragment");console.error("THREE.WebGLProgram: shader error: ",s.getError(),"35715",s.getProgramParameter(_,35715),"gl.getProgramInfoLog",t,e,n)}else""!==t?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",t):""!==e&&""!==n||(a=!1);a&&(this.diagnostics={runnable:r,programLog:t,vertexShader:{log:e,prefix:E},fragmentShader:{log:n,prefix:T}})}let I,D;return s.deleteShader(P),s.deleteShader(R),this.getUniforms=function(){return void 0===I&&(I=new mi(s,_)),I},this.getAttributes=function(){return void 0===D&&(D=function(t,e){const n={},r=t.getProgramParameter(e,35721);for(let s=0;s<r;s++){const r=t.getActiveAttrib(e,s).name;n[r]=t.getAttribLocation(e,r)}return n}(s,_)),D},this.destroy=function(){r.releaseStatesOfProgram(this),s.deleteProgram(_),this.program=void 0},this.name=n.shaderName,this.id=gi++,this.cacheKey=e,this.usedTimes=1,this.program=_,this.vertexShader=P,this.fragmentShader=R,this}function zi(t,e,n,r,s,a){const o=[],l=r.isWebGL2,h=r.logarithmicDepthBuffer,c=r.floatVertexTextures,u=r.maxVertexUniforms,d=r.vertexTextures;let p=r.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},y=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function _(t){let e;return t&&t.isTexture?e=t.encoding:t&&t.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e=t.texture.encoding):e=3e3,e}return{getParameters:function(s,o,y,E,T){const A=E.fog,C=s.isMeshStandardMaterial?E.environment:null,P=e.get(s.envMap||C),R=g[s.type],I=T.isSkinnedMesh?function(t){const e=t.skeleton.bones;if(c)return 1024;{const t=u,n=Math.floor((t-20)/4),r=Math.min(n,e.length);return r<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+r+"."),0):r}}(T):0;let D,N;if(null!==s.precision&&(p=r.getMaxPrecision(s.precision),p!==s.precision&&console.warn("THREE.WebGLProgram.getParameters:",s.precision,"not supported, using",p,"instead.")),R){const t=Je[R];D=t.vertexShader,N=t.fragmentShader}else D=s.vertexShader,N=s.fragmentShader;const z=t.getRenderTarget();return{isWebGL2:l,shaderID:R,shaderName:s.type,vertexShader:D,fragmentShader:N,defines:s.defines,isRawShaderMaterial:!0===s.isRawShaderMaterial,glslVersion:s.glslVersion,precision:p,instancing:!0===T.isInstancedMesh,instancingColor:!0===T.isInstancedMesh&&null!==T.instanceColor,supportsVertexTextures:d,outputEncoding:null!==z?_(z.texture):t.outputEncoding,map:!!s.map,mapEncoding:_(s.map),matcap:!!s.matcap,matcapEncoding:_(s.matcap),envMap:!!P,envMapMode:P&&P.mapping,envMapEncoding:_(P),envMapCubeUV:!!P&&(306===P.mapping||307===P.mapping),lightMap:!!s.lightMap,lightMapEncoding:_(s.lightMap),aoMap:!!s.aoMap,emissiveMap:!!s.emissiveMap,emissiveMapEncoding:_(s.emissiveMap),bumpMap:!!s.bumpMap,normalMap:!!s.normalMap,objectSpaceNormalMap:1===s.normalMapType,tangentSpaceNormalMap:0===s.normalMapType,clearcoatMap:!!s.clearcoatMap,clearcoatRoughnessMap:!!s.clearcoatRoughnessMap,clearcoatNormalMap:!!s.clearcoatNormalMap,displacementMap:!!s.displacementMap,roughnessMap:!!s.roughnessMap,metalnessMap:!!s.metalnessMap,specularMap:!!s.specularMap,alphaMap:!!s.alphaMap,gradientMap:!!s.gradientMap,sheen:!!s.sheen,transmissionMap:!!s.transmissionMap,combine:s.combine,vertexTangents:s.normalMap&&s.vertexTangents,vertexColors:s.vertexColors,vertexAlphas:!0===s.vertexColors&&T.geometry&&T.geometry.attributes.color&&4===T.geometry.attributes.color.itemSize,vertexUvs:!!(s.map||s.bumpMap||s.normalMap||s.specularMap||s.alphaMap||s.emissiveMap||s.roughnessMap||s.metalnessMap||s.clearcoatMap||s.clearcoatRoughnessMap||s.clearcoatNormalMap||s.displacementMap||s.transmissionMap),uvsVertexOnly:!(s.map||s.bumpMap||s.normalMap||s.specularMap||s.alphaMap||s.emissiveMap||s.roughnessMap||s.metalnessMap||s.clearcoatNormalMap||s.transmissionMap||!s.displacementMap),fog:!!A,useFog:s.fog,fogExp2:A&&A.isFogExp2,flatShading:!!s.flatShading,sizeAttenuation:s.sizeAttenuation,logarithmicDepthBuffer:h,skinning:s.skinning&&I>0,maxBones:I,useVertexTexture:c,morphTargets:s.morphTargets,morphNormals:s.morphNormals,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:s.dithering,shadowMapEnabled:t.shadowMap.enabled&&y.length>0,shadowMapType:t.shadowMap.type,toneMapping:s.toneMapped?t.toneMapping:0,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:s.premultipliedAlpha,alphaTest:s.alphaTest,doubleSided:2===s.side,flipSided:1===s.side,depthPacking:void 0!==s.depthPacking&&s.depthPacking,index0AttributeName:s.index0AttributeName,extensionDerivatives:s.extensions&&s.extensions.derivatives,extensionFragDepth:s.extensions&&s.extensions.fragDepth,extensionDrawBuffers:s.extensions&&s.extensions.drawBuffers,extensionShaderTextureLOD:s.extensions&&s.extensions.shaderTextureLOD,rendererExtensionFragDepth:l||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:l||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:l||n.has("EXT_shader_texture_lod"),customProgramCacheKey:s.customProgramCacheKey()}},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);if(!1===e.isRawShaderMaterial){for(let t=0;t<y.length;t++)n.push(e[y[t]]);n.push(t.outputEncoding),n.push(t.gammaFactor)}return n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=g[t.type];let n;if(e){const t=Je[e];n=De.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let r;for(let t=0,s=o.length;t<s;t++){const e=o[t];if(e.cacheKey===n){r=e,++r.usedTimes;break}}return void 0===r&&(r=new Ni(t,n,e,s),o.push(r)),r},releaseProgram:function(t){if(0==--t.usedTimes){const e=o.indexOf(t);o[e]=o[o.length-1],o.pop(),t.destroy()}},programs:o}}function Oi(){let t=new WeakMap;return{get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,r){t.get(e)[n]=r},dispose:function(){t=new WeakMap}}}function Bi(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Fi(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Hi(t){const e=[];let n=0;const r=[],s=[],a={id:-1};function o(r,s,o,l,h,c){let u=e[n];const d=t.get(o);return void 0===u?(u={id:r.id,object:r,geometry:s,material:o,program:d.program||a,groupOrder:l,renderOrder:r.renderOrder,z:h,group:c},e[n]=u):(u.id=r.id,u.object=r,u.geometry=s,u.material=o,u.program=d.program||a,u.groupOrder=l,u.renderOrder=r.renderOrder,u.z=h,u.group=c),n++,u}return{opaque:r,transparent:s,init:function(){n=0,r.length=0,s.length=0},push:function(t,e,n,a,l,h){const c=o(t,e,n,a,l,h);(!0===n.transparent?s:r).push(c)},unshift:function(t,e,n,a,l,h){const c=o(t,e,n,a,l,h);(!0===n.transparent?s:r).unshift(c)},finish:function(){for(let t=n,r=e.length;t<r;t++){const n=e[t];if(null===n.id)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.program=null,n.group=null}},sort:function(t,e){r.length>1&&r.sort(t||Bi),s.length>1&&s.sort(e||Fi)}}}function Ui(t){let e=new WeakMap;return{get:function(n,r){let s;return!1===e.has(n)?(s=new Hi(t),e.set(n,[s])):r>=e.get(n).length?(s=new Hi(t),e.get(n).push(s)):s=e.get(n)[r],s},dispose:function(){e=new WeakMap}}}function Gi(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new S,color:new Jt};break;case"SpotLight":n={position:new S,direction:new S,color:new Jt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new S,color:new Jt,distance:0,decay:0};break;case"HemisphereLight":n={direction:new S,skyColor:new Jt,groundColor:new Jt};break;case"RectAreaLight":n={color:new Jt,position:new S,halfWidth:new S,halfHeight:new S}}return t[e.id]=n,n}}}let Vi=0;function ki(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function Wi(t,e){const n=new Gi,r=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new m};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new m,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),s={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let h=0;h<9;h++)s.probe.push(new S);const a=new S,o=new et,l=new et;return{setup:function(a){let o=0,l=0,h=0;for(let t=0;t<9;t++)s.probe[t].set(0,0,0);let c=0,u=0,d=0,p=0,g=0,y=0,_=0,E=0;a.sort(ki);for(let t=0,e=a.length;t<e;t++){const e=a[t],T=e.color,A=e.intensity,C=e.distance,P=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)o+=T.r*A,l+=T.g*A,h+=T.b*A;else if(e.isLightProbe)for(let t=0;t<9;t++)s.probe[t].addScaledVector(e.sh.coefficients[t],A);else if(e.isDirectionalLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity),e.castShadow){const t=e.shadow,n=r.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,s.directionalShadow[c]=n,s.directionalShadowMap[c]=P,s.directionalShadowMatrix[c]=e.shadow.matrix,y++}s.directional[c]=t,c++}else if(e.isSpotLight){const t=n.get(e);if(t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(T).multiplyScalar(A),t.distance=C,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,e.castShadow){const t=e.shadow,n=r.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,s.spotShadow[d]=n,s.spotShadowMap[d]=P,s.spotShadowMatrix[d]=e.shadow.matrix,E++}s.spot[d]=t,d++}else if(e.isRectAreaLight){const t=n.get(e);t.color.copy(T).multiplyScalar(A),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),s.rectArea[p]=t,p++}else if(e.isPointLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,n=r.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,n.shadowCameraNear=t.camera.near,n.shadowCameraFar=t.camera.far,s.pointShadow[u]=n,s.pointShadowMap[u]=P,s.pointShadowMatrix[u]=e.shadow.matrix,_++}s.point[u]=t,u++}else if(e.isHemisphereLight){const t=n.get(e);t.skyColor.copy(e.color).multiplyScalar(A),t.groundColor.copy(e.groundColor).multiplyScalar(A),s.hemi[g]=t,g++}}p>0&&(e.isWebGL2||!0===t.has("OES_texture_float_linear")?(s.rectAreaLTC1=Xe.LTC_FLOAT_1,s.rectAreaLTC2=Xe.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(s.rectAreaLTC1=Xe.LTC_HALF_1,s.rectAreaLTC2=Xe.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),s.ambient[0]=o,s.ambient[1]=l,s.ambient[2]=h;const T=s.hash;T.directionalLength===c&&T.pointLength===u&&T.spotLength===d&&T.rectAreaLength===p&&T.hemiLength===g&&T.numDirectionalShadows===y&&T.numPointShadows===_&&T.numSpotShadows===E||(s.directional.length=c,s.spot.length=d,s.rectArea.length=p,s.point.length=u,s.hemi.length=g,s.directionalShadow.length=y,s.directionalShadowMap.length=y,s.pointShadow.length=_,s.pointShadowMap.length=_,s.spotShadow.length=E,s.spotShadowMap.length=E,s.directionalShadowMatrix.length=y,s.pointShadowMatrix.length=_,s.spotShadowMatrix.length=E,T.directionalLength=c,T.pointLength=u,T.spotLength=d,T.rectAreaLength=p,T.hemiLength=g,T.numDirectionalShadows=y,T.numPointShadows=_,T.numSpotShadows=E,s.version=Vi++)},setupView:function(t,e){let n=0,r=0,h=0,c=0,u=0;const d=e.matrixWorldInverse;for(let p=0,g=t.length;p<g;p++){const e=t[p];if(e.isDirectionalLight){const t=s.directional[n];t.direction.setFromMatrixPosition(e.matrixWorld),a.setFromMatrixPosition(e.target.matrixWorld),t.direction.sub(a),t.direction.transformDirection(d),n++}else if(e.isSpotLight){const t=s.spot[h];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(d),t.direction.setFromMatrixPosition(e.matrixWorld),a.setFromMatrixPosition(e.target.matrixWorld),t.direction.sub(a),t.direction.transformDirection(d),h++}else if(e.isRectAreaLight){const t=s.rectArea[c];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(d),l.identity(),o.copy(e.matrixWorld),o.premultiply(d),l.extractRotation(o),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),t.halfWidth.applyMatrix4(l),t.halfHeight.applyMatrix4(l),c++}else if(e.isPointLight){const t=s.point[r];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(d),r++}else if(e.isHemisphereLight){const t=s.hemi[u];t.direction.setFromMatrixPosition(e.matrixWorld),t.direction.transformDirection(d),t.direction.normalize(),u++}}},state:s}}function ji(t,e){const n=new Wi(t,e),r=[],s=[];return{init:function(){r.length=0,s.length=0},state:{lightsArray:r,shadowsArray:s,lights:n},setupLights:function(){n.setup(r)},setupLightsView:function(t){n.setupView(r,t)},pushLight:function(t){r.push(t)},pushShadow:function(t){s.push(t)}}}function qi(t,e){let n=new WeakMap;return{get:function(r,s=0){let a;return!1===n.has(r)?(a=new ji(t,e),n.set(r,[a])):s>=n.get(r).length?(a=new ji(t,e),n.get(r).push(a)):a=n.get(r)[s],a},dispose:function(){n=new WeakMap}}}class Zi extends Ut{constructor(t){super(),this.type="MeshDepthMaterial",this.depthPacking=3200,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}Zi.prototype.isMeshDepthMaterial=!0;class Ji extends Ut{constructor(t){super(),this.type="MeshDistanceMaterial",this.referencePosition=new S,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}function Xi(t,e,n){let r=new je;const s=new m,a=new m,o=new b,l=[],h=[],c={},u=n.maxTextureSize,d={0:1,1:0,2:2},p=new Oe({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new m},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),g=p.clone();g.defines.HORIZONTAL_PASS=1;const y=new de;y.setAttribute("position",new te(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new Pe(y,p),E=this;function T(n,r){const s=e.update(_);p.uniforms.shadow_pass.value=n.map.texture,p.uniforms.resolution.value=n.mapSize,p.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(r,null,s,p,_,null),g.uniforms.shadow_pass.value=n.mapPass.texture,g.uniforms.resolution.value=n.mapSize,g.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(r,null,s,g,_,null)}function A(t,e,n){const r=t<<0|e<<1|n<<2;let s=l[r];return void 0===s&&(s=new Zi({depthPacking:3201,morphTargets:t,skinning:e}),l[r]=s),s}function C(t,e,n){const r=t<<0|e<<1|n<<2;let s=h[r];return void 0===s&&(s=new Ji({morphTargets:t,skinning:e}),h[r]=s),s}function P(e,n,r,s,a,o,l){let h=null,u=A,p=e.customDepthMaterial;if(!0===s.isPointLight&&(u=C,p=e.customDistanceMaterial),void 0===p){let t=!1;!0===r.morphTargets&&(t=n.morphAttributes&&n.morphAttributes.position&&n.morphAttributes.position.length>0);let s=!1;!0===e.isSkinnedMesh&&(!0===r.skinning?s=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e)),h=u(t,s,!0===e.isInstancedMesh)}else h=p;if(t.localClippingEnabled&&!0===r.clipShadows&&0!==r.clippingPlanes.length){const t=h.uuid,e=r.uuid;let n=c[t];void 0===n&&(n={},c[t]=n);let s=n[e];void 0===s&&(s=h.clone(),n[e]=s),h=s}return h.visible=r.visible,h.wireframe=r.wireframe,h.side=3===l?null!==r.shadowSide?r.shadowSide:r.side:null!==r.shadowSide?r.shadowSide:d[r.side],h.clipShadows=r.clipShadows,h.clippingPlanes=r.clippingPlanes,h.clipIntersection=r.clipIntersection,h.wireframeLinewidth=r.wireframeLinewidth,h.linewidth=r.linewidth,!0===s.isPointLight&&!0===h.isMeshDistanceMaterial&&(h.referencePosition.setFromMatrixPosition(s.matrixWorld),h.nearDistance=a,h.farDistance=o),h}function R(n,s,a,o,l){if(!1===n.visible)return;if(n.layers.test(s.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===l)&&(!n.frustumCulled||r.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);const r=e.update(n),s=n.material;if(Array.isArray(s)){const e=r.groups;for(let h=0,c=e.length;h<c;h++){const c=e[h],u=s[c.materialIndex];if(u&&u.visible){const e=P(n,r,u,o,a.near,a.far,l);t.renderBufferDirect(a,null,r,e,n,c)}}}else if(s.visible){const e=P(n,r,s,o,a.near,a.far,l);t.renderBufferDirect(a,null,r,e,n,null)}}const h=n.children;for(let t=0,e=h.length;t<e;t++)R(h[t],s,a,o,l)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(e,n,l){if(!1===E.enabled)return;if(!1===E.autoUpdate&&!1===E.needsUpdate)return;if(0===e.length)return;const h=t.getRenderTarget(),c=t.getActiveCubeFace(),d=t.getActiveMipmapLevel(),p=t.state;p.setBlending(0),p.buffers.color.setClear(1,1,1,1),p.buffers.depth.setTest(!0),p.setScissorTest(!1);for(let g=0,y=e.length;g<y;g++){const h=e[g],c=h.shadow;if(void 0===c){console.warn("THREE.WebGLShadowMap:",h,"has no shadow.");continue}if(!1===c.autoUpdate&&!1===c.needsUpdate)continue;s.copy(c.mapSize);const d=c.getFrameExtents();if(s.multiply(d),a.copy(c.mapSize),(s.x>u||s.y>u)&&(s.x>u&&(a.x=Math.floor(u/d.x),s.x=a.x*d.x,c.mapSize.x=a.x),s.y>u&&(a.y=Math.floor(u/d.y),s.y=a.y*d.y,c.mapSize.y=a.y)),null===c.map&&!c.isPointLightShadow&&3===this.type){const t={minFilter:1006,magFilter:1006,format:1023};c.map=new w(s.x,s.y,t),c.map.texture.name=h.name+".shadowMap",c.mapPass=new w(s.x,s.y,t),c.camera.updateProjectionMatrix()}if(null===c.map){const t={minFilter:1003,magFilter:1003,format:1023};c.map=new w(s.x,s.y,t),c.map.texture.name=h.name+".shadowMap",c.camera.updateProjectionMatrix()}t.setRenderTarget(c.map),t.clear();const y=c.getViewportCount();for(let t=0;t<y;t++){const e=c.getViewport(t);o.set(a.x*e.x,a.y*e.y,a.x*e.z,a.y*e.w),p.viewport(o),c.updateMatrices(h,t),r=c.getFrustum(),R(n,l,c.camera,h,this.type)}c.isPointLightShadow||3!==this.type||T(c,l),c.needsUpdate=!1}E.needsUpdate=!1,t.setRenderTarget(h,c,d)}}function Yi(t,e,n){const r=n.isWebGL2,s=new function(){let e=!1;const n=new b;let r=null;const s=new b(0,0,0,0);return{setMask:function(n){r===n||e||(t.colorMask(n,n,n,n),r=n)},setLocked:function(t){e=t},setClear:function(e,r,a,o,l){!0===l&&(e*=o,r*=o,a*=o),n.set(e,r,a,o),!1===s.equals(n)&&(t.clearColor(e,r,a,o),s.copy(n))},reset:function(){e=!1,r=null,s.set(-1,0,0,0)}}},a=new function(){let e=!1,n=null,r=null,s=null;return{setTest:function(t){t?j(2929):X(2929)},setMask:function(r){n===r||e||(t.depthMask(r),n=r)},setFunc:function(e){if(r!==e){if(e)switch(e){case 0:t.depthFunc(512);break;case 1:t.depthFunc(519);break;case 2:t.depthFunc(513);break;case 3:t.depthFunc(515);break;case 4:t.depthFunc(514);break;case 5:t.depthFunc(518);break;case 6:t.depthFunc(516);break;case 7:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);r=e}},setLocked:function(t){e=t},setClear:function(e){s!==e&&(t.clearDepth(e),s=e)},reset:function(){e=!1,n=null,r=null,s=null}}},o=new function(){let e=!1,n=null,r=null,s=null,a=null,o=null,l=null,h=null,c=null;return{setTest:function(t){e||(t?j(2960):X(2960))},setMask:function(r){n===r||e||(t.stencilMask(r),n=r)},setFunc:function(e,n,o){r===e&&s===n&&a===o||(t.stencilFunc(e,n,o),r=e,s=n,a=o)},setOp:function(e,n,r){o===e&&l===n&&h===r||(t.stencilOp(e,n,r),o=e,l=n,h=r)},setLocked:function(t){e=t},setClear:function(e){c!==e&&(t.clearStencil(e),c=e)},reset:function(){e=!1,n=null,r=null,s=null,a=null,o=null,l=null,h=null,c=null}}};let l={},h=null,c={},u=null,d=!1,p=null,g=null,y=null,_=null,E=null,T=null,A=null,C=!1,P=null,R=null,I=null,D=null,N=null;const z=t.getParameter(35661);let O=!1,B=0;const F=t.getParameter(7938);-1!==F.indexOf("WebGL")?(B=parseFloat(/^WebGL (\d)/.exec(F)[1]),O=B>=1):-1!==F.indexOf("OpenGL ES")&&(B=parseFloat(/^OpenGL ES (\d)/.exec(F)[1]),O=B>=2);let H=null,U={};const G=new b(0,0,t.canvas.width,t.canvas.height),V=new b(0,0,t.canvas.width,t.canvas.height);function k(e,n,r){const s=new Uint8Array(4),a=t.createTexture();t.bindTexture(e,a),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(let o=0;o<r;o++)t.texImage2D(n+o,0,6408,1,1,0,6408,5121,s);return a}const W={};function j(e){!0!==l[e]&&(t.enable(e),l[e]=!0)}function X(e){!1!==l[e]&&(t.disable(e),l[e]=!1)}W[3553]=k(3553,3553,1),W[34067]=k(34067,34069,6),s.setClear(0,0,0,1),a.setClear(1),o.setClear(0),j(2929),a.setFunc(3),Q(!1),K(1),j(2884),Z(0);const Y={100:32774,101:32778,102:32779};if(r)Y[103]=32775,Y[104]=32776;else{const t=e.get("EXT_blend_minmax");null!==t&&(Y[103]=t.MIN_EXT,Y[104]=t.MAX_EXT)}const J={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function Z(e,n,r,s,a,o,l,h){if(0!==e){if(!1===d&&(j(3042),d=!0),5===e)a=a||n,o=o||r,l=l||s,n===g&&a===E||(t.blendEquationSeparate(Y[n],Y[a]),g=n,E=a),r===y&&s===_&&o===T&&l===A||(t.blendFuncSeparate(J[r],J[s],J[o],J[l]),y=r,_=s,T=o,A=l),p=e,C=null;else if(e!==p||h!==C){if(100===g&&100===E||(t.blendEquation(32774),g=100,E=100),h)switch(e){case 1:t.blendFuncSeparate(1,771,1,771);break;case 2:t.blendFunc(1,1);break;case 3:t.blendFuncSeparate(0,0,769,771);break;case 4:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case 1:t.blendFuncSeparate(770,771,1,771);break;case 2:t.blendFunc(770,1);break;case 3:t.blendFunc(0,769);break;case 4:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}y=null,_=null,T=null,A=null,p=e,C=h}}else!0===d&&(X(3042),d=!1)}function Q(e){P!==e&&(e?t.frontFace(2304):t.frontFace(2305),P=e)}function K(e){0!==e?(j(2884),e!==R&&(1===e?t.cullFace(1029):2===e?t.cullFace(1028):t.cullFace(1032))):X(2884),R=e}function $(e,n,r){e?(j(32823),D===n&&N===r||(t.polygonOffset(n,r),D=n,N=r)):X(32823)}function nt(e){void 0===e&&(e=33984+z-1),H!==e&&(t.activeTexture(e),H=e)}return{buffers:{color:s,depth:a,stencil:o},enable:j,disable:X,bindFramebuffer:function(e,n){null===n&&null!==h&&(n=h),c[e]!==n&&(t.bindFramebuffer(e,n),c[e]=n,r&&(36009===e&&(c[36160]=n),36160===e&&(c[36009]=n)))},bindXRFramebuffer:function(e){e!==h&&(t.bindFramebuffer(36160,e),h=e)},useProgram:function(e){return u!==e&&(t.useProgram(e),u=e,!0)},setBlending:Z,setMaterial:function(t,e){2===t.side?X(2884):j(2884);let n=1===t.side;e&&(n=!n),Q(n),1===t.blending&&!1===t.transparent?Z(0):Z(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),a.setFunc(t.depthFunc),a.setTest(t.depthTest),a.setMask(t.depthWrite),s.setMask(t.colorWrite);const r=t.stencilWrite;o.setTest(r),r&&(o.setMask(t.stencilWriteMask),o.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),o.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),$(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?j(32926):X(32926)},setFlipSided:Q,setCullFace:K,setLineWidth:function(e){e!==I&&(O&&t.lineWidth(e),I=e)},setPolygonOffset:$,setScissorTest:function(t){t?j(3089):X(3089)},activeTexture:nt,bindTexture:function(e,n){null===H&&nt();let r=U[H];void 0===r&&(r={type:void 0,texture:void 0},U[H]=r),r.type===e&&r.texture===n||(t.bindTexture(e,n||W[e]),r.type=e,r.texture=n)},unbindTexture:function(){const e=U[H];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===G.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),G.copy(e))},viewport:function(e){!1===V.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),V.copy(e))},reset:function(){t.disable(3042),t.disable(2884),t.disable(2929),t.disable(32823),t.disable(3089),t.disable(2960),t.disable(32926),t.blendEquation(32774),t.blendFunc(1,0),t.blendFuncSeparate(1,0,1,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(513),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(519,0,4294967295),t.stencilOp(7680,7680,7680),t.clearStencil(0),t.cullFace(1029),t.frontFace(2305),t.polygonOffset(0,0),t.activeTexture(33984),t.bindFramebuffer(36160,null),!0===r&&(t.bindFramebuffer(36009,null),t.bindFramebuffer(36008,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),l={},H=null,U={},h=null,c={},u=null,d=!1,p=null,g=null,y=null,_=null,E=null,T=null,A=null,C=!1,P=null,R=null,I=null,D=null,N=null,G.set(0,0,t.canvas.width,t.canvas.height),V.set(0,0,t.canvas.width,t.canvas.height),s.reset(),a.reset(),o.reset()}}}function Qi(t,e,n,r,s,a,o){const l=s.isWebGL2,h=s.maxTextures,d=s.maxCubemapSize,p=s.maxTextureSize,g=s.maxSamples,y=new WeakMap;let _,E=!1;try{E="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function T(t,e){return E?new OffscreenCanvas(t,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function A(t,e,n,r){let s=1;if((t.width>r||t.height>r)&&(s=r/Math.max(t.width,t.height)),s<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const r=e?u:Math.floor,a=r(s*t.width),o=r(s*t.height);void 0===_&&(_=T(a,o));const l=n?T(a,o):_;return l.width=a,l.height=o,l.getContext("2d").drawImage(t,0,0,a,o),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+a+"x"+o+")."),l}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function C(t){return c(t.width)&&c(t.height)}function P(t,e){return t.generateMipmaps&&e&&1003!==t.minFilter&&1006!==t.minFilter}function R(e,n,s,a){t.generateMipmap(e),r.get(n).__maxMipLevel=Math.log2(Math.max(s,a))}function I(n,r,s){if(!1===l)return r;if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let a=r;return 6403===r&&(5126===s&&(a=33326),5131===s&&(a=33325),5121===s&&(a=33321)),6407===r&&(5126===s&&(a=34837),5131===s&&(a=34843),5121===s&&(a=32849)),6408===r&&(5126===s&&(a=34836),5131===s&&(a=34842),5121===s&&(a=32856)),33325!==a&&33326!==a&&34842!==a&&34836!==a||e.get("EXT_color_buffer_float"),a}function D(t){return 1003===t||1004===t||1005===t?9728:9729}function N(e){const n=e.target;n.removeEventListener("dispose",N),function(e){const n=r.get(e);void 0!==n.__webglInit&&(t.deleteTexture(n.__webglTexture),r.remove(e))}(n),n.isVideoTexture&&y.delete(n),o.memory.textures--}function z(e){const n=e.target;n.removeEventListener("dispose",z),function(e){const n=e.texture,s=r.get(e),a=r.get(n);if(e){if(void 0!==a.__webglTexture&&t.deleteTexture(a.__webglTexture),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(s.__webglFramebuffer[e]),s.__webglDepthbuffer&&t.deleteRenderbuffer(s.__webglDepthbuffer[e]);else t.deleteFramebuffer(s.__webglFramebuffer),s.__webglDepthbuffer&&t.deleteRenderbuffer(s.__webglDepthbuffer),s.__webglMultisampledFramebuffer&&t.deleteFramebuffer(s.__webglMultisampledFramebuffer),s.__webglColorRenderbuffer&&t.deleteRenderbuffer(s.__webglColorRenderbuffer),s.__webglDepthRenderbuffer&&t.deleteRenderbuffer(s.__webglDepthRenderbuffer);r.remove(n),r.remove(e)}}(n),o.memory.textures--}let O=0;function B(t,e){const s=r.get(t);if(t.isVideoTexture&&function(t){const e=o.render.frame;y.get(t)!==e&&(y.set(t,e),t.update())}(t),t.version>0&&s.__version!==t.version){const n=t.image;if(void 0===n)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==n.complete)return void k(s,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+e),n.bindTexture(3553,s.__webglTexture)}function F(e,s){const o=r.get(e);e.version>0&&o.__version!==e.version?function(e,r,s){if(6!==r.image.length)return;V(e,r),n.activeTexture(33984+s),n.bindTexture(34067,e.__webglTexture),t.pixelStorei(37440,r.flipY),t.pixelStorei(37441,r.premultiplyAlpha),t.pixelStorei(3317,r.unpackAlignment),t.pixelStorei(37443,0);const o=r&&(r.isCompressedTexture||r.image[0].isCompressedTexture),h=r.image[0]&&r.image[0].isDataTexture,c=[];for(let t=0;t<6;t++)c[t]=o||h?h?r.image[t].image:r.image[t]:A(r.image[t],!1,!0,d);const u=c[0],p=C(u)||l,g=a.convert(r.format),y=a.convert(r.type),_=I(r.internalFormat,g,y);let E;if(G(34067,r,p),o){for(let t=0;t<6;t++){E=c[t].mipmaps;for(let e=0;e<E.length;e++){const s=E[e];1023!==r.format&&1022!==r.format?null!==g?n.compressedTexImage2D(34069+t,e,_,s.width,s.height,0,s.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+t,e,_,s.width,s.height,0,g,y,s.data)}}e.__maxMipLevel=E.length-1}else{E=r.mipmaps;for(let t=0;t<6;t++)if(h){n.texImage2D(34069+t,0,_,c[t].width,c[t].height,0,g,y,c[t].data);for(let e=0;e<E.length;e++){const r=E[e].image[t].image;n.texImage2D(34069+t,e+1,_,r.width,r.height,0,g,y,r.data)}}else{n.texImage2D(34069+t,0,_,g,y,c[t]);for(let e=0;e<E.length;e++){const r=E[e];n.texImage2D(34069+t,e+1,_,g,y,r.image[t])}}e.__maxMipLevel=E.length}P(r,p)&&R(34067,r,u.width,u.height),e.__version=r.version,r.onUpdate&&r.onUpdate(r)}(o,e,s):(n.activeTexture(33984+s),n.bindTexture(34067,o.__webglTexture))}const H={1e3:10497,1001:33071,1002:33648},U={1003:9728,1004:9984,1005:9986,1006:9729,1007:9985,1008:9987};function G(n,a,o){if(o?(t.texParameteri(n,10242,H[a.wrapS]),t.texParameteri(n,10243,H[a.wrapT]),32879!==n&&35866!==n||t.texParameteri(n,32882,H[a.wrapR]),t.texParameteri(n,10240,U[a.magFilter]),t.texParameteri(n,10241,U[a.minFilter])):(t.texParameteri(n,10242,33071),t.texParameteri(n,10243,33071),32879!==n&&35866!==n||t.texParameteri(n,32882,33071),1001===a.wrapS&&1001===a.wrapT||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(n,10240,D(a.magFilter)),t.texParameteri(n,10241,D(a.minFilter)),1003!==a.minFilter&&1006!==a.minFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===e.has("EXT_texture_filter_anisotropic")){const o=e.get("EXT_texture_filter_anisotropic");if(1015===a.type&&!1===e.has("OES_texture_float_linear"))return;if(!1===l&&1016===a.type&&!1===e.has("OES_texture_half_float_linear"))return;(a.anisotropy>1||r.get(a).__currentAnisotropy)&&(t.texParameterf(n,o.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,s.getMaxAnisotropy())),r.get(a).__currentAnisotropy=a.anisotropy)}}function V(e,n){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",N),e.__webglTexture=t.createTexture(),o.memory.textures++)}function k(e,r,s){let o=3553;r.isDataTexture2DArray&&(o=35866),r.isDataTexture3D&&(o=32879),V(e,r),n.activeTexture(33984+s),n.bindTexture(o,e.__webglTexture),t.pixelStorei(37440,r.flipY),t.pixelStorei(37441,r.premultiplyAlpha),t.pixelStorei(3317,r.unpackAlignment),t.pixelStorei(37443,0);const h=function(t){return!l&&(1001!==t.wrapS||1001!==t.wrapT||1003!==t.minFilter&&1006!==t.minFilter)}(r)&&!1===C(r.image),c=A(r.image,h,!1,p),u=C(c)||l,d=a.convert(r.format);let g,y=a.convert(r.type),_=I(r.internalFormat,d,y);G(o,r,u);const E=r.mipmaps;if(r.isDepthTexture)_=6402,l?_=1015===r.type?36012:1014===r.type?33190:1020===r.type?35056:33189:1015===r.type&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),1026===r.format&&6402===_&&1012!==r.type&&1014!==r.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=1012,y=a.convert(r.type)),1027===r.format&&6402===_&&(_=34041,1020!==r.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=1020,y=a.convert(r.type))),n.texImage2D(3553,0,_,c.width,c.height,0,d,y,null);else if(r.isDataTexture)if(E.length>0&&u){for(let t=0,e=E.length;t<e;t++)g=E[t],n.texImage2D(3553,t,_,g.width,g.height,0,d,y,g.data);r.generateMipmaps=!1,e.__maxMipLevel=E.length-1}else n.texImage2D(3553,0,_,c.width,c.height,0,d,y,c.data),e.__maxMipLevel=0;else if(r.isCompressedTexture){for(let t=0,e=E.length;t<e;t++)g=E[t],1023!==r.format&&1022!==r.format?null!==d?n.compressedTexImage2D(3553,t,_,g.width,g.height,0,g.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,t,_,g.width,g.height,0,d,y,g.data);e.__maxMipLevel=E.length-1}else if(r.isDataTexture2DArray)n.texImage3D(35866,0,_,c.width,c.height,c.depth,0,d,y,c.data),e.__maxMipLevel=0;else if(r.isDataTexture3D)n.texImage3D(32879,0,_,c.width,c.height,c.depth,0,d,y,c.data),e.__maxMipLevel=0;else if(E.length>0&&u){for(let t=0,e=E.length;t<e;t++)g=E[t],n.texImage2D(3553,t,_,d,y,g);r.generateMipmaps=!1,e.__maxMipLevel=E.length-1}else n.texImage2D(3553,0,_,d,y,c),e.__maxMipLevel=0;P(r,u)&&R(o,r,c.width,c.height),e.__version=r.version,r.onUpdate&&r.onUpdate(r)}function W(e,s,o,l){const h=s.texture,c=a.convert(h.format),u=a.convert(h.type),d=I(h.internalFormat,c,u);32879===l||35866===l?n.texImage3D(l,0,d,s.width,s.height,s.depth,0,c,u,null):n.texImage2D(l,0,d,s.width,s.height,0,c,u,null),n.bindFramebuffer(36160,e),t.framebufferTexture2D(36160,o,l,r.get(h).__webglTexture,0),n.bindFramebuffer(36160,null)}function j(e,n,r){if(t.bindRenderbuffer(36161,e),n.depthBuffer&&!n.stencilBuffer){let s=33189;if(r){const e=n.depthTexture;e&&e.isDepthTexture&&(1015===e.type?s=36012:1014===e.type&&(s=33190));const r=X(n);t.renderbufferStorageMultisample(36161,r,s,n.width,n.height)}else t.renderbufferStorage(36161,s,n.width,n.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(n.depthBuffer&&n.stencilBuffer){if(r){const e=X(n);t.renderbufferStorageMultisample(36161,e,35056,n.width,n.height)}else t.renderbufferStorage(36161,34041,n.width,n.height);t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=n.texture,s=a.convert(e.format),o=a.convert(e.type),l=I(e.internalFormat,s,o);if(r){const e=X(n);t.renderbufferStorageMultisample(36161,e,l,n.width,n.height)}else t.renderbufferStorage(36161,l,n.width,n.height)}t.bindRenderbuffer(36161,null)}function X(t){return l&&t.isWebGLMultisampleRenderTarget?Math.min(g,t.samples):0}let Y=!1,J=!1;this.allocateTextureUnit=function(){const t=O;return t>=h&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+h),O+=1,t},this.resetTextureUnits=function(){O=0},this.setTexture2D=B,this.setTexture2DArray=function(t,e){const s=r.get(t);t.version>0&&s.__version!==t.version?k(s,t,e):(n.activeTexture(33984+e),n.bindTexture(35866,s.__webglTexture))},this.setTexture3D=function(t,e){const s=r.get(t);t.version>0&&s.__version!==t.version?k(s,t,e):(n.activeTexture(33984+e),n.bindTexture(32879,s.__webglTexture))},this.setTextureCube=F,this.setupRenderTarget=function(e){const s=e.texture,h=r.get(e),c=r.get(s);e.addEventListener("dispose",z),c.__webglTexture=t.createTexture(),c.__version=s.version,o.memory.textures++;const u=!0===e.isWebGLCubeRenderTarget,d=!0===e.isWebGLMultisampleRenderTarget,p=s.isDataTexture3D||s.isDataTexture2DArray,g=C(e)||l;if(!l||1022!==s.format||1015!==s.type&&1016!==s.type||(s.format=1023,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),u){h.__webglFramebuffer=[];for(let e=0;e<6;e++)h.__webglFramebuffer[e]=t.createFramebuffer()}else if(h.__webglFramebuffer=t.createFramebuffer(),d)if(l){h.__webglMultisampledFramebuffer=t.createFramebuffer(),h.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,h.__webglColorRenderbuffer);const r=a.convert(s.format),o=a.convert(s.type),l=I(s.internalFormat,r,o),c=X(e);t.renderbufferStorageMultisample(36161,c,l,e.width,e.height),n.bindFramebuffer(36160,h.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,h.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),e.depthBuffer&&(h.__webglDepthRenderbuffer=t.createRenderbuffer(),j(h.__webglDepthRenderbuffer,e,!0)),n.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(u){n.bindTexture(34067,c.__webglTexture),G(34067,s,g);for(let t=0;t<6;t++)W(h.__webglFramebuffer[t],e,36064,34069+t);P(s,g)&&R(34067,s,e.width,e.height),n.bindTexture(34067,null)}else{let t=3553;p&&(l?t=s.isDataTexture3D?32879:35866:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),n.bindTexture(t,c.__webglTexture),G(t,s,g),W(h.__webglFramebuffer,e,36064,t),P(s,g)&&R(3553,s,e.width,e.height),n.bindTexture(3553,null)}e.depthBuffer&&function(e){const s=r.get(e),a=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture){if(a)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,s){if(s&&s.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,e),!s.depthTexture||!s.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(s.depthTexture).__webglTexture&&s.depthTexture.image.width===s.width&&s.depthTexture.image.height===s.height||(s.depthTexture.image.width=s.width,s.depthTexture.image.height=s.height,s.depthTexture.needsUpdate=!0),B(s.depthTexture,0);const a=r.get(s.depthTexture).__webglTexture;if(1026===s.depthTexture.format)t.framebufferTexture2D(36160,36096,3553,a,0);else{if(1027!==s.depthTexture.format)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(36160,33306,3553,a,0)}}(s.__webglFramebuffer,e)}else if(a){s.__webglDepthbuffer=[];for(let r=0;r<6;r++)n.bindFramebuffer(36160,s.__webglFramebuffer[r]),s.__webglDepthbuffer[r]=t.createRenderbuffer(),j(s.__webglDepthbuffer[r],e,!1)}else n.bindFramebuffer(36160,s.__webglFramebuffer),s.__webglDepthbuffer=t.createRenderbuffer(),j(s.__webglDepthbuffer,e,!1);n.bindFramebuffer(36160,null)}(e)},this.updateRenderTargetMipmap=function(t){const e=t.texture;if(P(e,C(t)||l)){const s=t.isWebGLCubeRenderTarget?34067:3553,a=r.get(e).__webglTexture;n.bindTexture(s,a),R(s,e,t.width,t.height),n.bindTexture(s,null)}},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget)if(l){const s=e.width,a=e.height;let o=16384;e.depthBuffer&&(o|=256),e.stencilBuffer&&(o|=1024);const l=r.get(e);n.bindFramebuffer(36008,l.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,l.__webglFramebuffer),t.blitFramebuffer(0,0,s,a,0,0,s,a,o,9728),n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,l.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(t,e){t&&t.isWebGLRenderTarget&&(!1===Y&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),Y=!0),t=t.texture),B(t,e)},this.safeSetTextureCube=function(t,e){t&&t.isWebGLCubeRenderTarget&&(!1===J&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),J=!0),t=t.texture),F(t,e)}}function Ki(t,e,n){const r=n.isWebGL2;return{convert:function(t){let n;if(1009===t)return 5121;if(1017===t)return 32819;if(1018===t)return 32820;if(1019===t)return 33635;if(1010===t)return 5120;if(1011===t)return 5122;if(1012===t)return 5123;if(1013===t)return 5124;if(1014===t)return 5125;if(1015===t)return 5126;if(1016===t)return r?5131:(n=e.get("OES_texture_half_float"),null!==n?n.HALF_FLOAT_OES:null);if(1021===t)return 6406;if(1022===t)return 6407;if(1023===t)return 6408;if(1024===t)return 6409;if(1025===t)return 6410;if(1026===t)return 6402;if(1027===t)return 34041;if(1028===t)return 6403;if(1029===t)return 36244;if(1030===t)return 33319;if(1031===t)return 33320;if(1032===t)return 36248;if(1033===t)return 36249;if(33776===t||33777===t||33778===t||33779===t){if(n=e.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(33776===t)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===t)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===t)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===t)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===t||35841===t||35842===t||35843===t){if(n=e.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(35840===t)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===t)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===t)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===t)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===t)return n=e.get("WEBGL_compressed_texture_etc1"),null!==n?n.COMPRESSED_RGB_ETC1_WEBGL:null;if((37492===t||37496===t)&&(n=e.get("WEBGL_compressed_texture_etc"),null!==n)){if(37492===t)return n.COMPRESSED_RGB8_ETC2;if(37496===t)return n.COMPRESSED_RGBA8_ETC2_EAC}return 37808===t||37809===t||37810===t||37811===t||37812===t||37813===t||37814===t||37815===t||37816===t||37817===t||37818===t||37819===t||37820===t||37821===t||37840===t||37841===t||37842===t||37843===t||37844===t||37845===t||37846===t||37847===t||37848===t||37849===t||37850===t||37851===t||37852===t||37853===t?(n=e.get("WEBGL_compressed_texture_astc"),null!==n?t:null):36492===t?(n=e.get("EXT_texture_compression_bptc"),null!==n?t:null):1020===t?r?34042:(n=e.get("WEBGL_depth_texture"),null!==n?n.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}Ji.prototype.isMeshDistanceMaterial=!0;class er extends Be{constructor(t=[]){super(),this.cameras=t}}er.prototype.isArrayCamera=!0;class nr extends Tt{constructor(){super(),this.type="Group"}}nr.prototype.isGroup=!0;const $i={type:"move"};class rr{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new nr,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new nr,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new S,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new S),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new nr,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new S,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new S),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,n){let r=null,s=null,a=null;const o=this._targetRay,l=this._grip,h=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState)if(null!==o&&(r=e.getPose(t.targetRaySpace,n),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent($i))),h&&t.hand){a=!0;for(const a of t.hand.values()){const t=e.getJointPose(a,n);if(void 0===h.joints[a.jointName]){const t=new nr;t.matrixAutoUpdate=!1,t.visible=!1,h.joints[a.jointName]=t,h.add(t)}const r=h.joints[a.jointName];null!==t&&(r.matrix.fromArray(t.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.jointRadius=t.radius),r.visible=null!==t}const r=h.joints["index-finger-tip"],s=h.joints["thumb-tip"],o=r.position.distanceTo(s.position),l=.02,c=.005;h.inputState.pinching&&o>l+c?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!h.inputState.pinching&&o<=l-c&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==l&&t.gripSpace&&(s=e.getPose(t.gripSpace,n),null!==s&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));return null!==o&&(o.visible=null!==r),null!==l&&(l.visible=null!==s),null!==h&&(h.visible=null!==a),this}}class sr extends i{constructor(t,e){super();const n=this,r=t.state;let s=null,a=1,o=null,l="local-floor",h=null;const c=[],u=new Map,d=new Be;d.layers.enable(1),d.viewport=new b;const p=new Be;p.layers.enable(2),p.viewport=new b;const g=[d,p],y=new er;y.layers.enable(1),y.layers.enable(2);let _=null,E=null;function T(t){const e=u.get(t.inputSource);e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function A(){u.forEach((function(t,e){t.disconnect(e)})),u.clear(),_=null,E=null,r.bindXRFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),N.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function C(t){const e=s.inputSources;for(let n=0;n<c.length;n++)u.set(e[n],c[n]);for(let n=0;n<t.removed.length;n++){const e=t.removed[n],r=u.get(e);r&&(r.dispatchEvent({type:"disconnected",data:e}),u.delete(e))}for(let n=0;n<t.added.length;n++){const e=t.added[n],r=u.get(e);r&&r.dispatchEvent({type:"connected",data:e})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=c[t];return void 0===e&&(e=new rr,c[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=c[t];return void 0===e&&(e=new rr,c[t]=e),e.getGripSpace()},this.getHand=function(t){let e=c[t];return void 0===e&&(e=new rr,c[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){a=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){l=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o},this.getSession=function(){return s},this.setSession=async function(t){if(s=t,null!==s){s.addEventListener("select",T),s.addEventListener("selectstart",T),s.addEventListener("selectend",T),s.addEventListener("squeeze",T),s.addEventListener("squeezestart",T),s.addEventListener("squeezeend",T),s.addEventListener("end",A),s.addEventListener("inputsourceschange",C);const t=e.getContextAttributes();!0!==t.xrCompatible&&await e.makeXRCompatible();const r={antialias:t.antialias,alpha:t.alpha,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:a},h=new XRWebGLLayer(s,e,r);s.updateRenderState({baseLayer:h}),o=await s.requestReferenceSpace(l),N.setContext(s),N.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};const P=new S,R=new S;function I(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.getCamera=function(t){y.near=p.near=d.near=t.near,y.far=p.far=d.far=t.far,_===y.near&&E===y.far||(s.updateRenderState({depthNear:y.near,depthFar:y.far}),_=y.near,E=y.far);const e=t.parent,n=y.cameras;I(y,e);for(let s=0;s<n.length;s++)I(n[s],e);t.matrixWorld.copy(y.matrixWorld),t.matrix.copy(y.matrix),t.matrix.decompose(t.position,t.quaternion,t.scale);const r=t.children;for(let s=0,a=r.length;s<a;s++)r[s].updateMatrixWorld(!0);return 2===n.length?function(t,e,n){P.setFromMatrixPosition(e.matrixWorld),R.setFromMatrixPosition(n.matrixWorld);const r=P.distanceTo(R),s=e.projectionMatrix.elements,a=n.projectionMatrix.elements,o=s[14]/(s[10]-1),l=s[14]/(s[10]+1),h=(s[9]+1)/s[5],c=(s[9]-1)/s[5],u=(s[8]-1)/s[0],d=(a[8]+1)/a[0],p=o*u,g=o*d,y=r/(-u+d),_=y*-u;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(_),t.translateZ(y),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const E=o+y,T=l+y,A=p-_,C=g+(r-_),I=h*l/T*E,D=c*l/T*E;t.projectionMatrix.makePerspective(A,C,I,D,E,T)}(y,d,p):y.projectionMatrix.copy(d.projectionMatrix),y};let D=null;const N=new ke;N.setAnimationLoop((function(t,e){if(h=e.getViewerPose(o),null!==h){const t=h.views,e=s.renderState.baseLayer;r.bindXRFramebuffer(e.framebuffer);let n=!1;t.length!==y.cameras.length&&(y.cameras.length=0,n=!0);for(let r=0;r<t.length;r++){const s=t[r],a=e.getViewport(s),o=g[r];o.matrix.fromArray(s.transform.matrix),o.projectionMatrix.fromArray(s.projectionMatrix),o.viewport.set(a.x,a.y,a.width,a.height),0===r&&y.matrix.copy(o.matrix),!0===n&&y.cameras.push(o)}}const n=s.inputSources;for(let r=0;r<c.length;r++){const t=c[r],s=n[r];t.update(s,e,o)}D&&D(t,e)})),this.setAnimationLoop=function(t){D=t},this.dispose=function(){}}}function tr(t){function e(e,n){e.opacity.value=n.opacity,n.color&&e.diffuse.value.copy(n.color),n.emissive&&e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(e.map.value=n.map),n.alphaMap&&(e.alphaMap.value=n.alphaMap),n.specularMap&&(e.specularMap.value=n.specularMap);const r=t.get(n).envMap;if(r){e.envMap.value=r,e.flipEnvMap.value=r.isCubeTexture&&r._needsFlipEnvMap?-1:1,e.reflectivity.value=n.reflectivity,e.refractionRatio.value=n.refractionRatio;const s=t.get(r).__maxMipLevel;void 0!==s&&(e.maxMipLevel.value=s)}let s,a;n.lightMap&&(e.lightMap.value=n.lightMap,e.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(e.aoMap.value=n.aoMap,e.aoMapIntensity.value=n.aoMapIntensity),n.map?s=n.map:n.specularMap?s=n.specularMap:n.displacementMap?s=n.displacementMap:n.normalMap?s=n.normalMap:n.bumpMap?s=n.bumpMap:n.roughnessMap?s=n.roughnessMap:n.metalnessMap?s=n.metalnessMap:n.alphaMap?s=n.alphaMap:n.emissiveMap?s=n.emissiveMap:n.clearcoatMap?s=n.clearcoatMap:n.clearcoatNormalMap?s=n.clearcoatNormalMap:n.clearcoatRoughnessMap&&(s=n.clearcoatRoughnessMap),void 0!==s&&(s.isWebGLRenderTarget&&(s=s.texture),!0===s.matrixAutoUpdate&&s.updateMatrix(),e.uvTransform.value.copy(s.matrix)),n.aoMap?a=n.aoMap:n.lightMap&&(a=n.lightMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),e.uv2Transform.value.copy(a.matrix))}function n(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(e.emissiveMap.value=n.emissiveMap),n.bumpMap&&(e.bumpMap.value=n.bumpMap,e.bumpScale.value=n.bumpScale,1===n.side&&(e.bumpScale.value*=-1)),n.normalMap&&(e.normalMap.value=n.normalMap,e.normalScale.value.copy(n.normalScale),1===n.side&&e.normalScale.value.negate()),n.displacementMap&&(e.displacementMap.value=n.displacementMap,e.displacementScale.value=n.displacementScale,e.displacementBias.value=n.displacementBias),t.get(n).envMap&&(e.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,r,s,a){r.isMeshBasicMaterial?e(t,r):r.isMeshLambertMaterial?(e(t,r),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(t,r)):r.isMeshToonMaterial?(e(t,r),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshPhongMaterial?(e(t,r),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshStandardMaterial?(e(t,r),r.isMeshPhysicalMaterial?function(t,e){n(t,e),t.reflectivity.value=e.reflectivity,t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.sheen&&t.sheen.value.copy(e.sheen),e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap),e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,1===e.side&&t.clearcoatNormalScale.value.negate()),t.transmission.value=e.transmission,e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap)}(t,r):n(t,r)):r.isMeshMatcapMaterial?(e(t,r),function(t,e){e.matcap&&(t.matcap.value=e.matcap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshDepthMaterial?(e(t,r),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshDistanceMaterial?(e(t,r),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,r)):r.isMeshNormalMaterial?(e(t,r),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,r),r.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,r)):r.isPointsMaterial?function(t,e,n,r){let s;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*r,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.map?s=e.map:e.alphaMap&&(s=e.alphaMap),void 0!==s&&(!0===s.matrixAutoUpdate&&s.updateMatrix(),t.uvTransform.value.copy(s.matrix))}(t,r,s,a):r.isSpriteMaterial?function(t,e){let n;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.map?n=e.map:e.alphaMap&&(n=e.alphaMap),void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}(t,r):r.isShadowMaterial?(t.color.value.copy(r.color),t.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function ir(t){const e=void 0!==(t=t||{}).canvas?t.canvas:function(){const t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return t.style.display="block",t}(),n=void 0!==t.context?t.context:null,r=void 0!==t.alpha&&t.alpha,s=void 0===t.depth||t.depth,a=void 0===t.stencil||t.stencil,o=void 0!==t.antialias&&t.antialias,l=void 0===t.premultipliedAlpha||t.premultipliedAlpha,h=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,c=void 0!==t.powerPreference?t.powerPreference:"default",u=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let d=null,p=null;const g=[],y=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=3e3,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1;const _=this;let E=!1,T=0,A=0,C=null,P=-1,R=null;const I=new b,D=new b;let N=null,z=e.width,O=e.height,B=1,F=null,H=null;const U=new b(0,0,z,O),G=new b(0,0,z,O);let V=!1;const k=new je;let W=!1,j=!1;const X=new et,Y=new S,J={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Z(){return null===C?B:1}let Q,K,$,nt,it,rt,st,at,ot,lt,ht,ct,pt,mt,ft,gt,vt,yt,xt,_t,bt,wt,Mt=n;function St(t,n){for(let r=0;r<t.length;r++){const s=t[r],a=e.getContext(s,n);if(null!==a)return a}return null}try{const t={alpha:r,depth:s,stencil:a,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:h,powerPreference:c,failIfMajorPerformanceCaveat:u};if(e.addEventListener("webglcontextlost",At,!1),e.addEventListener("webglcontextrestored",Ct,!1),null===Mt){const e=["webgl2","webgl","experimental-webgl"];if(!0===_.isWebGL1Renderer&&e.shift(),Mt=St(e,t),null===Mt)throw St(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===Mt.getShaderPrecisionFormat&&(Mt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function Et(){Q=new nn(Mt),K=new $e(Mt,Q,t),Q.init(K),bt=new Ki(Mt,Q,K),$=new Yi(Mt,Q,K),nt=new an(Mt),it=new Oi,rt=new Qi(Mt,Q,$,it,K,bt,nt),st=new en(_),at=new We(Mt,K),wt=new Qe(Mt,Q,at,K),ot=new rn(Mt,at,nt,wt),lt=new cn(Mt,ot,at,nt),yt=new hn(Mt),ft=new tn(it),ht=new zi(_,st,Q,K,wt,ft),ct=new tr(it),pt=new Ui(it),mt=new qi(Q,K),vt=new Ze(_,st,$,lt,l),gt=new Xi(_,lt,K),xt=new Ke(Mt,Q,nt,K),_t=new sn(Mt,Q,nt,K),nt.programs=ht.programs,_.capabilities=K,_.extensions=Q,_.properties=it,_.renderLists=pt,_.shadowMap=gt,_.state=$,_.info=nt}Et();const Lt=new sr(_,Mt);function At(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),E=!0}function Ct(){console.log("THREE.WebGLRenderer: Context Restored."),E=!1;const t=nt.autoReset,e=gt.enabled,n=gt.autoUpdate,r=gt.needsUpdate,s=gt.type;Et(),nt.autoReset=t,gt.enabled=e,gt.autoUpdate=n,gt.needsUpdate=r,gt.type=s}function Rt(t){const e=t.target;e.removeEventListener("dispose",Rt),function(t){(function(t){const e=it.get(t).programs;void 0!==e&&e.forEach((function(t){ht.releaseProgram(t)}))})(t),it.remove(t)}(e)}this.xr=Lt,this.getContext=function(){return Mt},this.getContextAttributes=function(){return Mt.getContextAttributes()},this.forceContextLoss=function(){const t=Q.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=Q.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return B},this.setPixelRatio=function(t){void 0!==t&&(B=t,this.setSize(z,O,!1))},this.getSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),t=new m),t.set(z,O)},this.setSize=function(t,n,r){Lt.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(z=t,O=n,e.width=Math.floor(t*B),e.height=Math.floor(n*B),!1!==r&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),t=new m),t.set(z*B,O*B).floor()},this.setDrawingBufferSize=function(t,n,r){z=t,O=n,B=r,e.width=Math.floor(t*r),e.height=Math.floor(n*r),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),t=new b),t.copy(I)},this.getViewport=function(t){return t.copy(U)},this.setViewport=function(t,e,n,r){t.isVector4?U.set(t.x,t.y,t.z,t.w):U.set(t,e,n,r),$.viewport(I.copy(U).multiplyScalar(B).floor())},this.getScissor=function(t){return t.copy(G)},this.setScissor=function(t,e,n,r){t.isVector4?G.set(t.x,t.y,t.z,t.w):G.set(t,e,n,r),$.scissor(D.copy(G).multiplyScalar(B).floor())},this.getScissorTest=function(){return V},this.setScissorTest=function(t){$.setScissorTest(V=t)},this.setOpaqueSort=function(t){F=t},this.setTransparentSort=function(t){H=t},this.getClearColor=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),t=new Jt),t.copy(vt.getClearColor())},this.setClearColor=function(){vt.setClearColor.apply(vt,arguments)},this.getClearAlpha=function(){return vt.getClearAlpha()},this.setClearAlpha=function(){vt.setClearAlpha.apply(vt,arguments)},this.clear=function(t,e,n){let r=0;(void 0===t||t)&&(r|=16384),(void 0===e||e)&&(r|=256),(void 0===n||n)&&(r|=1024),Mt.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",At,!1),e.removeEventListener("webglcontextrestored",Ct,!1),pt.dispose(),mt.dispose(),it.dispose(),st.dispose(),lt.dispose(),wt.dispose(),Lt.dispose(),Lt.removeEventListener("sessionstart",Dt),Lt.removeEventListener("sessionend",Nt),zt.stop()},this.renderBufferImmediate=function(t,e){wt.initAttributes();const n=it.get(t);t.hasPositions&&!n.position&&(n.position=Mt.createBuffer()),t.hasNormals&&!n.normal&&(n.normal=Mt.createBuffer()),t.hasUvs&&!n.uv&&(n.uv=Mt.createBuffer()),t.hasColors&&!n.color&&(n.color=Mt.createBuffer());const r=e.getAttributes();t.hasPositions&&(Mt.bindBuffer(34962,n.position),Mt.bufferData(34962,t.positionArray,35048),wt.enableAttribute(r.position),Mt.vertexAttribPointer(r.position,3,5126,!1,0,0)),t.hasNormals&&(Mt.bindBuffer(34962,n.normal),Mt.bufferData(34962,t.normalArray,35048),wt.enableAttribute(r.normal),Mt.vertexAttribPointer(r.normal,3,5126,!1,0,0)),t.hasUvs&&(Mt.bindBuffer(34962,n.uv),Mt.bufferData(34962,t.uvArray,35048),wt.enableAttribute(r.uv),Mt.vertexAttribPointer(r.uv,2,5126,!1,0,0)),t.hasColors&&(Mt.bindBuffer(34962,n.color),Mt.bufferData(34962,t.colorArray,35048),wt.enableAttribute(r.color),Mt.vertexAttribPointer(r.color,3,5126,!1,0,0)),wt.disableUnusedAttributes(),Mt.drawArrays(4,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,n,r,s,a){null===e&&(e=J);const o=s.isMesh&&s.matrixWorld.determinant()<0,l=Vt(t,e,r,s);$.setMaterial(r,o);let h=n.index;const c=n.attributes.position;if(null===h){if(void 0===c||0===c.count)return}else if(0===h.count)return;let u,d=1;!0===r.wireframe&&(h=ot.getWireframeAttribute(n),d=2),(r.morphTargets||r.morphNormals)&&yt.update(s,n,r,l),wt.setup(s,r,l,n,h);let p=xt;null!==h&&(u=at.get(h),p=_t,p.setIndex(u));const g=null!==h?h.count:c.count,y=n.drawRange.start*d,_=n.drawRange.count*d,E=null!==a?a.start*d:0,T=null!==a?a.count*d:1/0,A=Math.max(y,E),C=Math.min(g,y+_,E+T)-1,P=Math.max(0,C-A+1);if(0!==P){if(s.isMesh)!0===r.wireframe?($.setLineWidth(r.wireframeLinewidth*Z()),p.setMode(1)):p.setMode(4);else if(s.isLine){let t=r.linewidth;void 0===t&&(t=1),$.setLineWidth(t*Z()),s.isLineSegments?p.setMode(1):s.isLineLoop?p.setMode(2):p.setMode(3)}else s.isPoints?p.setMode(0):s.isSprite&&p.setMode(4);if(s.isInstancedMesh)p.renderInstances(A,P,s.count);else if(n.isInstancedBufferGeometry){const t=Math.min(n.instanceCount,n._maxInstanceCount);p.renderInstances(A,P,t)}else p.render(A,P)}},this.compile=function(t,e){p=mt.get(t),p.init(),t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(p.pushLight(t),t.castShadow&&p.pushShadow(t))})),p.setupLights(),t.traverse((function(e){const n=e.material;if(n)if(Array.isArray(n))for(let r=0;r<n.length;r++)Ht(n[r],t,e);else Ht(n,t,e)}))};let It=null;function Dt(){zt.stop()}function Nt(){zt.start()}const zt=new ke;function Ot(t,e,n,r){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)p.pushLight(t),t.castShadow&&p.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||k.intersectsSprite(t)){r&&Y.setFromMatrixPosition(t.matrixWorld).applyMatrix4(X);const e=lt.update(t),s=t.material;s.visible&&d.push(t,e,s,n,Y.z,null)}}else if(t.isImmediateRenderObject)r&&Y.setFromMatrixPosition(t.matrixWorld).applyMatrix4(X),d.push(t,null,t.material,n,Y.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==nt.render.frame&&(t.skeleton.update(),t.skeleton.frame=nt.render.frame),!t.frustumCulled||k.intersectsObject(t))){r&&Y.setFromMatrixPosition(t.matrixWorld).applyMatrix4(X);const e=lt.update(t),s=t.material;if(Array.isArray(s)){const r=e.groups;for(let a=0,o=r.length;a<o;a++){const o=r[a],l=s[o.materialIndex];l&&l.visible&&d.push(t,e,l,n,Y.z,o)}}else s.visible&&d.push(t,e,s,n,Y.z,null)}const s=t.children;for(let a=0,o=s.length;a<o;a++)Ot(s[a],e,n,r)}function Bt(t,e,n){const r=!0===e.isScene?e.overrideMaterial:null;for(let s=0,a=t.length;s<a;s++){const a=t[s],o=a.object,l=a.geometry,h=null===r?a.material:r,c=a.group;if(n.isArrayCamera){const t=n.cameras;for(let n=0,r=t.length;n<r;n++){const r=t[n];o.layers.test(r.layers)&&($.viewport(I.copy(r.viewport)),p.setupLightsView(r),Ft(o,e,r,l,h,c))}}else Ft(o,e,n,l,h,c)}}function Ft(t,e,n,r,s,a){if(t.onBeforeRender(_,e,n,r,s,a),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){const r=Vt(n,e,s,t);$.setMaterial(s),wt.reset(),function(t,e){t.render((function(t){_.renderBufferImmediate(t,e)}))}(t,r)}else _.renderBufferDirect(n,e,r,s,t,a);t.onAfterRender(_,e,n,r,s,a)}function Ht(t,e,n){!0!==e.isScene&&(e=J);const r=it.get(t),s=p.state.lights,a=p.state.shadowsArray,o=s.state.version,l=ht.getParameters(t,s.state,a,e,n),h=ht.getProgramCacheKey(l);let c=r.programs;r.environment=t.isMeshStandardMaterial?e.environment:null,r.fog=e.fog,r.envMap=st.get(t.envMap||r.environment),void 0===c&&(t.addEventListener("dispose",Rt),c=new Map,r.programs=c);let u=c.get(h);if(void 0!==u){if(r.currentProgram===u&&r.lightsStateVersion===o)return Ut(t,l),u}else l.uniforms=ht.getUniforms(t),t.onBuild(l,_),t.onBeforeCompile(l,_),u=ht.acquireProgram(l,h),c.set(h,u),r.uniforms=l.uniforms;const d=r.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(d.clippingPlanes=ft.uniform),Ut(t,l),r.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),r.lightsStateVersion=o,r.needsLights&&(d.ambientLightColor.value=s.state.ambient,d.lightProbe.value=s.state.probe,d.directionalLights.value=s.state.directional,d.directionalLightShadows.value=s.state.directionalShadow,d.spotLights.value=s.state.spot,d.spotLightShadows.value=s.state.spotShadow,d.rectAreaLights.value=s.state.rectArea,d.ltc_1.value=s.state.rectAreaLTC1,d.ltc_2.value=s.state.rectAreaLTC2,d.pointLights.value=s.state.point,d.pointLightShadows.value=s.state.pointShadow,d.hemisphereLights.value=s.state.hemi,d.directionalShadowMap.value=s.state.directionalShadowMap,d.directionalShadowMatrix.value=s.state.directionalShadowMatrix,d.spotShadowMap.value=s.state.spotShadowMap,d.spotShadowMatrix.value=s.state.spotShadowMatrix,d.pointShadowMap.value=s.state.pointShadowMap,d.pointShadowMatrix.value=s.state.pointShadowMatrix);const g=u.getUniforms(),y=mi.seqWithValue(g.seq,d);return r.currentProgram=u,r.uniformsList=y,u}function Ut(t,e){const n=it.get(t);n.outputEncoding=e.outputEncoding,n.instancing=e.instancing,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas}function Vt(t,e,n,r){!0!==e.isScene&&(e=J),rt.resetTextureUnits();const s=e.fog,a=n.isMeshStandardMaterial?e.environment:null,o=null===C?_.outputEncoding:C.texture.encoding,l=st.get(n.envMap||a),h=!0===n.vertexColors&&r.geometry&&r.geometry.attributes.color&&4===r.geometry.attributes.color.itemSize,c=it.get(n),u=p.state.lights;if(!0===W&&(!0===j||t!==R)){const e=t===R&&n.id===P;ft.setState(n,t,e)}let d=!1;n.version===c.__version?c.needsLights&&c.lightsStateVersion!==u.state.version||c.outputEncoding!==o||r.isInstancedMesh&&!1===c.instancing?d=!0:r.isInstancedMesh||!0!==c.instancing?c.envMap!==l||n.fog&&c.fog!==s?d=!0:void 0===c.numClippingPlanes||c.numClippingPlanes===ft.numPlanes&&c.numIntersection===ft.numIntersection?c.vertexAlphas!==h&&(d=!0):d=!0:d=!0:(d=!0,c.__version=n.version);let g=c.currentProgram;!0===d&&(g=Ht(n,e,r));let y=!1,E=!1,T=!1;const A=g.getUniforms(),I=c.uniforms;if($.useProgram(g.program)&&(y=!0,E=!0,T=!0),n.id!==P&&(P=n.id,E=!0),y||R!==t){if(A.setValue(Mt,"projectionMatrix",t.projectionMatrix),K.logarithmicDepthBuffer&&A.setValue(Mt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),R!==t&&(R=t,E=!0,T=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const e=A.map.cameraPosition;void 0!==e&&e.setValue(Mt,Y.setFromMatrixPosition(t.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&A.setValue(Mt,"isOrthographic",!0===t.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||n.skinning)&&A.setValue(Mt,"viewMatrix",t.matrixWorldInverse)}if(n.skinning){A.setOptional(Mt,r,"bindMatrix"),A.setOptional(Mt,r,"bindMatrixInverse");const t=r.skeleton;if(t){const e=t.bones;if(K.floatVertexTextures){if(null===t.boneTexture){let n=Math.sqrt(4*e.length);n=function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))}(n),n=Math.max(n,4);const r=new Float32Array(n*n*4);r.set(t.boneMatrices);const s=new Ve(r,n,n,1023,1015);t.boneMatrices=r,t.boneTexture=s,t.boneTextureSize=n}A.setValue(Mt,"boneTexture",t.boneTexture,rt),A.setValue(Mt,"boneTextureSize",t.boneTextureSize)}else A.setOptional(Mt,t,"boneMatrices")}}var D,N;return(E||c.receiveShadow!==r.receiveShadow)&&(c.receiveShadow=r.receiveShadow,A.setValue(Mt,"receiveShadow",r.receiveShadow)),E&&(A.setValue(Mt,"toneMappingExposure",_.toneMappingExposure),c.needsLights&&(N=T,(D=I).ambientLightColor.needsUpdate=N,D.lightProbe.needsUpdate=N,D.directionalLights.needsUpdate=N,D.directionalLightShadows.needsUpdate=N,D.pointLights.needsUpdate=N,D.pointLightShadows.needsUpdate=N,D.spotLights.needsUpdate=N,D.spotLightShadows.needsUpdate=N,D.rectAreaLights.needsUpdate=N,D.hemisphereLights.needsUpdate=N),s&&n.fog&&ct.refreshFogUniforms(I,s),ct.refreshMaterialUniforms(I,n,B,O),mi.upload(Mt,c.uniformsList,I,rt)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(mi.upload(Mt,c.uniformsList,I,rt),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&A.setValue(Mt,"center",r.center),A.setValue(Mt,"modelViewMatrix",r.modelViewMatrix),A.setValue(Mt,"normalMatrix",r.normalMatrix),A.setValue(Mt,"modelMatrix",r.matrixWorld),g}zt.setAnimationLoop((function(t){It&&It(t)})),"undefined"!=typeof window&&zt.setContext(window),this.setAnimationLoop=function(t){It=t,Lt.setAnimationLoop(t),null===t?zt.stop():zt.start()},Lt.addEventListener("sessionstart",Dt),Lt.addEventListener("sessionend",Nt),this.render=function(t,e){let n,r;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),r=arguments[3]),void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===E)return;!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===Lt.enabled&&!0===Lt.isPresenting&&(e=Lt.getCamera(e)),!0===t.isScene&&t.onBeforeRender(_,t,e,n||C),p=mt.get(t,y.length),p.init(),y.push(p),X.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),k.setFromProjectionMatrix(X),j=this.localClippingEnabled,W=ft.init(this.clippingPlanes,j,e),d=pt.get(t,g.length),d.init(),g.push(d),Ot(t,e,0,_.sortObjects),d.finish(),!0===_.sortObjects&&d.sort(F,H),!0===W&&ft.beginShadows();const s=p.state.shadowsArray;gt.render(s,t,e),p.setupLights(),p.setupLightsView(e),!0===W&&ft.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),vt.render(d,t,e,r);const a=d.opaque,o=d.transparent;a.length>0&&Bt(a,t,e),o.length>0&&Bt(o,t,e),null!==C&&(rt.updateRenderTargetMipmap(C),rt.updateMultisampleRenderTarget(C)),!0===t.isScene&&t.onAfterRender(_,t,e),$.buffers.depth.setTest(!0),$.buffers.depth.setMask(!0),$.buffers.color.setMask(!0),$.setPolygonOffset(!1),wt.resetDefaultState(),P=-1,R=null,y.pop(),p=y.length>0?y[y.length-1]:null,g.pop(),d=g.length>0?g[g.length-1]:null},this.getActiveCubeFace=function(){return T},this.getActiveMipmapLevel=function(){return A},this.getRenderTarget=function(){return C},this.setRenderTarget=function(t,e=0,n=0){C=t,T=e,A=n,t&&void 0===it.get(t).__webglFramebuffer&&rt.setupRenderTarget(t);let r=null,s=!1,a=!1;if(t){const n=t.texture;(n.isDataTexture3D||n.isDataTexture2DArray)&&(a=!0);const o=it.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(r=o[e],s=!0):r=t.isWebGLMultisampleRenderTarget?it.get(t).__webglMultisampledFramebuffer:o,I.copy(t.viewport),D.copy(t.scissor),N=t.scissorTest}else I.copy(U).multiplyScalar(B).floor(),D.copy(G).multiplyScalar(B).floor(),N=V;if($.bindFramebuffer(36160,r),$.viewport(I),$.scissor(D),$.setScissorTest(N),s){const r=it.get(t.texture);Mt.framebufferTexture2D(36160,36064,34069+e,r.__webglTexture,n)}else if(a){const r=it.get(t.texture),s=e||0;Mt.framebufferTextureLayer(36160,36064,r.__webglTexture,n||0,s)}},this.readRenderTargetPixels=function(t,e,n,r,s,a,o){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let l=it.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==o&&(l=l[o]),l){$.bindFramebuffer(36160,l);try{const o=t.texture,l=o.format,h=o.type;if(1023!==l&&bt.convert(l)!==Mt.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const c=1016===h&&(Q.has("EXT_color_buffer_half_float")||K.isWebGL2&&Q.has("EXT_color_buffer_float"));if(!(1009===h||bt.convert(h)===Mt.getParameter(35738)||1015===h&&(K.isWebGL2||Q.has("OES_texture_float")||Q.has("WEBGL_color_buffer_float"))||c))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===Mt.checkFramebufferStatus(36160)?e>=0&&e<=t.width-r&&n>=0&&n<=t.height-s&&Mt.readPixels(e,n,r,s,bt.convert(l),bt.convert(h),a):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const t=null!==C?it.get(C).__webglFramebuffer:null;$.bindFramebuffer(36160,t)}}},this.copyFramebufferToTexture=function(t,e,n=0){const r=Math.pow(2,-n),s=Math.floor(e.image.width*r),a=Math.floor(e.image.height*r),o=bt.convert(e.format);rt.setTexture2D(e,0),Mt.copyTexImage2D(3553,n,o,t.x,t.y,s,a,0),$.unbindTexture()},this.copyTextureToTexture=function(t,e,n,r=0){const s=e.image.width,a=e.image.height,o=bt.convert(n.format),l=bt.convert(n.type);rt.setTexture2D(n,0),Mt.pixelStorei(37440,n.flipY),Mt.pixelStorei(37441,n.premultiplyAlpha),Mt.pixelStorei(3317,n.unpackAlignment),e.isDataTexture?Mt.texSubImage2D(3553,r,t.x,t.y,s,a,o,l,e.image.data):e.isCompressedTexture?Mt.compressedTexSubImage2D(3553,r,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,o,e.mipmaps[0].data):Mt.texSubImage2D(3553,r,t.x,t.y,o,l,e.image),0===r&&n.generateMipmaps&&Mt.generateMipmap(3553),$.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n,r,s=0){if(_.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const{width:a,height:o,data:l}=n.image,h=bt.convert(r.format),c=bt.convert(r.type);let u;if(r.isDataTexture3D)rt.setTexture3D(r,0),u=32879;else{if(!r.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");rt.setTexture2DArray(r,0),u=35866}Mt.pixelStorei(37440,r.flipY),Mt.pixelStorei(37441,r.premultiplyAlpha),Mt.pixelStorei(3317,r.unpackAlignment);const d=Mt.getParameter(3314),p=Mt.getParameter(32878),g=Mt.getParameter(3316),y=Mt.getParameter(3315),E=Mt.getParameter(32877);Mt.pixelStorei(3314,a),Mt.pixelStorei(32878,o),Mt.pixelStorei(3316,t.min.x),Mt.pixelStorei(3315,t.min.y),Mt.pixelStorei(32877,t.min.z),Mt.texSubImage3D(u,s,e.x,e.y,e.z,t.max.x-t.min.x+1,t.max.y-t.min.y+1,t.max.z-t.min.z+1,h,c,l),Mt.pixelStorei(3314,d),Mt.pixelStorei(32878,p),Mt.pixelStorei(3316,g),Mt.pixelStorei(3315,y),Mt.pixelStorei(32877,E),0===s&&r.generateMipmaps&&Mt.generateMipmap(u),$.unbindTexture()},this.initTexture=function(t){rt.setTexture2D(t,0),$.unbindTexture()},this.resetState=function(){T=0,A=0,C=null,$.reset(),wt.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}(class extends ir{}).prototype.isWebGL1Renderer=!0;class lr{constructor(t,e=25e-5){this.name="",this.color=new Jt(t),this.density=e}clone(){return new lr(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}lr.prototype.isFogExp2=!0;class hr{constructor(t,e=1,n=1e3){this.name="",this.color=new Jt(t),this.near=e,this.far=n}clone(){return new hr(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}hr.prototype.isFog=!0;class cr extends Tt{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.environment&&(e.object.environment=this.environment.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}cr.prototype.isScene=!0;class ur{constructor(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=o(),this.onUploadCallback=function(){}}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let r=0,s=this.stride;r<s;r++)this.array[t+r]=e.array[n+r];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=o()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new ur(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=o()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}ur.prototype.isInterleavedBuffer=!0;const ar=new S;class pr{constructor(t,e,n,r){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)ar.x=this.getX(e),ar.y=this.getY(e),ar.z=this.getZ(e),ar.applyMatrix4(t),this.setXYZ(e,ar.x,ar.y,ar.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)ar.x=this.getX(e),ar.y=this.getY(e),ar.z=this.getZ(e),ar.applyNormalMatrix(t),this.setXYZ(e,ar.x,ar.y,ar.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)ar.x=this.getX(e),ar.y=this.getY(e),ar.z=this.getZ(e),ar.transformDirection(t),this.setXYZ(e,ar.x,ar.y,ar.z);return this}setX(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){return this.data.array[t*this.data.stride+this.offset]}getY(t){return this.data.array[t*this.data.stride+this.offset+1]}getZ(t){return this.data.array[t*this.data.stride+this.offset+2]}getW(t){return this.data.array[t*this.data.stride+this.offset+3]}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this}setXYZW(t,e,n,r,s){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this.data.array[t+3]=s,this}clone(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new te(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new pr(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}pr.prototype.isInterleavedBufferAttribute=!0;class mr extends Ut{constructor(t){super(),this.type="SpriteMaterial",this.color=new Jt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this}}let or;mr.prototype.isSpriteMaterial=!0;const dr=new S,fr=new S,gr=new S,vr=new m,yr=new m,xr=new et,_r=new S,br=new S,wr=new S,Mr=new m,Sr=new m,Er=new m;function Tr(t,e,n,r,s,a){vr.subVectors(t,n).addScalar(.5).multiply(r),void 0!==s?(yr.x=a*vr.x-s*vr.y,yr.y=s*vr.x+a*vr.y):yr.copy(vr),t.copy(e),t.x+=yr.x,t.y+=yr.y,t.applyMatrix4(xr)}(class Ar extends Tt{constructor(t){if(super(),this.type="Sprite",void 0===or){or=new de;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new ur(t,5);or.setIndex([0,1,2,0,2,3]),or.setAttribute("position",new pr(e,3,0,!1)),or.setAttribute("uv",new pr(e,2,3,!1))}this.geometry=or,this.material=void 0!==t?t:new mr,this.center=new m(.5,.5)}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),fr.setFromMatrixScale(this.matrixWorld),xr.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),gr.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&fr.multiplyScalar(-gr.z);const n=this.material.rotation;let r,s;0!==n&&(s=Math.cos(n),r=Math.sin(n));const a=this.center;Tr(_r.set(-.5,-.5,0),gr,a,fr,r,s),Tr(br.set(.5,-.5,0),gr,a,fr,r,s),Tr(wr.set(.5,.5,0),gr,a,fr,r,s),Mr.set(0,0),Sr.set(1,0),Er.set(1,1);let o=t.ray.intersectTriangle(_r,br,wr,!1,dr);if(null===o&&(Tr(br.set(-.5,.5,0),gr,a,fr,r,s),Sr.set(0,1),o=t.ray.intersectTriangle(_r,wr,br,!1,dr),null===o))return;const l=t.ray.origin.distanceTo(dr);l<t.near||l>t.far||e.push({distance:l,point:dr.clone(),uv:Gt.getUV(dr,_r,br,wr,Mr,Sr,Er,new m),face:null,object:this})}copy(t){return super.copy(t),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}).prototype.isSprite=!0;const Lr=new S,Cr=new b,Pr=new b,Rr=new S,Ir=new et;class zr extends Pe{constructor(t,e){super(t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new et,this.bindMatrixInverse=new et}copy(t){return super.copy(t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this}bind(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new b,e=this.geometry.attributes.skinWeight;for(let n=0,r=e.count;n<r;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);const r=1/t.manhattanLength();r!==1/0?t.multiplyScalar(r):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(t,e){const n=this.skeleton,r=this.geometry;Cr.fromBufferAttribute(r.attributes.skinIndex,t),Pr.fromBufferAttribute(r.attributes.skinWeight,t),Lr.fromBufferAttribute(r.attributes.position,t).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let s=0;s<4;s++){const t=Pr.getComponent(s);if(0!==t){const r=Cr.getComponent(s);Ir.multiplyMatrices(n.bones[r].matrixWorld,n.boneInverses[r]),e.addScaledVector(Rr.copy(Lr).applyMatrix4(Ir),t)}}return e.applyMatrix4(this.bindMatrixInverse)}}zr.prototype.isSkinnedMesh=!0;(class Or extends Tt{constructor(){super(),this.type="Bone"}}).prototype.isBone=!0;const Dr=new et,Nr=new et,Br=[],Fr=new Pe;class Gr extends Pe{constructor(t,e,n){super(t,e),this.instanceMatrix=new te(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(t){return super.copy(t),this.instanceMatrix.copy(t.instanceMatrix),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this}getColorAt(t,e){e.fromArray(this.instanceColor.array,3*t)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,16*t)}raycast(t,e){const n=this.matrixWorld,r=this.count;if(Fr.geometry=this.geometry,Fr.material=this.material,void 0!==Fr.material)for(let s=0;s<r;s++){this.getMatrixAt(s,Dr),Nr.multiplyMatrices(n,Dr),Fr.matrixWorld=Nr,Fr.raycast(t,Br);for(let t=0,n=Br.length;t<n;t++){const n=Br[t];n.instanceId=s,n.object=this,e.push(n)}Br.length=0}}setColorAt(t,e){null===this.instanceColor&&(this.instanceColor=new te(new Float32Array(3*this.count),3)),e.toArray(this.instanceColor.array,3*t)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,16*t)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}Gr.prototype.isInstancedMesh=!0;class Vr extends Ut{constructor(t){super(),this.type="LineBasicMaterial",this.color=new Jt(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.morphTargets=t.morphTargets,this}}Vr.prototype.isLineBasicMaterial=!0;const Hr=new S,Ur=new S,kr=new et,Wr=new tt,jr=new q;class Yr extends Tt{constructor(t=new de,e=new Vr){super(),this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,r=e.count;t<r;t++)Hr.fromBufferAttribute(e,t-1),Ur.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=Hr.distanceTo(Ur);t.setAttribute("lineDistance",new ie(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(t,e){const n=this.geometry,r=this.matrixWorld,s=t.params.Line.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),jr.copy(n.boundingSphere),jr.applyMatrix4(r),jr.radius+=s,!1===t.ray.intersectsSphere(jr))return;kr.copy(r).invert(),Wr.copy(t.ray).applyMatrix4(kr);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,h=new S,c=new S,u=new S,d=new S,p=this.isLineSegments?2:1;if(n.isBufferGeometry){const r=n.index,s=n.attributes.position;if(null!==r)for(let n=Math.max(0,a.start),o=Math.min(r.count,a.start+a.count)-1;n<o;n+=p){const a=r.getX(n),o=r.getX(n+1);if(h.fromBufferAttribute(s,a),c.fromBufferAttribute(s,o),Wr.distanceSqToSegment(h,c,d,u)>l)continue;d.applyMatrix4(this.matrixWorld);const p=t.ray.origin.distanceTo(d);p<t.near||p>t.far||e.push({distance:p,point:u.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}else for(let n=Math.max(0,a.start),o=Math.min(s.count,a.start+a.count)-1;n<o;n+=p){if(h.fromBufferAttribute(s,n),c.fromBufferAttribute(s,n+1),Wr.distanceSqToSegment(h,c,d,u)>l)continue;d.applyMatrix4(this.matrixWorld);const r=t.ray.origin.distanceTo(d);r<t.near||r>t.far||e.push({distance:r,point:u.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}Yr.prototype.isLine=!0;const qr=new S,Xr=new S;class Qr extends Yr{constructor(t,e){super(t,e),this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,r=e.count;t<r;t+=2)qr.fromBufferAttribute(e,t),Xr.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+qr.distanceTo(Xr);t.setAttribute("lineDistance",new ie(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}Qr.prototype.isLineSegments=!0;(class Kr extends Yr{constructor(t,e){super(t,e),this.type="LineLoop"}}).prototype.isLineLoop=!0;class $r extends Ut{constructor(t){super(),this.type="PointsMaterial",this.color=new Jt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this}}$r.prototype.isPointsMaterial=!0;const Jr=new et,Zr=new tt,ts=new q,es=new S;class rs extends Tt{constructor(t=new de,e=new $r){super(),this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,r=this.matrixWorld,s=t.params.Points.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),ts.copy(n.boundingSphere),ts.applyMatrix4(r),ts.radius+=s,!1===t.ray.intersectsSphere(ts))return;Jr.copy(r).invert(),Zr.copy(t.ray).applyMatrix4(Jr);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o;if(n.isBufferGeometry){const s=n.index,o=n.attributes.position;if(null!==s)for(let n=Math.max(0,a.start),h=Math.min(s.count,a.start+a.count);n<h;n++){const a=s.getX(n);es.fromBufferAttribute(o,a),ns(es,a,l,r,t,e,this)}else for(let n=Math.max(0,a.start),h=Math.min(o.count,a.start+a.count);n<h;n++)es.fromBufferAttribute(o,n),ns(es,n,l,r,t,e,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function ns(t,e,n,r,s,a,o){const l=Zr.distanceSqToPoint(t);if(l<n){const n=new S;Zr.closestPointToPoint(t,n),n.applyMatrix4(r);const h=s.ray.origin.distanceTo(n);if(h<s.near||h>s.far)return;a.push({distance:h,distanceToRay:Math.sqrt(l),point:n,index:e,face:null,object:o})}}rs.prototype.isPoints=!0,class extends x{constructor(t,e,n,r,s,a,o,l,h){super(t,e,n,r,s,a,o,l,h),this.format=void 0!==o?o:1022,this.minFilter=void 0!==a?a:1006,this.magFilter=void 0!==s?s:1006,this.generateMipmaps=!1;const c=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback((function e(){c.needsUpdate=!0,t.requestVideoFrameCallback(e)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;!1=="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}.prototype.isVideoTexture=!0;(class as extends x{constructor(t,e,n,r,s,a,o,l,h,c,u,d){super(null,a,o,l,h,c,r,s,u,d),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}).prototype.isCompressedTexture=!0,class extends x{constructor(t,e,n,r,s,a,o,l,h){super(t,e,n,r,s,a,o,l,h),this.needsUpdate=!0}}.prototype.isCanvasTexture=!0,class extends x{constructor(t,e,n,r,s,a,o,l,h,c){if(1026!==(c=void 0!==c?c:1026)&&1027!==c)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&1026===c&&(n=1012),void 0===n&&1027===c&&(n=1020),super(null,r,s,a,o,l,c,n,h),this.image={width:t,height:e},this.magFilter=void 0!==o?o:1003,this.minFilter=void 0!==l?l:1003,this.flipY=!1,this.generateMipmaps=!1}}.prototype.isDepthTexture=!0;class os extends de{constructor(t=1,e=8,n=0,r=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:r},e=Math.max(3,e);const s=[],a=[],o=[],l=[],h=new S,c=new m;a.push(0,0,0),o.push(0,0,1),l.push(.5,.5);for(let u=0,d=3;u<=e;u++,d+=3){const s=n+u/e*r;h.x=t*Math.cos(s),h.y=t*Math.sin(s),a.push(h.x,h.y,h.z),o.push(0,0,1),c.x=(a[d]/t+1)/2,c.y=(a[d+1]/t+1)/2,l.push(c.x,c.y)}for(let u=1;u<=e;u++)s.push(u,u+1,0);this.setIndex(s),this.setAttribute("position",new ie(a,3)),this.setAttribute("normal",new ie(o,3)),this.setAttribute("uv",new ie(l,2))}}class ls extends de{constructor(t=1,e=1,n=1,r=8,s=1,a=!1,o=0,l=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:r,heightSegments:s,openEnded:a,thetaStart:o,thetaLength:l};const h=this;r=Math.floor(r),s=Math.floor(s);const c=[],u=[],d=[],p=[];let g=0;const y=[],_=n/2;let E=0;function T(n){const s=g,a=new m,y=new S;let T=0;const A=!0===n?t:e,C=!0===n?1:-1;for(let t=1;t<=r;t++)u.push(0,_*C,0),d.push(0,C,0),p.push(.5,.5),g++;const P=g;for(let t=0;t<=r;t++){const e=t/r*l+o,n=Math.cos(e),s=Math.sin(e);y.x=A*s,y.y=_*C,y.z=A*n,u.push(y.x,y.y,y.z),d.push(0,C,0),a.x=.5*n+.5,a.y=.5*s*C+.5,p.push(a.x,a.y),g++}for(let t=0;t<r;t++){const e=s+t,r=P+t;!0===n?c.push(r,r+1,e):c.push(r+1,r,e),T+=3}h.addGroup(E,T,!0===n?1:2),E+=T}!function(){const a=new S,T=new S;let A=0;const C=(e-t)/n;for(let h=0;h<=s;h++){const c=[],E=h/s,A=E*(e-t)+t;for(let t=0;t<=r;t++){const e=t/r,s=e*l+o,h=Math.sin(s),y=Math.cos(s);T.x=A*h,T.y=-E*n+_,T.z=A*y,u.push(T.x,T.y,T.z),a.set(h,C,y).normalize(),d.push(a.x,a.y,a.z),p.push(e,1-E),c.push(g++)}y.push(c)}for(let t=0;t<r;t++)for(let e=0;e<s;e++){const n=y[e][t],r=y[e+1][t],s=y[e+1][t+1],a=y[e][t+1];c.push(n,r,a),c.push(r,s,a),A+=6}h.addGroup(E,A,0),E+=A}(),!1===a&&(t>0&&T(!0),e>0&&T(!1)),this.setIndex(c),this.setAttribute("position",new ie(u,3)),this.setAttribute("normal",new ie(d,3)),this.setAttribute("uv",new ie(p,2))}}function is(t,e,n,r,s){let a,o;if(s===function(t,e,n,r){let s=0;for(let a=e,o=n-r;a<n;a+=r)s+=(t[o]-t[a])*(t[a+1]+t[o+1]),o=a;return s}(t,e,n,r)>0)for(a=e;a<n;a+=r)o=As(a,t[a],t[a+1],o);else for(a=n-r;a>=e;a-=r)o=As(a,t[a],t[a+1],o);return o&&ws(o,o.next)&&(Cs(o),o=o.next),o}function ss(t,e){if(!t)return t;e||(e=t);let n,r=t;do{if(n=!1,r.steiner||!ws(r,r.next)&&0!==bs(r.prev,r,r.next))r=r.next;else{if(Cs(r),r=e=r.prev,r===r.next)break;n=!0}}while(n||r!==e);return e}function hs(t,e,n,r,s,a,o){if(!t)return;!o&&a&&function(t,e,n,r){let s=t;do{null===s.z&&(s.z=vs(s.x,s.y,e,n,r)),s.prevZ=s.prev,s.nextZ=s.next,s=s.next}while(s!==t);s.prevZ.nextZ=null,s.prevZ=null,function(t){let e,n,r,s,a,o,l,h,c=1;do{for(n=t,t=null,a=null,o=0;n;){for(o++,r=n,l=0,e=0;e<c&&(l++,r=r.nextZ,r);e++);for(h=c;l>0||h>0&&r;)0!==l&&(0===h||!r||n.z<=r.z)?(s=n,n=n.nextZ,l--):(s=r,r=r.nextZ,h--),a?a.nextZ=s:t=s,s.prevZ=a,a=s;n=r}a.nextZ=null,c*=2}while(o>1)}(s)}(t,r,s,a);let l,h,c=t;for(;t.prev!==t.next;)if(l=t.prev,h=t.next,a?us(t,r,s,a):cs(t))e.push(l.i/n),e.push(t.i/n),e.push(h.i/n),Cs(t),t=h.next,c=h.next;else if((t=h)===c){o?1===o?hs(t=ds(ss(t),e,n),e,n,r,s,a,2):2===o&&ps(t,e,n,r,s,a):hs(ss(t),e,n,r,s,a,1);break}}function cs(t){const e=t.prev,n=t,r=t.next;if(bs(e,n,r)>=0)return!1;let s=t.next.next;for(;s!==t.prev;){if(xs(e.x,e.y,n.x,n.y,r.x,r.y,s.x,s.y)&&bs(s.prev,s,s.next)>=0)return!1;s=s.next}return!0}function us(t,e,n,r){const s=t.prev,a=t,o=t.next;if(bs(s,a,o)>=0)return!1;const l=s.x<a.x?s.x<o.x?s.x:o.x:a.x<o.x?a.x:o.x,h=s.y<a.y?s.y<o.y?s.y:o.y:a.y<o.y?a.y:o.y,c=s.x>a.x?s.x>o.x?s.x:o.x:a.x>o.x?a.x:o.x,u=s.y>a.y?s.y>o.y?s.y:o.y:a.y>o.y?a.y:o.y,d=vs(l,h,e,n,r),p=vs(c,u,e,n,r);let g=t.prevZ,y=t.nextZ;for(;g&&g.z>=d&&y&&y.z<=p;){if(g!==t.prev&&g!==t.next&&xs(s.x,s.y,a.x,a.y,o.x,o.y,g.x,g.y)&&bs(g.prev,g,g.next)>=0)return!1;if(g=g.prevZ,y!==t.prev&&y!==t.next&&xs(s.x,s.y,a.x,a.y,o.x,o.y,y.x,y.y)&&bs(y.prev,y,y.next)>=0)return!1;y=y.nextZ}for(;g&&g.z>=d;){if(g!==t.prev&&g!==t.next&&xs(s.x,s.y,a.x,a.y,o.x,o.y,g.x,g.y)&&bs(g.prev,g,g.next)>=0)return!1;g=g.prevZ}for(;y&&y.z<=p;){if(y!==t.prev&&y!==t.next&&xs(s.x,s.y,a.x,a.y,o.x,o.y,y.x,y.y)&&bs(y.prev,y,y.next)>=0)return!1;y=y.nextZ}return!0}function ds(t,e,n){let r=t;do{const s=r.prev,a=r.next.next;!ws(s,a)&&Ms(s,r,r.next,a)&&Ts(s,a)&&Ts(a,s)&&(e.push(s.i/n),e.push(r.i/n),e.push(a.i/n),Cs(r),Cs(r.next),r=t=a),r=r.next}while(r!==t);return ss(r)}function ps(t,e,n,r,s,a){let o=t;do{let t=o.next.next;for(;t!==o.prev;){if(o.i!==t.i&&_s(o,t)){let l=Ls(o,t);return o=ss(o,o.next),l=ss(l,l.next),hs(o,e,n,r,s,a),void hs(l,e,n,r,s,a)}t=t.next}o=o.next}while(o!==t)}function ms(t,e){return t.x-e.x}function fs(t,e){if(e=function(t,e){let n=e;const r=t.x,s=t.y;let a,o=-1/0;do{if(s<=n.y&&s>=n.next.y&&n.next.y!==n.y){const t=n.x+(s-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(t<=r&&t>o){if(o=t,t===r){if(s===n.y)return n;if(s===n.next.y)return n.next}a=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!a)return null;if(r===o)return a;const l=a,h=a.x,c=a.y;let u,d=1/0;n=a;do{r>=n.x&&n.x>=h&&r!==n.x&&xs(s<c?r:o,s,h,c,s<c?o:r,s,n.x,n.y)&&(u=Math.abs(s-n.y)/(r-n.x),Ts(n,t)&&(u<d||u===d&&(n.x>a.x||n.x===a.x&&gs(a,n)))&&(a=n,d=u)),n=n.next}while(n!==l);return a}(t,e)){const n=Ls(e,t);ss(e,e.next),ss(n,n.next)}}function gs(t,e){return bs(t.prev,t,e.prev)<0&&bs(e.next,t,t.next)<0}function vs(t,e,n,r,s){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*s)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-r)*s)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function ys(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function xs(t,e,n,r,s,a,o,l){return(s-o)*(e-l)-(t-o)*(a-l)>=0&&(t-o)*(r-l)-(n-o)*(e-l)>=0&&(n-o)*(a-l)-(s-o)*(r-l)>=0}function _s(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&Ms(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(Ts(t,e)&&Ts(e,t)&&function(t,e){let n=t,r=!1;const s=(t.x+e.x)/2,a=(t.y+e.y)/2;do{n.y>a!=n.next.y>a&&n.next.y!==n.y&&s<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==t);return r}(t,e)&&(bs(t.prev,t,e.prev)||bs(t,e.prev,e))||ws(t,e)&&bs(t.prev,t,t.next)>0&&bs(e.prev,e,e.next)>0)}function bs(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function ws(t,e){return t.x===e.x&&t.y===e.y}function Ms(t,e,n,r){const s=Es(bs(t,e,n)),a=Es(bs(t,e,r)),o=Es(bs(n,r,t)),l=Es(bs(n,r,e));return s!==a&&o!==l||!(0!==s||!Ss(t,n,e))||!(0!==a||!Ss(t,r,e))||!(0!==o||!Ss(n,t,r))||!(0!==l||!Ss(n,e,r))}function Ss(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function Es(t){return t>0?1:t<0?-1:0}function Ts(t,e){return bs(t.prev,t,t.next)<0?bs(t,e,t.next)>=0&&bs(t,t.prev,e)>=0:bs(t,e,t.prev)<0||bs(t,t.next,e)<0}function Ls(t,e){const n=new Ps(t.i,t.x,t.y),r=new Ps(e.i,e.x,e.y),s=t.next,a=e.prev;return t.next=e,e.prev=t,n.next=s,s.prev=n,r.next=n,n.prev=r,a.next=r,r.prev=a,r}function As(t,e,n,r){const s=new Ps(t,e,n);return r?(s.next=r.next,s.prev=r,r.next.prev=s,r.next=s):(s.prev=s,s.next=s),s}function Cs(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Ps(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class Ns{static area(t){const e=t.length;let n=0;for(let r=e-1,s=0;s<e;r=s++)n+=t[r].x*t[s].y-t[s].x*t[r].y;return.5*n}static isClockWise(t){return Ns.area(t)<0}static triangulateShape(t,e){const n=[],r=[],s=[];Rs(t),Is(n,t);let a=t.length;e.forEach(Rs);for(let l=0;l<e.length;l++)r.push(a),a+=e[l].length,Is(n,e[l]);const o=function(t,e,n){n=n||2;const r=e&&e.length,s=r?e[0]*n:t.length;let a=is(t,0,s,n,!0);const o=[];if(!a||a.next===a.prev)return o;let l,h,c,u,d,p,g;if(r&&(a=function(t,e,n,r){const s=[];let a,o,l,h,c;for(a=0,o=e.length;a<o;a++)l=e[a]*r,h=a<o-1?e[a+1]*r:t.length,c=is(t,l,h,r,!1),c===c.next&&(c.steiner=!0),s.push(ys(c));for(s.sort(ms),a=0;a<s.length;a++)fs(s[a],n),n=ss(n,n.next);return n}(t,e,a,n)),t.length>80*n){l=c=t[0],h=u=t[1];for(let e=n;e<s;e+=n)d=t[e],p=t[e+1],d<l&&(l=d),p<h&&(h=p),d>c&&(c=d),p>u&&(u=p);g=Math.max(c-l,u-h),g=0!==g?1/g:0}return hs(a,o,n,l,h,g),o}(n,r);for(let l=0;l<o.length;l+=3)s.push(o.slice(l,l+3));return s}}function Rs(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function Is(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class Fs extends de{constructor(t,e){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,r=[],s=[];for(let o=0,l=t.length;o<l;o++)a(t[o]);function a(t){const a=[],o=void 0!==e.curveSegments?e.curveSegments:12,l=void 0!==e.steps?e.steps:1;let h=void 0!==e.depth?e.depth:100,c=void 0===e.bevelEnabled||e.bevelEnabled,u=void 0!==e.bevelThickness?e.bevelThickness:6,d=void 0!==e.bevelSize?e.bevelSize:u-2,p=void 0!==e.bevelOffset?e.bevelOffset:0,g=void 0!==e.bevelSegments?e.bevelSegments:3;const y=e.extrudePath,_=void 0!==e.UVGenerator?e.UVGenerator:Ds;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),h=e.amount);let E,T,A,C,P,R=!1;y&&(E=y.getSpacedPoints(l),R=!0,c=!1,T=y.computeFrenetFrames(l,!1),A=new S,C=new S,P=new S),c||(g=0,u=0,d=0,p=0);const I=t.extractPoints(o);let D=I.shape;const N=I.holes;if(!Ns.isClockWise(D)){D=D.reverse();for(let t=0,e=N.length;t<e;t++){const e=N[t];Ns.isClockWise(e)&&(N[t]=e.reverse())}}const z=Ns.triangulateShape(D,N),O=D;for(let e=0,n=N.length;e<n;e++){const t=N[e];D=D.concat(t)}function B(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(n).add(t)}const F=D.length,H=z.length;function U(t,e,n){let r,s,a;const o=t.x-e.x,l=t.y-e.y,h=n.x-t.x,c=n.y-t.y,u=o*o+l*l,d=o*c-l*h;if(Math.abs(d)>Number.EPSILON){const d=Math.sqrt(u),p=Math.sqrt(h*h+c*c),g=e.x-l/d,y=e.y+o/d,_=((n.x-c/p-g)*c-(n.y+h/p-y)*h)/(o*c-l*h);r=g+o*_-t.x,s=y+l*_-t.y;const E=r*r+s*s;if(E<=2)return new m(r,s);a=Math.sqrt(E/2)}else{let t=!1;o>Number.EPSILON?h>Number.EPSILON&&(t=!0):o<-Number.EPSILON?h<-Number.EPSILON&&(t=!0):Math.sign(l)===Math.sign(c)&&(t=!0),t?(r=-l,s=o,a=Math.sqrt(u)):(r=o,s=l,a=Math.sqrt(u/2))}return new m(r/a,s/a)}const G=[];for(let e=0,n=O.length,r=n-1,s=e+1;e<n;e++,r++,s++)r===n&&(r=0),s===n&&(s=0),G[e]=U(O[e],O[r],O[s]);const V=[];let k,W=G.concat();for(let e=0,n=N.length;e<n;e++){const t=N[e];k=[];for(let e=0,n=t.length,r=n-1,s=e+1;e<n;e++,r++,s++)r===n&&(r=0),s===n&&(s=0),k[e]=U(t[e],t[r],t[s]);V.push(k),W=W.concat(k)}for(let e=0;e<g;e++){const t=e/g,n=u*Math.cos(t*Math.PI/2),r=d*Math.sin(t*Math.PI/2)+p;for(let e=0,s=O.length;e<s;e++){const t=B(O[e],G[e],r);Y(t.x,t.y,-n)}for(let e=0,s=N.length;e<s;e++){const t=N[e];k=V[e];for(let e=0,s=t.length;e<s;e++){const s=B(t[e],k[e],r);Y(s.x,s.y,-n)}}}const j=d+p;for(let e=0;e<F;e++){const t=c?B(D[e],W[e],j):D[e];R?(C.copy(T.normals[0]).multiplyScalar(t.x),A.copy(T.binormals[0]).multiplyScalar(t.y),P.copy(E[0]).add(C).add(A),Y(P.x,P.y,P.z)):Y(t.x,t.y,0)}for(let e=1;e<=l;e++)for(let t=0;t<F;t++){const n=c?B(D[t],W[t],j):D[t];R?(C.copy(T.normals[e]).multiplyScalar(n.x),A.copy(T.binormals[e]).multiplyScalar(n.y),P.copy(E[e]).add(C).add(A),Y(P.x,P.y,P.z)):Y(n.x,n.y,h/l*e)}for(let e=g-1;e>=0;e--){const t=e/g,n=u*Math.cos(t*Math.PI/2),r=d*Math.sin(t*Math.PI/2)+p;for(let e=0,s=O.length;e<s;e++){const t=B(O[e],G[e],r);Y(t.x,t.y,h+n)}for(let e=0,s=N.length;e<s;e++){const t=N[e];k=V[e];for(let e=0,s=t.length;e<s;e++){const s=B(t[e],k[e],r);R?Y(s.x,s.y+E[l-1].y,E[l-1].x+n):Y(s.x,s.y,h+n)}}}function X(t,e){let n=t.length;for(;--n>=0;){const r=n;let s=n-1;s<0&&(s=t.length-1);for(let t=0,n=l+2*g;t<n;t++){const n=F*t,a=F*(t+1);Z(e+r+n,e+s+n,e+s+a,e+r+a)}}}function Y(t,e,n){a.push(t),a.push(e),a.push(n)}function J(t,e,s){Q(t),Q(e),Q(s);const a=r.length/3,o=_.generateTopUV(n,r,a-3,a-2,a-1);K(o[0]),K(o[1]),K(o[2])}function Z(t,e,s,a){Q(t),Q(e),Q(a),Q(e),Q(s),Q(a);const o=r.length/3,l=_.generateSideWallUV(n,r,o-6,o-3,o-2,o-1);K(l[0]),K(l[1]),K(l[3]),K(l[1]),K(l[2]),K(l[3])}function Q(t){r.push(a[3*t+0]),r.push(a[3*t+1]),r.push(a[3*t+2])}function K(t){s.push(t.x),s.push(t.y)}!function(){const t=r.length/3;if(c){let t=0,e=F*t;for(let n=0;n<H;n++){const t=z[n];J(t[2]+e,t[1]+e,t[0]+e)}t=l+2*g,e=F*t;for(let n=0;n<H;n++){const t=z[n];J(t[0]+e,t[1]+e,t[2]+e)}}else{for(let t=0;t<H;t++){const e=z[t];J(e[2],e[1],e[0])}for(let t=0;t<H;t++){const e=z[t];J(e[0]+F*l,e[1]+F*l,e[2]+F*l)}}n.addGroup(t,r.length/3-t,0)}(),function(){const t=r.length/3;let e=0;X(O,e),e+=O.length;for(let n=0,r=N.length;n<r;n++){const t=N[n];X(t,e),e+=t.length}n.addGroup(t,r.length/3-t,1)}()}this.setAttribute("position",new ie(r,3)),this.setAttribute("uv",new ie(s,2)),this.computeVertexNormals()}toJSON(){const t=de.prototype.toJSON.call(this);return function(t,e,n){if(n.shapes=[],Array.isArray(t))for(let r=0,s=t.length;r<s;r++){const e=t[r];n.shapes.push(e.uuid)}else n.shapes.push(t.uuid);return void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON()),n}(this.parameters.shapes,this.parameters.options,t)}}const Ds={generateTopUV:function(t,e,n,r,s){const a=e[3*n],o=e[3*n+1],l=e[3*r],h=e[3*r+1],c=e[3*s],u=e[3*s+1];return[new m(a,o),new m(l,h),new m(c,u)]},generateSideWallUV:function(t,e,n,r,s,a){const o=e[3*n],l=e[3*n+1],h=e[3*n+2],c=e[3*r],u=e[3*r+1],d=e[3*r+2],p=e[3*s],g=e[3*s+1],y=e[3*s+2],_=e[3*a],E=e[3*a+1],T=e[3*a+2];return Math.abs(l-u)<.01?[new m(o,1-h),new m(c,1-d),new m(p,1-y),new m(_,1-T)]:[new m(l,1-h),new m(u,1-d),new m(g,1-y),new m(E,1-T)]}};class Hs extends de{constructor(t=.5,e=1,n=8,r=1,s=0,a=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:r,thetaStart:s,thetaLength:a},n=Math.max(3,n);const o=[],l=[],h=[],c=[];let u=t;const d=(e-t)/(r=Math.max(1,r)),p=new S,g=new m;for(let y=0;y<=r;y++){for(let t=0;t<=n;t++){const r=s+t/n*a;p.x=u*Math.cos(r),p.y=u*Math.sin(r),l.push(p.x,p.y,p.z),h.push(0,0,1),g.x=(p.x/e+1)/2,g.y=(p.y/e+1)/2,c.push(g.x,g.y)}u+=d}for(let y=0;y<r;y++){const t=y*(n+1);for(let e=0;e<n;e++){const r=e+t,s=r,a=r+n+1,l=r+n+2,h=r+1;o.push(s,a,h),o.push(a,l,h)}}this.setIndex(o),this.setAttribute("position",new ie(l,3)),this.setAttribute("normal",new ie(h,3)),this.setAttribute("uv",new ie(c,2))}}class Us extends de{constructor(t,e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],r=[],s=[],a=[];let o=0,l=0;if(!1===Array.isArray(t))h(t);else for(let c=0;c<t.length;c++)h(t[c]),this.addGroup(o,l,c),o+=l,l=0;function h(t){const o=r.length/3,h=t.extractPoints(e);let c=h.shape;const u=h.holes;!1===Ns.isClockWise(c)&&(c=c.reverse());for(let e=0,n=u.length;e<n;e++){const t=u[e];!0===Ns.isClockWise(t)&&(u[e]=t.reverse())}const d=Ns.triangulateShape(c,u);for(let e=0,n=u.length;e<n;e++){const t=u[e];c=c.concat(t)}for(let e=0,n=c.length;e<n;e++){const t=c[e];r.push(t.x,t.y,0),s.push(0,0,1),a.push(t.x,t.y)}for(let e=0,r=d.length;e<r;e++){const t=d[e],r=t[0]+o,s=t[1]+o,a=t[2]+o;n.push(r,s,a),l+=3}}this.setIndex(n),this.setAttribute("position",new ie(r,3)),this.setAttribute("normal",new ie(s,3)),this.setAttribute("uv",new ie(a,2))}toJSON(){const t=de.prototype.toJSON.call(this);return function(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,r=t.length;n<r;n++){const r=t[n];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}}class Gs extends de{constructor(t=1,e=8,n=6,r=0,s=2*Math.PI,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:r,phiLength:s,thetaStart:a,thetaLength:o},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const l=Math.min(a+o,Math.PI);let h=0;const c=[],u=new S,d=new S,p=[],g=[],y=[],_=[];for(let E=0;E<=n;E++){const p=[],T=E/n;let A=0;0==E&&0==a?A=.5/e:E==n&&l==Math.PI&&(A=-.5/e);for(let n=0;n<=e;n++){const l=n/e;u.x=-t*Math.cos(r+l*s)*Math.sin(a+T*o),u.y=t*Math.cos(a+T*o),u.z=t*Math.sin(r+l*s)*Math.sin(a+T*o),g.push(u.x,u.y,u.z),d.copy(u).normalize(),y.push(d.x,d.y,d.z),_.push(l+A,1-T),p.push(h++)}c.push(p)}for(let E=0;E<n;E++)for(let t=0;t<e;t++){const e=c[E][t+1],r=c[E][t],s=c[E+1][t],o=c[E+1][t+1];(0!==E||a>0)&&p.push(e,r,o),(E!==n-1||l<Math.PI)&&p.push(r,s,o)}this.setIndex(p),this.setAttribute("position",new ie(g,3)),this.setAttribute("normal",new ie(y,3)),this.setAttribute("uv",new ie(_,2))}}class Vs extends de{constructor(t,e=64,n=1,r=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:r,closed:s};const a=t.computeFrenetFrames(e,s);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const o=new S,l=new S,h=new m;let c=new S;const u=[],d=[],p=[],g=[];function y(s){c=t.getPointAt(s/e,c);const h=a.normals[s],p=a.binormals[s];for(let t=0;t<=r;t++){const e=t/r*Math.PI*2,s=Math.sin(e),a=-Math.cos(e);l.x=a*h.x+s*p.x,l.y=a*h.y+s*p.y,l.z=a*h.z+s*p.z,l.normalize(),d.push(l.x,l.y,l.z),o.x=c.x+n*l.x,o.y=c.y+n*l.y,o.z=c.z+n*l.z,u.push(o.x,o.y,o.z)}}!function(){for(let t=0;t<e;t++)y(t);y(!1===s?e:0),function(){for(let t=0;t<=e;t++)for(let n=0;n<=r;n++)h.x=t/e,h.y=n/r,p.push(h.x,h.y)}(),function(){for(let t=1;t<=e;t++)for(let e=1;e<=r;e++){const n=(r+1)*(t-1)+(e-1),s=(r+1)*t+(e-1),a=(r+1)*t+e,o=(r+1)*(t-1)+e;g.push(n,s,o),g.push(s,a,o)}}()}(),this.setIndex(g),this.setAttribute("position",new ie(u,3)),this.setAttribute("normal",new ie(d,3)),this.setAttribute("uv",new ie(p,2))}toJSON(){const t=de.prototype.toJSON.call(this);return t.path=this.parameters.path.toJSON(),t}}(class ks extends Ut{constructor(t){super(),this.type="ShadowMaterial",this.color=new Jt(0),this.transparent=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this}}).prototype.isShadowMaterial=!0;(class Ws extends Oe{constructor(t){super(t),this.type="RawShaderMaterial"}}).prototype.isRawShaderMaterial=!0;class js extends Ut{constructor(t){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Jt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Jt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new m(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.vertexTangents=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this.vertexTangents=t.vertexTangents,this}}js.prototype.isMeshStandardMaterial=!0;(class qs extends js{constructor(t){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new m(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(t){this.reflectivity=l(2.5*(t-1)/(t+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.reflectivity=t.reflectivity,t.sheen?this.sheen=(this.sheen||new Jt).copy(t.sheen):this.sheen=null,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this}}).prototype.isMeshPhysicalMaterial=!0;class Xs extends Ut{constructor(t){super(),this.type="MeshPhongMaterial",this.color=new Jt(16777215),this.specular=new Jt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Jt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new m(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}Xs.prototype.isMeshPhongMaterial=!0;(class Ys extends Ut{constructor(t){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Jt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Jt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new m(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}}).prototype.isMeshToonMaterial=!0;(class Zs extends Ut{constructor(t){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new m(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}).prototype.isMeshNormalMaterial=!0;(class Js extends Ut{constructor(t){super(),this.type="MeshLambertMaterial",this.color=new Jt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Jt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this}}).prototype.isMeshLambertMaterial=!0;(class Qs extends Ut{constructor(t){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Jt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new m(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.flatShading=t.flatShading,this}}).prototype.isMeshMatcapMaterial=!0;(class Ks extends Vr{constructor(t){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}).prototype.isLineDashedMaterial=!0;const zs={arraySlice:function(t,e,n){return zs.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){const e=t.length,n=new Array(e);for(let r=0;r!==e;++r)n[r]=r;return n.sort((function(e,n){return t[e]-t[n]})),n},sortedArray:function(t,e,n){const r=t.length,s=new t.constructor(r);for(let a=0,o=0;o!==r;++a){const r=n[a]*e;for(let n=0;n!==e;++n)s[o++]=t[r+n]}return s},flattenJSON:function(t,e,n,r){let s=1,a=t[0];for(;void 0!==a&&void 0===a[r];)a=t[s++];if(void 0===a)return;let o=a[r];if(void 0!==o)if(Array.isArray(o))do{o=a[r],void 0!==o&&(e.push(a.time),n.push.apply(n,o)),a=t[s++]}while(void 0!==a);else if(void 0!==o.toArray)do{o=a[r],void 0!==o&&(e.push(a.time),o.toArray(n,n.length)),a=t[s++]}while(void 0!==a);else do{o=a[r],void 0!==o&&(e.push(a.time),n.push(o)),a=t[s++]}while(void 0!==a)},subclip:function(t,e,n,r,s=30){const a=t.clone();a.name=e;const o=[];for(let h=0;h<a.tracks.length;++h){const t=a.tracks[h],e=t.getValueSize(),l=[],c=[];for(let a=0;a<t.times.length;++a){const o=t.times[a]*s;if(!(o<n||o>=r)){l.push(t.times[a]);for(let n=0;n<e;++n)c.push(t.values[a*e+n])}}0!==l.length&&(t.times=zs.convertArray(l,t.times.constructor),t.values=zs.convertArray(c,t.values.constructor),o.push(t))}a.tracks=o;let l=1/0;for(let h=0;h<a.tracks.length;++h)l>a.tracks[h].times[0]&&(l=a.tracks[h].times[0]);for(let h=0;h<a.tracks.length;++h)a.tracks[h].shift(-1*l);return a.resetDuration(),a},makeClipAdditive:function(t,e=0,n=t,r=30){r<=0&&(r=30);const s=n.tracks.length,a=e/r;for(let o=0;o<s;++o){const e=n.tracks[o],r=e.ValueTypeName;if("bool"===r||"string"===r)continue;const s=t.tracks.find((function(t){return t.name===e.name&&t.ValueTypeName===r}));if(void 0===s)continue;let l=0;const h=e.getValueSize();e.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(l=h/3);let c=0;const u=s.getValueSize();s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=u/3);const d=e.times.length-1;let p;if(a<=e.times[0]){const t=l,n=h-l;p=zs.arraySlice(e.values,t,n)}else if(a>=e.times[d]){const t=d*h+l,n=t+h-l;p=zs.arraySlice(e.values,t,n)}else{const t=e.createInterpolant(),n=l,r=h-l;t.evaluate(a),p=zs.arraySlice(t.resultBuffer,n,r)}"quaternion"===r&&(new M).fromArray(p).normalize().conjugate().toArray(p);const g=s.times.length;for(let t=0;t<g;++t){const e=t*u+c;if("quaternion"===r)M.multiplyQuaternionsFlat(s.values,e,p,0,s.values,e);else{const t=u-2*c;for(let n=0;n<t;++n)s.values[e+n]-=p[n]}}}return t.blendMode=2501,t}};class ta{constructor(t,e,n,r){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,r=e[n],s=e[n-1];t:{e:{let a;n:{i:if(!(t<r)){for(let a=n+2;;){if(void 0===r){if(t<s)break i;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,s)}if(n===a)break;if(s=r,r=e[++n],t<r)break e}a=e.length;break n}if(t>=s)break t;{const o=e[1];t<o&&(n=2,s=o);for(let a=n-2;;){if(void 0===s)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(n===a)break;if(r=s,s=e[--n-1],t>=s)break e}a=n,n=0}}for(;n<a;){const r=n+a>>>1;t<e[r]?a=r:n=r+1}if(r=e[n],s=e[n-1],void 0===s)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(void 0===r)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,s,t)}this._cachedIndex=n,this.intervalChanged_(n,s,r)}return this.interpolate_(n,s,t,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,r=this.valueSize,s=t*r;for(let a=0;a!==r;++a)e[a]=n[s+a];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}ta.prototype.beforeStart_=ta.prototype.copySampleValue_,ta.prototype.afterEnd_=ta.prototype.copySampleValue_;class ea extends ta{constructor(t,e,n,r){super(t,e,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(t,e,n){const r=this.parameterPositions;let s=t-2,a=t+1,o=r[s],l=r[a];if(void 0===o)switch(this.getSettings_().endingStart){case 2401:s=t,o=2*e-n;break;case 2402:s=r.length-2,o=e+r[s]-r[s+1];break;default:s=t,o=n}if(void 0===l)switch(this.getSettings_().endingEnd){case 2401:a=t,l=2*n-e;break;case 2402:a=1,l=n+r[1]-r[0];break;default:a=t-1,l=e}const h=.5*(n-e),c=this.valueSize;this._weightPrev=h/(e-o),this._weightNext=h/(l-n),this._offsetPrev=s*c,this._offsetNext=a*c}interpolate_(t,e,n,r){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=t*o,h=l-o,c=this._offsetPrev,u=this._offsetNext,d=this._weightPrev,p=this._weightNext,g=(n-e)/(r-e),y=g*g,_=y*g,E=-d*_+2*d*y-d*g,T=(1+d)*_+(-1.5-2*d)*y+(-.5+d)*g+1,A=(-1-p)*_+(1.5+p)*y+.5*g,C=p*_-p*y;for(let P=0;P!==o;++P)s[P]=E*a[c+P]+T*a[h+P]+A*a[l+P]+C*a[u+P];return s}}class na extends ta{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t,e,n,r){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=t*o,h=l-o,c=(n-e)/(r-e),u=1-c;for(let d=0;d!==o;++d)s[d]=a[h+d]*u+a[l+d]*c;return s}}class ia extends ta{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t){return this.copySampleValue_(t-1)}}class ra{constructor(t,e,n,r){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=zs.convertArray(e,this.TimeBufferType),this.values=zs.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:zs.convertArray(t.times,Array),values:zs.convertArray(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new ia(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new na(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new ea(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case 2300:e=this.InterpolantFactoryMethodDiscrete;break;case 2301:e=this.InterpolantFactoryMethodLinear;break;case 2302:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let n=0,r=e.length;n!==r;++n)e[n]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let n=0,r=e.length;n!==r;++n)e[n]*=t}return this}trim(t,e){const n=this.times,r=n.length;let s=0,a=r-1;for(;s!==r&&n[s]<t;)++s;for(;-1!==a&&n[a]>e;)--a;if(++a,0!==s||a!==r){s>=a&&(a=Math.max(a,1),s=a-1);const t=this.getValueSize();this.times=zs.arraySlice(n,s,a),this.values=zs.arraySlice(this.values,s*t,a*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,r=this.values,s=n.length;0===s&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let a=null;for(let o=0;o!==s;o++){const e=n[o];if("number"==typeof e&&isNaN(e)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,e),t=!1;break}if(null!==a&&a>e){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,e,a),t=!1;break}a=e}if(void 0!==r&&zs.isTypedArray(r))for(let o=0,l=r.length;o!==l;++o){const e=r[o];if(isNaN(e)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,e),t=!1;break}}return t}optimize(){const t=zs.arraySlice(this.times),e=zs.arraySlice(this.values),n=this.getValueSize(),r=2302===this.getInterpolation(),s=t.length-1;let a=1;for(let o=1;o<s;++o){let s=!1;const l=t[o];if(l!==t[o+1]&&(1!==o||l!==t[0]))if(r)s=!0;else{const t=o*n,r=t-n,a=t+n;for(let o=0;o!==n;++o){const n=e[t+o];if(n!==e[r+o]||n!==e[a+o]){s=!0;break}}}if(s){if(o!==a){t[a]=t[o];const r=o*n,s=a*n;for(let t=0;t!==n;++t)e[s+t]=e[r+t]}++a}}if(s>0){t[a]=t[s];for(let t=s*n,r=a*n,o=0;o!==n;++o)e[r+o]=e[t+o];++a}return a!==t.length?(this.times=zs.arraySlice(t,0,a),this.values=zs.arraySlice(e,0,a*n)):(this.times=t,this.values=e),this}clone(){const t=zs.arraySlice(this.times,0),e=zs.arraySlice(this.values,0),n=new this.constructor(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}}ra.prototype.TimeBufferType=Float32Array,ra.prototype.ValueBufferType=Float32Array,ra.prototype.DefaultInterpolation=2301;class sa extends ra{}sa.prototype.ValueTypeName="bool",sa.prototype.ValueBufferType=Array,sa.prototype.DefaultInterpolation=2300,sa.prototype.InterpolantFactoryMethodLinear=void 0,sa.prototype.InterpolantFactoryMethodSmooth=void 0;class aa extends ra{}aa.prototype.ValueTypeName="color";class oa extends ra{}oa.prototype.ValueTypeName="number";class la extends ta{constructor(t,e,n,r){super(t,e,n,r)}interpolate_(t,e,n,r){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=(n-e)/(r-e);let h=t*o;for(let c=h+o;h!==c;h+=4)M.slerpFlat(s,0,a,h-o,a,h,l);return s}}class ha extends ra{InterpolantFactoryMethodLinear(t){return new la(this.times,this.values,this.getValueSize(),t)}}ha.prototype.ValueTypeName="quaternion",ha.prototype.DefaultInterpolation=2301,ha.prototype.InterpolantFactoryMethodSmooth=void 0;class ca extends ra{}ca.prototype.ValueTypeName="string",ca.prototype.ValueBufferType=Array,ca.prototype.DefaultInterpolation=2300,ca.prototype.InterpolantFactoryMethodLinear=void 0,ca.prototype.InterpolantFactoryMethodSmooth=void 0;class ua extends ra{}ua.prototype.ValueTypeName="vector";class da{constructor(t,e=-1,n,r=2500){this.name=t,this.tracks=n,this.duration=e,this.blendMode=r,this.uuid=o(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,r=1/(t.fps||1);for(let a=0,o=n.length;a!==o;++a)e.push(Os(n[a]).scale(r));const s=new this(t.name,t.duration,e,t.blendMode);return s.uuid=t.uuid,s}static toJSON(t){const e=[],n=t.tracks,r={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let s=0,a=n.length;s!==a;++s)e.push(ra.toJSON(n[s]));return r}static CreateFromMorphTargetSequence(t,e,n,r){const s=e.length,a=[];for(let o=0;o<s;o++){let t=[],l=[];t.push((o+s-1)%s,o,(o+1)%s),l.push(0,1,0);const h=zs.getKeyframeOrder(t);t=zs.sortedArray(t,1,h),l=zs.sortedArray(l,1,h),r||0!==t[0]||(t.push(s),l.push(l[0])),a.push(new oa(".morphTargetInfluences["+e[o].name+"]",t,l).scale(1/n))}return new this(t,-1,a)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let r=0;r<n.length;r++)if(n[r].name===e)return n[r];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const r={},s=/^([\w-]*?)([\d]+)$/;for(let o=0,l=t.length;o<l;o++){const e=t[o],n=e.name.match(s);if(n&&n.length>1){const t=n[1];let s=r[t];s||(r[t]=s=[]),s.push(e)}}const a=[];for(const o in r)a.push(this.CreateFromMorphTargetSequence(o,r[o],e,n));return a}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,r,s){if(0!==n.length){const a=[],o=[];zs.flattenJSON(n,a,o,r),0!==a.length&&s.push(new t(e,a,o))}},r=[],s=t.name||"default",a=t.fps||30,o=t.blendMode;let l=t.length||-1;const h=t.hierarchy||[];for(let c=0;c<h.length;c++){const t=h[c].keys;if(t&&0!==t.length)if(t[0].morphTargets){const e={};let n;for(n=0;n<t.length;n++)if(t[n].morphTargets)for(let r=0;r<t[n].morphTargets.length;r++)e[t[n].morphTargets[r]]=-1;for(const s in e){const e=[],a=[];for(let r=0;r!==t[n].morphTargets.length;++r){const r=t[n];e.push(r.time),a.push(r.morphTarget===s?1:0)}r.push(new oa(".morphTargetInfluence["+s+"]",e,a))}l=e.length*(a||1)}else{const s=".bones["+e[c].name+"]";n(ua,s+".position",t,"pos",r),n(ha,s+".quaternion",t,"rot",r),n(ua,s+".scale",t,"scl",r)}}return 0===r.length?null:new this(s,l,r,o)}resetDuration(){let t=0;for(let e=0,n=this.tracks.length;e!==n;++e){const n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Os(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return oa;case"vector":case"vector2":case"vector3":case"vector4":return ua;case"color":return aa;case"quaternion":return ha;case"bool":case"boolean":return sa;case"string":return ca}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],n=[];zs.flattenJSON(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const Bs={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};const $s=new class fa{constructor(t,e,n){const r=this;let s=!1,a=0,o=0,l=void 0;const h=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){o++,!1===s&&void 0!==r.onStart&&r.onStart(t,a,o),s=!0},this.itemEnd=function(t){a++,void 0!==r.onProgress&&r.onProgress(t,a,o),a===o&&(s=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(t){void 0!==r.onError&&r.onError(t)},this.resolveURL=function(t){return l?l(t):t},this.setURLModifier=function(t){return l=t,this},this.addHandler=function(t,e){return h.push(t,e),this},this.removeHandler=function(t){const e=h.indexOf(t);return-1!==e&&h.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=h.length;e<n;e+=2){const n=h[e],r=h[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return r}return null}}};class va{constructor(t){this.manager=void 0!==t?t:$s,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise((function(r,s){n.load(t,r,e,s)}))}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}const pa={};class xa extends va{constructor(t){super(t)}load(t,e,n,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,a=Bs.get(t);if(void 0!==a)return s.manager.itemStart(t),setTimeout((function(){e&&e(a),s.manager.itemEnd(t)}),0),a;if(void 0!==pa[t])return void pa[t].push({onLoad:e,onProgress:n,onError:r});const o=t.match(/^data:(.*?)(;base64)?,(.*)$/);let l;if(o){const n=o[1],a=!!o[2];let l=o[3];l=decodeURIComponent(l),a&&(l=atob(l));try{let r;const a=(this.responseType||"").toLowerCase();switch(a){case"arraybuffer":case"blob":const t=new Uint8Array(l.length);for(let n=0;n<l.length;n++)t[n]=l.charCodeAt(n);r="blob"===a?new Blob([t.buffer],{type:n}):t.buffer;break;case"document":const e=new DOMParser;r=e.parseFromString(l,n);break;case"json":r=JSON.parse(l);break;default:r=l}setTimeout((function(){e&&e(r),s.manager.itemEnd(t)}),0)}catch(e){setTimeout((function(){r&&r(e),s.manager.itemError(t),s.manager.itemEnd(t)}),0)}}else{pa[t]=[],pa[t].push({onLoad:e,onProgress:n,onError:r}),l=new XMLHttpRequest,l.open("GET",t,!0),l.addEventListener("load",(function(e){const n=this.response,r=pa[t];if(delete pa[t],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Bs.add(t,n);for(let t=0,e=r.length;t<e;t++){const e=r[t];e.onLoad&&e.onLoad(n)}s.manager.itemEnd(t)}else{for(let t=0,n=r.length;t<n;t++){const n=r[t];n.onError&&n.onError(e)}s.manager.itemError(t),s.manager.itemEnd(t)}}),!1),l.addEventListener("progress",(function(e){const n=pa[t];for(let t=0,r=n.length;t<r;t++){const r=n[t];r.onProgress&&r.onProgress(e)}}),!1),l.addEventListener("error",(function(e){const n=pa[t];delete pa[t];for(let t=0,r=n.length;t<r;t++){const r=n[t];r.onError&&r.onError(e)}s.manager.itemError(t),s.manager.itemEnd(t)}),!1),l.addEventListener("abort",(function(e){const n=pa[t];delete pa[t];for(let t=0,r=n.length;t<r;t++){const r=n[t];r.onError&&r.onError(e)}s.manager.itemError(t),s.manager.itemEnd(t)}),!1),void 0!==this.responseType&&(l.responseType=this.responseType),void 0!==this.withCredentials&&(l.withCredentials=this.withCredentials),l.overrideMimeType&&l.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const t in this.requestHeader)l.setRequestHeader(t,this.requestHeader[t]);l.send(null)}return s.manager.itemStart(t),l}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class _a extends va{constructor(t){super(t)}load(t,e,n,r){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,a=Bs.get(t);if(void 0!==a)return s.manager.itemStart(t),setTimeout((function(){e&&e(a),s.manager.itemEnd(t)}),0),a;const o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function l(){o.removeEventListener("load",l,!1),o.removeEventListener("error",h,!1),Bs.add(t,this),e&&e(this),s.manager.itemEnd(t)}function h(e){o.removeEventListener("load",l,!1),o.removeEventListener("error",h,!1),r&&r(e),s.manager.itemError(t),s.manager.itemEnd(t)}return o.addEventListener("load",l,!1),o.addEventListener("error",h,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),s.manager.itemStart(t),o.src=t,o}}class ba extends va{constructor(t){super(t)}load(t,e,n,r){const s=new Ue,a=new _a(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;function l(n){a.load(t[n],(function(t){s.images[n]=t,o++,6===o&&(s.needsUpdate=!0,e&&e(s))}),void 0,r)}for(let h=0;h<t.length;++h)l(h);return s}}class wa extends va{constructor(t){super(t)}load(t,e,n,r){const s=new x,a=new _a(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(t,(function(n){s.image=n;const r=t.search(/\.jpe?g($|\?)/i)>0||0===t.search(/^data\:image\/jpeg/);s.format=r?1022:1023,s.needsUpdate=!0,void 0!==e&&e(s)}),n,r),s}}class Ma{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,r=this.getPoint(0),s=0;e.push(0);for(let a=1;a<=t;a++)n=this.getPoint(a/t),s+=n.distanceTo(r),e.push(s),r=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let r=0;const s=n.length;let a;a=e||t*n[s-1];let o,l=0,h=s-1;for(;l<=h;)if(r=Math.floor(l+(h-l)/2),o=n[r]-a,o<0)l=r+1;else{if(!(o>0)){h=r;break}h=r-1}if(r=h,n[r]===a)return r/(s-1);const c=n[r];return(r+(a-c)/(n[r+1]-c))/(s-1)}getTangent(t,e){let n=t-1e-4,r=t+1e-4;n<0&&(n=0),r>1&&(r=1);const s=this.getPoint(n),a=this.getPoint(r),o=e||(s.isVector2?new m:new S);return o.copy(a).sub(s).normalize(),o}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new S,r=[],s=[],a=[],o=new S,h=new et;for(let l=0;l<=t;l++){const e=l/t;r[l]=this.getTangentAt(e,new S),r[l].normalize()}s[0]=new S,a[0]=new S;let c=Number.MAX_VALUE;const u=Math.abs(r[0].x),d=Math.abs(r[0].y),p=Math.abs(r[0].z);u<=c&&(c=u,n.set(1,0,0)),d<=c&&(c=d,n.set(0,1,0)),p<=c&&n.set(0,0,1),o.crossVectors(r[0],n).normalize(),s[0].crossVectors(r[0],o),a[0].crossVectors(r[0],s[0]);for(let g=1;g<=t;g++){if(s[g]=s[g-1].clone(),a[g]=a[g-1].clone(),o.crossVectors(r[g-1],r[g]),o.length()>Number.EPSILON){o.normalize();const t=Math.acos(l(r[g-1].dot(r[g]),-1,1));s[g].applyMatrix4(h.makeRotationAxis(o,t))}a[g].crossVectors(r[g],s[g])}if(!0===e){let e=Math.acos(l(s[0].dot(s[t]),-1,1));e/=t,r[0].dot(o.crossVectors(s[0],s[t]))>0&&(e=-e);for(let n=1;n<=t;n++)s[n].applyMatrix4(h.makeRotationAxis(r[n],e*n)),a[n].crossVectors(r[n],s[n])}return{tangents:r,normals:s,binormals:a}}clone(){return(new this.constructor).copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Sa extends Ma{constructor(t=0,e=0,n=1,r=1,s=0,a=2*Math.PI,o=!1,l=0){super(),this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=r,this.aStartAngle=s,this.aEndAngle=a,this.aClockwise=o,this.aRotation=l}getPoint(t,e){const n=e||new m,r=2*Math.PI;let s=this.aEndAngle-this.aStartAngle;const a=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=r;for(;s>r;)s-=r;s<Number.EPSILON&&(s=a?0:r),!0!==this.aClockwise||a||(s===r?s=-r:s-=r);const o=this.aStartAngle+t*s;let l=this.aX+this.xRadius*Math.cos(o),h=this.aY+this.yRadius*Math.sin(o);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=l-this.aX,r=h-this.aY;l=n*t-r*e+this.aX,h=n*e+r*t+this.aY}return n.set(l,h)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}Sa.prototype.isEllipseCurve=!0;class Ea extends Sa{constructor(t,e,n,r,s,a){super(t,e,n,n,r,s,a),this.type="ArcCurve"}}function ma(){let t=0,e=0,n=0,r=0;function s(s,a,o,l){t=s,e=o,n=-3*s+3*a-2*o-l,r=2*s-2*a+o+l}return{initCatmullRom:function(t,e,n,r,a){s(e,n,a*(n-t),a*(r-e))},initNonuniformCatmullRom:function(t,e,n,r,a,o,l){let h=(e-t)/a-(n-t)/(a+o)+(n-e)/o,c=(n-e)/o-(r-e)/(o+l)+(r-n)/l;h*=o,c*=o,s(e,n,h,c)},calc:function(s){const a=s*s;return t+e*s+n*a+r*(a*s)}}}Ea.prototype.isArcCurve=!0;const ga=new S,ya=new ma,Ta=new ma,La=new ma;class Ra extends Ma{constructor(t=[],e=!1,n="centripetal",r=.5){super(),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=r}getPoint(t,e=new S){const n=e,r=this.points,s=r.length,a=(s-(this.closed?0:1))*t;let o,l,h=Math.floor(a),c=a-h;this.closed?h+=h>0?0:(Math.floor(Math.abs(h)/s)+1)*s:0===c&&h===s-1&&(h=s-2,c=1),this.closed||h>0?o=r[(h-1)%s]:(ga.subVectors(r[0],r[1]).add(r[0]),o=ga);const u=r[h%s],d=r[(h+1)%s];if(this.closed||h+2<s?l=r[(h+2)%s]:(ga.subVectors(r[s-1],r[s-2]).add(r[s-1]),l=ga),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(o.distanceToSquared(u),t),n=Math.pow(u.distanceToSquared(d),t),r=Math.pow(d.distanceToSquared(l),t);n<1e-4&&(n=1),e<1e-4&&(e=n),r<1e-4&&(r=n),ya.initNonuniformCatmullRom(o.x,u.x,d.x,l.x,e,n,r),Ta.initNonuniformCatmullRom(o.y,u.y,d.y,l.y,e,n,r),La.initNonuniformCatmullRom(o.z,u.z,d.z,l.z,e,n,r)}else"catmullrom"===this.curveType&&(ya.initCatmullRom(o.x,u.x,d.x,l.x,this.tension),Ta.initCatmullRom(o.y,u.y,d.y,l.y,this.tension),La.initCatmullRom(o.z,u.z,d.z,l.z,this.tension));return n.set(ya.calc(c),Ta.calc(c),La.calc(c)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new S).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function Aa(t,e,n,r,s){const a=.5*(r-e),o=.5*(s-n),l=t*t;return(2*n-2*r+a+o)*(t*l)+(-3*n+3*r-2*a-o)*l+a*t+n}function Ca(t,e,n,r){return function(t,e){const n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,r)}function Pa(t,e,n,r,s){return function(t,e){const n=1-t;return n*n*n*e}(t,e)+function(t,e){const n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,r)+function(t,e){return t*t*t*e}(t,s)}Ra.prototype.isCatmullRomCurve3=!0;class za extends Ma{constructor(t=new m,e=new m,n=new m,r=new m){super(),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=r}getPoint(t,e=new m){const n=e,r=this.v0,s=this.v1,a=this.v2,o=this.v3;return n.set(Pa(t,r.x,s.x,a.x,o.x),Pa(t,r.y,s.y,a.y,o.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}za.prototype.isCubicBezierCurve=!0;class Oa extends Ma{constructor(t=new S,e=new S,n=new S,r=new S){super(),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=r}getPoint(t,e=new S){const n=e,r=this.v0,s=this.v1,a=this.v2,o=this.v3;return n.set(Pa(t,r.x,s.x,a.x,o.x),Pa(t,r.y,s.y,a.y,o.y),Pa(t,r.z,s.z,a.z,o.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}Oa.prototype.isCubicBezierCurve3=!0;class Fa extends Ma{constructor(t=new m,e=new m){super(),this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new m){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const n=e||new m;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Fa.prototype.isLineCurve=!0;class Ba extends Ma{constructor(t=new m,e=new m,n=new m){super(),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new m){const n=e,r=this.v0,s=this.v1,a=this.v2;return n.set(Ca(t,r.x,s.x,a.x),Ca(t,r.y,s.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Ba.prototype.isQuadraticBezierCurve=!0;class Ha extends Ma{constructor(t=new S,e=new S,n=new S){super(),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new S){const n=e,r=this.v0,s=this.v1,a=this.v2;return n.set(Ca(t,r.x,s.x,a.x),Ca(t,r.y,s.y,a.y),Ca(t,r.z,s.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}Ha.prototype.isQuadraticBezierCurve3=!0;class Ua extends Ma{constructor(t=[]){super(),this.type="SplineCurve",this.points=t}getPoint(t,e=new m){const n=e,r=this.points,s=(r.length-1)*t,a=Math.floor(s),o=s-a,l=r[0===a?a:a-1],h=r[a],c=r[a>r.length-2?r.length-1:a+1],u=r[a>r.length-3?r.length-1:a+2];return n.set(Aa(o,l.x,h.x,c.x,u.x),Aa(o,l.y,h.y,c.y,u.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new m).fromArray(n))}return this}}Ua.prototype.isSplineCurve=!0;var Ia=Object.freeze({__proto__:null,ArcCurve:Ea,CatmullRomCurve3:Ra,CubicBezierCurve:za,CubicBezierCurve3:Oa,EllipseCurve:Sa,LineCurve:Fa,LineCurve3:class extends Ma{constructor(t=new S,e=new S){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=t,this.v2=e}getPoint(t,e=new S){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}},QuadraticBezierCurve:Ba,QuadraticBezierCurve3:Ha,SplineCurve:Ua});class Va extends Ma{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Fa(e,t))}getPoint(t){const e=t*this.getLength(),n=this.getCurveLengths();let r=0;for(;r<n.length;){if(n[r]>=e){const t=n[r]-e,s=this.curves[r],a=s.getLength(),o=0===a?0:1-t/a;return s.getPointAt(o)}r++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,r=this.curves.length;n<r;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let r=0,s=this.curves;r<s.length;r++){const a=s[r],o=a&&a.isEllipseCurve?2*t:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?t*a.points.length:t,l=a.getPoints(o);for(let t=0;t<l.length;t++){const r=l[t];n&&n.equals(r)||(e.push(r),n=r)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new Ia[n.type]).fromJSON(n))}return this}}class ka extends Va{constructor(t){super(),this.type="Path",this.currentPoint=new m,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Fa(this.currentPoint.clone(),new m(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,r){const s=new Ba(this.currentPoint.clone(),new m(t,e),new m(n,r));return this.curves.push(s),this.currentPoint.set(n,r),this}bezierCurveTo(t,e,n,r,s,a){const o=new za(this.currentPoint.clone(),new m(t,e),new m(n,r),new m(s,a));return this.curves.push(o),this.currentPoint.set(s,a),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Ua(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,r,s,a){const o=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(t+o,e+l,n,r,s,a),this}absarc(t,e,n,r,s,a){return this.absellipse(t,e,n,n,r,s,a),this}ellipse(t,e,n,r,s,a,o,l){const h=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(t+h,e+c,n,r,s,a,o,l),this}absellipse(t,e,n,r,s,a,o,l){const h=new Sa(t,e,n,r,s,a,o,l);if(this.curves.length>0){const t=h.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(h);const c=h.getPoint(1);return this.currentPoint.copy(c),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class Wa extends ka{constructor(t){super(t),this.uuid=o(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,r=this.holes.length;n<r;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new ka).fromJSON(n))}return this}}class ja extends Tt{constructor(t,e=1){super(),this.type="Light",this.color=new Jt(t),this.intensity=e}dispose(){}copy(t){return super.copy(t),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}ja.prototype.isLight=!0;(class qa extends ja{constructor(t,e,n){super(t,n),this.type="HemisphereLight",this.position.copy(Tt.DefaultUp),this.updateMatrix(),this.groundColor=new Jt(e)}copy(t){return ja.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}).prototype.isHemisphereLight=!0;const Da=new et,Na=new S,Ga=new S;class Ja{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new m(512,512),this.map=null,this.mapPass=null,this.matrix=new et,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new je,this._frameExtents=new m(1,1),this._viewportCount=1,this._viewports=[new b(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;Na.setFromMatrixPosition(t.matrixWorld),e.position.copy(Na),Ga.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Ga),e.updateMatrixWorld(),Da.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Da),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class Qa extends Ja{constructor(){super(new Be(50,1,.5,500)),this.focus=1}updateMatrices(t){const e=this.camera,n=2*a*t.angle*this.focus,r=this.mapSize.width/this.mapSize.height,s=t.distance||e.far;n===e.fov&&r===e.aspect&&s===e.far||(e.fov=n,e.aspect=r,e.far=s,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}Qa.prototype.isSpotLightShadow=!0;class Ka extends ja{constructor(t,e,n=0,r=Math.PI/3,s=0,a=1){super(t,e),this.type="SpotLight",this.position.copy(Tt.DefaultUp),this.updateMatrix(),this.target=new Tt,this.distance=n,this.angle=r,this.penumbra=s,this.decay=a,this.shadow=new Qa}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}Ka.prototype.isSpotLight=!0;const Xa=new et,Ya=new S,Za=new S;class no extends Ja{constructor(){super(new Be(90,1,.5,500)),this._frameExtents=new m(4,2),this._viewportCount=6,this._viewports=[new b(2,1,1,1),new b(0,1,1,1),new b(3,1,1,1),new b(1,1,1,1),new b(3,0,1,1),new b(1,0,1,1)],this._cubeDirections=[new S(1,0,0),new S(-1,0,0),new S(0,0,1),new S(0,0,-1),new S(0,1,0),new S(0,-1,0)],this._cubeUps=[new S(0,1,0),new S(0,1,0),new S(0,1,0),new S(0,1,0),new S(0,0,1),new S(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,r=this.matrix,s=t.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),Ya.setFromMatrixPosition(t.matrixWorld),n.position.copy(Ya),Za.copy(n.position),Za.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(Za),n.updateMatrixWorld(),r.makeTranslation(-Ya.x,-Ya.y,-Ya.z),Xa.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Xa)}}no.prototype.isPointLightShadow=!0;(class io extends ja{constructor(t,e,n=0,r=1){super(t,e),this.type="PointLight",this.distance=n,this.decay=r,this.shadow=new no}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}).prototype.isPointLight=!0;class ro extends Fe{constructor(t=-1,e=1,n=1,r=-1,s=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=r,this.near=s,this.far=a,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,n,r,s,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=n-t,a=n+t,o=r+e,l=r-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=t*this.view.offsetX,a=s+t*this.view.width,o-=e*this.view.offsetY,l=o-e*this.view.height}this.projectionMatrix.makeOrthographic(s,a,o,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}ro.prototype.isOrthographicCamera=!0;class so extends Ja{constructor(){super(new ro(-5,5,5,-5,.5,500))}}so.prototype.isDirectionalLightShadow=!0;class ao extends ja{constructor(t,e){super(t,e),this.type="DirectionalLight",this.position.copy(Tt.DefaultUp),this.updateMatrix(),this.target=new Tt,this.shadow=new so}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}ao.prototype.isDirectionalLight=!0;class oo extends ja{constructor(t,e){super(t,e),this.type="AmbientLight"}}oo.prototype.isAmbientLight=!0;(class lo extends ja{constructor(t,e,n=10,r=10){super(t,e),this.type="RectAreaLight",this.width=n,this.height=r}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}).prototype.isRectAreaLight=!0;class ho{constructor(){this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new S)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,r=t.y,s=t.z,a=this.coefficients;return e.copy(a[0]).multiplyScalar(.282095),e.addScaledVector(a[1],.488603*r),e.addScaledVector(a[2],.488603*s),e.addScaledVector(a[3],.488603*n),e.addScaledVector(a[4],n*r*1.092548),e.addScaledVector(a[5],r*s*1.092548),e.addScaledVector(a[6],.315392*(3*s*s-1)),e.addScaledVector(a[7],n*s*1.092548),e.addScaledVector(a[8],.546274*(n*n-r*r)),e}getIrradianceAt(t,e){const n=t.x,r=t.y,s=t.z,a=this.coefficients;return e.copy(a[0]).multiplyScalar(.886227),e.addScaledVector(a[1],1.023328*r),e.addScaledVector(a[2],1.023328*s),e.addScaledVector(a[3],1.023328*n),e.addScaledVector(a[4],.858086*n*r),e.addScaledVector(a[5],.858086*r*s),e.addScaledVector(a[6],.743125*s*s-.247708),e.addScaledVector(a[7],.858086*n*s),e.addScaledVector(a[8],.429043*(n*n-r*r)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].fromArray(t,e+3*r);return this}toArray(t=[],e=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].toArray(t,e+3*r);return t}static getBasisAt(t,e){const n=t.x,r=t.y,s=t.z;e[0]=.282095,e[1]=.488603*r,e[2]=.488603*s,e[3]=.488603*n,e[4]=1.092548*n*r,e[5]=1.092548*r*s,e[6]=.315392*(3*s*s-1),e[7]=1.092548*n*s,e[8]=.546274*(n*n-r*r)}}ho.prototype.isSphericalHarmonics3=!0;class co extends ja{constructor(t=new ho,e=1){super(void 0,e),this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}co.prototype.isLightProbe=!0;(class po extends de{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const t=super.toJSON(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}).prototype.isInstancedBufferGeometry=!0;class mo extends te{constructor(t,e,n,r){"number"==typeof n&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(t,e,n),this.meshPerAttribute=r||1}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}mo.prototype.isInstancedBufferAttribute=!0,class extends va{constructor(t){super(t),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,n,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,a=Bs.get(t);if(void 0!==a)return s.manager.itemStart(t),setTimeout((function(){e&&e(a),s.manager.itemEnd(t)}),0),a;const o={};o.credentials="anonymous"===this.crossOrigin?"same-origin":"include",o.headers=this.requestHeader,fetch(t,o).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,Object.assign(s.options,{colorSpaceConversion:"none"}))})).then((function(n){Bs.add(t,n),e&&e(n),s.manager.itemEnd(t)})).catch((function(e){r&&r(e),s.manager.itemError(t),s.manager.itemEnd(t)})),s.manager.itemStart(t)}}.prototype.isImageBitmapLoader=!0;class fo{constructor(){this.type="ShapePath",this.color=new Jt,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new ka,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,r){return this.currentPath.quadraticCurveTo(t,e,n,r),this}bezierCurveTo(t,e,n,r,s,a){return this.currentPath.bezierCurveTo(t,e,n,r,s,a),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t,e){function n(t){const e=[];for(let n=0,r=t.length;n<r;n++){const r=t[n],s=new Wa;s.curves=r.curves,e.push(s)}return e}function r(t,e){const n=e.length;let r=!1;for(let s=n-1,a=0;a<n;s=a++){let n=e[s],o=e[a],l=o.x-n.x,h=o.y-n.y;if(Math.abs(h)>Number.EPSILON){if(h<0&&(n=e[a],l=-l,o=e[s],h=-h),t.y<n.y||t.y>o.y)continue;if(t.y===n.y){if(t.x===n.x)return!0}else{const e=h*(t.x-n.x)-l*(t.y-n.y);if(0===e)return!0;if(e<0)continue;r=!r}}else{if(t.y!==n.y)continue;if(o.x<=t.x&&t.x<=n.x||n.x<=t.x&&t.x<=o.x)return!0}}return r}const s=Ns.isClockWise,a=this.subPaths;if(0===a.length)return[];if(!0===e)return n(a);let o,l,h;const c=[];if(1===a.length)return l=a[0],h=new Wa,h.curves=l.curves,c.push(h),c;let u=!s(a[0].getPoints());u=t?!u:u;const d=[],p=[];let g,y,_=[],E=0;p[E]=void 0,_[E]=[];for(let T=0,A=a.length;T<A;T++)l=a[T],g=l.getPoints(),o=s(g),o=t?!o:o,o?(!u&&p[E]&&E++,p[E]={s:new Wa,p:g},p[E].s.curves=l.curves,u&&E++,_[E]=[]):_[E].push({h:l,p:g[0]});if(!p[0])return n(a);if(p.length>1){let t=!1;const e=[];for(let n=0,r=p.length;n<r;n++)d[n]=[];for(let n=0,s=p.length;n<s;n++){const s=_[n];for(let a=0;a<s.length;a++){const o=s[a];let l=!0;for(let s=0;s<p.length;s++)r(o.p,p[s].p)&&(n!==s&&e.push({froms:n,tos:s,hole:a}),l?(l=!1,d[s].push(o)):t=!0);l&&d[n].push(o)}}e.length>0&&(t||(_=d))}for(let T=0,A=p.length;T<A;T++){h=p[T].s,c.push(h),y=_[T];for(let t=0,e=y.length;t<e;t++)h.holes.push(y[t].h)}return c}}function $a(t,e,n,r,s){const a=s.glyphs[t]||s.glyphs["?"];if(!a)return void console.error('THREE.Font: character "'+t+'" does not exists in font family '+s.familyName+".");const o=new fo;let l,h,c,u,d,p,g,y;if(a.o){const t=a._cachedOutline||(a._cachedOutline=a.o.split(" "));for(let s=0,a=t.length;s<a;)switch(t[s++]){case"m":l=t[s++]*e+n,h=t[s++]*e+r,o.moveTo(l,h);break;case"l":l=t[s++]*e+n,h=t[s++]*e+r,o.lineTo(l,h);break;case"q":c=t[s++]*e+n,u=t[s++]*e+r,d=t[s++]*e+n,p=t[s++]*e+r,o.quadraticCurveTo(d,p,c,u);break;case"b":c=t[s++]*e+n,u=t[s++]*e+r,d=t[s++]*e+n,p=t[s++]*e+r,g=t[s++]*e+n,y=t[s++]*e+r,o.bezierCurveTo(d,p,g,y,c,u)}}return{offsetX:a.ha*e,path:o}}let to;(class go{constructor(t){this.type="Font",this.data=t}generateShapes(t,e=100){const n=[],r=function(t,e,n){const r=Array.from(t),s=e/n.resolution,a=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*s,o=[];let l=0,h=0;for(let c=0;c<r.length;c++){const t=r[c];if("\n"===t)l=0,h-=a;else{const e=$a(t,s,l,h,n);l+=e.offsetX,o.push(e.path)}}return o}(t,e,this.data);for(let s=0,a=r.length;s<a;s++)Array.prototype.push.apply(n,r[s].toShapes());return n}}).prototype.isFont=!0;class _o extends va{constructor(t){super(t)}load(t,e,n,r){const s=this,a=new xa(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,(function(n){try{const t=n.slice(0);(void 0===to&&(to=new(window.AudioContext||window.webkitAudioContext)),to).decodeAudioData(t,(function(t){e(t)}))}catch(e){r?r(e):console.error(e),s.manager.itemError(t)}}),n,r)}}(class extends co{constructor(t,e,n=1){super(void 0,n);const r=(new Jt).set(t),s=(new Jt).set(e),a=new S(r.r,r.g,r.b),o=new S(s.r,s.g,s.b),l=Math.sqrt(Math.PI),h=l*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(o).multiplyScalar(l),this.sh.coefficients[1].copy(a).sub(o).multiplyScalar(h)}}).prototype.isHemisphereLightProbe=!0,class extends co{constructor(t,e=1){super(void 0,e);const n=(new Jt).set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}.prototype.isAmbientLightProbe=!0;class bo{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=eo(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=eo();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function eo(){return("undefined"==typeof performance?Date:performance).now()}class So{constructor(t,e,n){let r,s,a;switch(this.binding=t,this.valueSize=n,e){case"quaternion":r=this._slerp,s=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":r=this._select,s=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:r=this._lerp,s=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=s,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,r=this.valueSize,s=t*r+r;let a=this.cumulativeWeight;if(0===a){for(let t=0;t!==r;++t)n[s+t]=n[t];a=e}else{a+=e;const t=e/a;this._mixBufferRegion(n,s,0,t,r)}this.cumulativeWeight=a}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,r=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,r,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,r=t*e+e,s=this.cumulativeWeight,a=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const t=e*this._origIndex;this._mixBufferRegion(n,r,t,1-s,e)}a>0&&this._mixBufferRegionAdditive(n,r,this._addIndex*e,1,e);for(let l=e,h=e+e;l!==h;++l)if(n[l]!==n[l+e]){o.setValue(n,r);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,r=n*this._origIndex;t.getValue(e,r);for(let s=n,a=r;s!==a;++s)e[s]=e[r+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,r,s){if(r>=.5)for(let a=0;a!==s;++a)t[e+a]=t[n+a]}_slerp(t,e,n,r){M.slerpFlat(t,e,t,e,t,n,r)}_slerpAdditive(t,e,n,r,s){const a=this._workIndex*s;M.multiplyQuaternionsFlat(t,a,t,e,t,n),M.slerpFlat(t,e,t,e,t,a,r)}_lerp(t,e,n,r,s){const a=1-r;for(let o=0;o!==s;++o){const s=e+o;t[s]=t[s]*a+t[n+o]*r}}_lerpAdditive(t,e,n,r,s){for(let a=0;a!==s;++a){const s=e+a;t[s]=t[s]+t[n+a]*r}}}const vo=new RegExp("[\\[\\]\\.:\\/]","g"),yo="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",xo=/((?:WC+[\/:])*)/.source.replace("WC","[^\\[\\]\\.:\\/]"),wo=/(WCOD+)?/.source.replace("WCOD",yo),Eo=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC","[^\\[\\]\\.:\\/]"),To=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC","[^\\[\\]\\.:\\/]"),Lo=new RegExp("^"+xo+wo+Eo+To+"$"),Ao=["material","materials","bones"];class Do{constructor(t,e,n){this.path=e,this.parsedPath=n||Do.parseTrackName(e),this.node=Do.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new Do.Composite(t,e,n):new Do(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(vo,"")}static parseTrackName(t){const e=Lo.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){const t=n.nodeName.substring(r+1);-1!==Ao.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(!e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let r=0;r<t.length;r++){const s=t[r];if(s.name===e||s.uuid===e)return s;const a=n(s.children);if(a)return a}return null},r=n(t.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.node[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)t[e++]=n[r]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,r=e.propertyName;let s=e.propertyIndex;if(t||(t=Do.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let r=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===r){r=e;break}break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==r){if(void 0===t[r])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[r]}}const a=t[r];if(void 0===a){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+r+" but it wasn't found.",t)}let o=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?o=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(o=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(void 0!==s){if("morphTargetInfluences"===r){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[s]&&(s=t.morphTargetDictionary[s])}l=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=s}else void 0!==a.fromArray&&void 0!==a.toArray?(l=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(l=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=r;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Do.Composite=class{constructor(t,e,n){const r=n||Do.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,r)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,s=n.length;r!==s;++r)n[r].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}},Do.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Do.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Do.prototype.GetterByBindingType=[Do.prototype._getValue_direct,Do.prototype._getValue_array,Do.prototype._getValue_arrayElement,Do.prototype._getValue_toArray],Do.prototype.SetterByBindingTypeAndVersioning=[[Do.prototype._setValue_direct,Do.prototype._setValue_direct_setNeedsUpdate,Do.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Do.prototype._setValue_array,Do.prototype._setValue_array_setNeedsUpdate,Do.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Do.prototype._setValue_arrayElement,Do.prototype._setValue_arrayElement_setNeedsUpdate,Do.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Do.prototype._setValue_fromArray,Do.prototype._setValue_fromArray_setNeedsUpdate,Do.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]],class{constructor(){this.uuid=o(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,r=arguments.length;n!==r;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,r=this._parsedPaths,s=this._bindings,a=s.length;let o=void 0,l=t.length,h=this.nCachedObjects_;for(let c=0,u=arguments.length;c!==u;++c){const u=arguments[c],d=u.uuid;let p=e[d];if(void 0===p){p=l++,e[d]=p,t.push(u);for(let t=0,e=a;t!==e;++t)s[t].push(new Do(u,n[t],r[t]))}else if(p<h){o=t[p];const l=--h,c=t[l];e[c.uuid]=p,t[p]=c,e[d]=l,t[l]=u;for(let t=0,e=a;t!==e;++t){const e=s[t],a=e[l];let o=e[p];e[p]=a,void 0===o&&(o=new Do(u,n[t],r[t])),e[l]=o}}else t[p]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,r=n.length;let s=this.nCachedObjects_;for(let a=0,o=arguments.length;a!==o;++a){const o=arguments[a],l=o.uuid,h=e[l];if(void 0!==h&&h>=s){const a=s++,c=t[a];e[c.uuid]=h,t[h]=c,e[l]=a,t[a]=o;for(let t=0,e=r;t!==e;++t){const e=n[t],r=e[a],s=e[h];e[h]=r,e[a]=s}}}this.nCachedObjects_=s}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,r=n.length;let s=this.nCachedObjects_,a=t.length;for(let o=0,l=arguments.length;o!==l;++o){const l=arguments[o].uuid,h=e[l];if(void 0!==h)if(delete e[l],h<s){const o=--s,l=t[o],c=--a,u=t[c];e[l.uuid]=h,t[h]=l,e[u.uuid]=o,t[o]=u,t.pop();for(let t=0,e=r;t!==e;++t){const e=n[t],r=e[o],s=e[c];e[h]=r,e[o]=s,e.pop()}}else{const s=--a,o=t[s];s>0&&(e[o.uuid]=h),t[h]=o,t.pop();for(let t=0,e=r;t!==e;++t){const e=n[t];e[h]=e[s],e.pop()}}}this.nCachedObjects_=s}subscribe_(t,e){const n=this._bindingsIndicesByPath;let r=n[t];const s=this._bindings;if(void 0!==r)return s[r];const a=this._paths,o=this._parsedPaths,l=this._objects,h=l.length,c=this.nCachedObjects_,u=new Array(h);r=s.length,n[t]=r,a.push(t),o.push(e),s.push(u);for(let d=c,p=l.length;d!==p;++d){const n=l[d];u[d]=new Do(n,t,e)}return u}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(void 0!==n){const r=this._paths,s=this._parsedPaths,a=this._bindings,o=a.length-1,l=a[o];e[t[o]]=n,a[n]=l,a.pop(),s[n]=s[o],s.pop(),r[n]=r[o],r.pop()}}}.prototype.isAnimationObjectGroup=!0;class No{constructor(t,e,n=null,r=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=r;const s=e.tracks,a=s.length,o=new Array(a),l={endingStart:2400,endingEnd:2400};for(let h=0;h!==a;++h){const t=s[h].createInterpolant(null);o[h]=t,t.settings=l}this._interpolantSettings=l,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const n=this._clip.duration,r=t._clip.duration,s=r/n,a=n/r;t.warp(1,s,e),this.warp(a,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const r=this._mixer,s=r.time,a=this.timeScale;let o=this._timeScaleInterpolant;null===o&&(o=r._lendControlInterpolant(),this._timeScaleInterpolant=o);const l=o.parameterPositions,h=o.sampleValues;return l[0]=s,l[1]=s+n,h[0]=t/a,h[1]=e/a,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,r){if(!this.enabled)return void this._updateWeight(t);const s=this._startTime;if(null!==s){const r=(t-s)*n;if(r<0||0===n)return;this._startTime=null,e=n*r}e*=this._updateTimeScale(t);const a=this._updateTime(e),o=this._updateWeight(t);if(o>0){const t=this._interpolants,e=this._propertyBindings;switch(this.blendMode){case 2501:for(let n=0,r=t.length;n!==r;++n)t[n].evaluate(a),e[n].accumulateAdditive(o);break;case 2500:default:for(let n=0,s=t.length;n!==s;++n)t[n].evaluate(a),e[n].accumulate(r,o)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(null!==n){const r=n.evaluate(t)[0];e*=r,t>n.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;null!==n&&(e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e))}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let r=this.time+t,s=this._loopCount;const a=2202===n;if(0===t)return-1===s?r:a&&1==(1&s)?e-r:r;if(2200===n){-1===s&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(r>=e)r=e;else{if(!(r<0)){this.time=r;break t}r=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===s&&(t>=0?(s=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),r>=e||r<0){const n=Math.floor(r/e);r-=e*n,s+=Math.abs(n);const o=this.repetitions-s;if(o<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=t>0?e:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===o){const e=t<0;this._setEndings(e,!e,a)}else this._setEndings(!1,!1,a);this._loopCount=s,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=r;if(a&&1==(1&s))return e-r}return r}_setEndings(t,e,n){const r=this._interpolantSettings;n?(r.endingStart=2401,r.endingEnd=2401):(r.endingStart=t?this.zeroSlopeAtStart?2401:2400:2402,r.endingEnd=e?this.zeroSlopeAtEnd?2401:2400:2402)}_scheduleFading(t,e,n){const r=this._mixer,s=r.time;let a=this._weightInterpolant;null===a&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=s,l[0]=e,o[1]=s+t,l[1]=n,this}}(class extends i{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,r=t._clip.tracks,s=r.length,a=t._propertyBindings,o=t._interpolants,l=n.uuid,h=this._bindingsByRootAndName;let c=h[l];void 0===c&&(c={},h[l]=c);for(let u=0;u!==s;++u){const t=r[u],s=t.name;let h=c[s];if(void 0!==h)a[u]=h;else{if(h=a[u],void 0!==h){null===h._cacheIndex&&(++h.referenceCount,this._addInactiveBinding(h,l,s));continue}const r=e&&e._propertyBindings[u].binding.parsedPath;h=new So(Do.create(n,s,r),t.ValueTypeName,t.getValueSize()),++h.referenceCount,this._addInactiveBinding(h,l,s),a[u]=h}o[u].resultBuffer=h.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,r=this._actionsByClip[n];this._bindAction(t,r&&r.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,n){const r=this._actions,s=this._actionsByClip;let a=s[e];if(void 0===a)a={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,s[e]=a;else{const e=a.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=r.length,r.push(t),a.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],r=t._cacheIndex;n._cacheIndex=r,e[r]=n,e.pop(),t._cacheIndex=null;const s=t._clip.uuid,a=this._actionsByClip,o=a[s],l=o.knownActions,h=l[l.length-1],c=t._byClipCacheIndex;h._byClipCacheIndex=c,l[c]=h,l.pop(),t._byClipCacheIndex=null,delete o.actionByRoot[(t._localRoot||this._root).uuid],0===l.length&&delete a[s],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let n=0,r=e.length;n!==r;++n){const t=e[n];0==--t.referenceCount&&this._removeInactiveBinding(t)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,r=this._nActiveActions++,s=e[r];t._cacheIndex=r,e[r]=t,s._cacheIndex=n,e[n]=s}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,r=--this._nActiveActions,s=e[r];t._cacheIndex=r,e[r]=t,s._cacheIndex=n,e[n]=s}_addInactiveBinding(t,e,n){const r=this._bindingsByRootAndName,s=this._bindings;let a=r[e];void 0===a&&(a={},r[e]=a),a[n]=t,t._cacheIndex=s.length,s.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,r=n.rootNode.uuid,s=n.path,a=this._bindingsByRootAndName,o=a[r],l=e[e.length-1],h=t._cacheIndex;l._cacheIndex=h,e[h]=l,e.pop(),delete o[s],0===Object.keys(o).length&&delete a[r]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,r=this._nActiveBindings++,s=e[r];t._cacheIndex=r,e[r]=t,s._cacheIndex=n,e[n]=s}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,r=--this._nActiveBindings,s=e[r];t._cacheIndex=r,e[r]=t,s._cacheIndex=n,e[n]=s}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new na(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,r=--this._nActiveControlInterpolants,s=e[r];t.__cacheIndex=r,e[r]=t,s.__cacheIndex=n,e[n]=s}clipAction(t,e,n){const r=e||this._root,s=r.uuid;let a="string"==typeof t?da.findByName(r,t):t;const o=null!==a?a.uuid:t,l=this._actionsByClip[o];let h=null;if(void 0===n&&(n=null!==a?a.blendMode:2500),void 0!==l){const t=l.actionByRoot[s];if(void 0!==t&&t.blendMode===n)return t;h=l.knownActions[0],null===a&&(a=h._clip)}if(null===a)return null;const c=new No(this,a,e,n);return this._bindAction(c,h),this._addInactiveAction(c,o,s),c}existingAction(t,e){const n=e||this._root,r=n.uuid,s="string"==typeof t?da.findByName(n,t):t,a=s?s.uuid:t,o=this._actionsByClip[a];return void 0!==o&&o.actionByRoot[r]||null}stopAllAction(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,r=this.time+=t,s=Math.sign(t),a=this._accuIndex^=1;for(let h=0;h!==n;++h)e[h]._update(r,t,s,a);const o=this._bindings,l=this._nActiveBindings;for(let h=0;h!==l;++h)o[h].apply(a);return this}setTime(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,r=this._actionsByClip,s=r[n];if(void 0!==s){const t=s.knownActions;for(let n=0,r=t.length;n!==r;++n){const r=t[n];this._deactivateAction(r);const s=r._cacheIndex,a=e[e.length-1];r._cacheIndex=null,r._byClipCacheIndex=null,a._cacheIndex=s,e[s]=a,e.pop(),this._removeInactiveBindingsForAction(r)}delete r[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const s in n){const t=n[s].actionByRoot[e];void 0!==t&&(this._deactivateAction(t),this._removeInactiveAction(t))}const r=this._bindingsByRootAndName[e];if(void 0!==r)for(const s in r){const t=r[s];t.restoreOriginalState(),this._removeInactiveBinding(t)}}uncacheAction(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}).prototype._controlInterpolantsResultBuffer=new Float32Array(1);class zo{constructor(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}clone(){return new zo(void 0===this.value.clone?this.value:this.value.clone())}}(class extends ur{constructor(t,e,n=1){super(t,e),this.meshPerAttribute=n||1}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}).prototype.isInstancedInterleavedBuffer=!0,class{constructor(t,e,n,r,s){this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=r,this.count=s,this.version=0}set needsUpdate(t){!0===t&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}.prototype.isGLBufferAttribute=!0;class Oo{constructor(t,e,n=0,r=1/0){this.ray=new tt(t,e),this.near=n,this.far=r,this.camera=null,this.layers=new dt,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}intersectObject(t,e=!1,n=[]){return Po(t,this,n,e),n.sort(Co),n}intersectObjects(t,e=!1,n=[]){for(let r=0,s=t.length;r<s;r++)Po(t[r],this,n,e);return n.sort(Co),n}}function Co(t,e){return t.distance-e.distance}function Po(t,e,n,r){if(t.layers.test(e.layers)&&t.raycast(e,n),!0===r){const r=t.children;for(let t=0,s=r.length;t<s;t++)Po(r[t],e,n,!0)}}const Ro=new m;class Uo{constructor(t=new m(1/0,1/0),e=new m(-1/0,-1/0)){this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Ro.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return void 0===t&&(console.warn("THREE.Box2: .getCenter() target is now required"),t=new m),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box2: .getSize() target is now required"),t=new m),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box2: .getParameter() target is now required"),e=new m),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box2: .clampPoint() target is now required"),e=new m),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Ro.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}Uo.prototype.isBox2=!0;const Io=new S,Bo=new S;(class extends Tt{constructor(t){super(),this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}}).prototype.isImmediateRenderObject=!0;const Fo=new S,Ho=new et,Go=new et,Vo=[.125,.215,.35,.446,.526,.582],ko=5+Vo.length,Wo=new Qt({side:1,depthWrite:!1,depthTest:!1}),{_lodPlanes:jo,_sizeLods:qo,_sigmas:Xo}=(new Pe(new Ie,Wo),function(){const t=[],e=[],n=[];let r=8;for(let s=0;s<ko;s++){const a=Math.pow(2,r);e.push(a);let o=1/a;s>4?o=Vo[s-8+4-1]:0==s&&(o=0),n.push(o);const l=1/(a-1),h=-l/2,c=1+l/2,u=[h,h,c,h,c,c,h,h,c,c,h,c],d=6,p=6,g=3,y=2,_=1,E=new Float32Array(g*p*d),T=new Float32Array(y*p*d),A=new Float32Array(_*p*d);for(let t=0;t<d;t++){const e=t%3*2/3-1,n=t>2?0:-1,r=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];E.set(r,g*p*t),T.set(u,y*p*t);const s=[t,t,t,t,t,t];A.set(s,_*p*t)}const C=new de;C.setAttribute("position",new te(E,g)),C.setAttribute("uv",new te(T,y)),C.setAttribute("faceIndex",new te(A,_)),t.push(C),r>4&&r--}return{_lodPlanes:t,_sizeLods:e,_sigmas:n}}());Ma.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(Ma.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},ka.prototype.fromPoints=function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)},class extends Qr{constructor(t=10,e=10,n=4473924,r=8947848){n=new Jt(n),r=new Jt(r);const s=e/2,a=t/e,o=t/2,l=[],h=[];for(let u=0,d=0,p=-o;u<=e;u++,p+=a){l.push(-o,0,p,o,0,p),l.push(p,0,-o,p,0,o);const t=u===s?n:r;t.toArray(h,d),d+=3,t.toArray(h,d),d+=3,t.toArray(h,d),d+=3,t.toArray(h,d),d+=3}const c=new de;c.setAttribute("position",new ie(l,3)),c.setAttribute("color",new ie(h,3)),super(c,new Vr({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},class extends Qr{constructor(t){const e=function t(e){const n=[];e&&e.isBone&&n.push(e);for(let r=0;r<e.children.length;r++)n.push.apply(n,t(e.children[r]));return n}(t),n=new de,r=[],s=[],a=new Jt(0,0,1),o=new Jt(0,1,0);for(let l=0;l<e.length;l++){const t=e[l];t.parent&&t.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),s.push(a.r,a.g,a.b),s.push(o.r,o.g,o.b))}n.setAttribute("position",new ie(r,3)),n.setAttribute("color",new ie(s,3)),super(n,new Vr({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,r=n.getAttribute("position");Go.copy(this.root.matrixWorld).invert();for(let s=0,a=0;s<e.length;s++){const t=e[s];t.parent&&t.parent.isBone&&(Ho.multiplyMatrices(Go,t.matrixWorld),Fo.setFromMatrixPosition(Ho),r.setXYZ(a,Fo.x,Fo.y,Fo.z),Ho.multiplyMatrices(Go,t.parent.matrixWorld),Fo.setFromMatrixPosition(Ho),r.setXYZ(a+1,Fo.x,Fo.y,Fo.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},va.prototype.extractUrlBase=function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),class uo{static decodeText(t){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(t);let e="";for(let n=0,r=t.length;n<r;n++)e+=String.fromCharCode(t[n]);try{return decodeURIComponent(escape(e))}catch(t){return e}}static extractUrlBase(t){const e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)}}.extractUrlBase(t)},va.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Uo.prototype.center=function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},Uo.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Uo.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},Uo.prototype.size=function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)},L.prototype.center=function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},L.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},L.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},L.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},L.prototype.size=function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)},q.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},je.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)},class{constructor(t=new S,e=new S){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return void 0===t&&(console.warn("THREE.Line3: .getCenter() target is now required"),t=new S),t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return void 0===t&&(console.warn("THREE.Line3: .delta() target is now required"),t=new S),t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return void 0===e&&(console.warn("THREE.Line3: .at() target is now required"),e=new S),this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){Io.subVectors(t,this.start),Bo.subVectors(this.end,this.start);const n=Bo.dot(Bo);let r=Bo.dot(Io)/n;return e&&(r=l(r,0,1)),r}closestPointToPoint(t,e,n){const r=this.closestPointToPointParameter(t,e);return void 0===n&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),n=new S),this.delta(n).multiplyScalar(r).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},f.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},f.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},f.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},f.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},f.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},f.prototype.getInverse=function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},et.prototype.extractPosition=function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},et.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},et.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new S).setFromMatrixColumn(this,3)},et.prototype.setRotationFromQuaternion=function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},et.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},et.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},et.prototype.multiplyVector4=function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},et.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},et.prototype.rotateAxis=function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},et.prototype.crossVector=function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},et.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},et.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},et.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},et.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},et.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},et.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},et.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},et.prototype.makeFrustum=function(t,e,n,r,s,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,r,n,s,a)},et.prototype.getInverse=function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()},Pt.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},M.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},M.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},tt.prototype.isIntersectionBox=function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},tt.prototype.isIntersectionPlane=function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},tt.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},Gt.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},Gt.prototype.barycoordFromPoint=function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},Gt.prototype.midpoint=function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},Gt.prototypenormal=function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},Gt.prototype.plane=function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)},Gt.barycoordFromPoint=function(t,e,n,r,s){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Gt.getBarycoord(t,e,n,r,s)},Gt.normal=function(t,e,n,r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Gt.getNormal(t,e,n,r)},Wa.prototype.extractAllPoints=function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},Wa.prototype.extrude=function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Fs(this,t)},Wa.prototype.makeGeometry=function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Us(this,t)},m.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},m.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},m.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},S.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},S.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},S.prototype.getPositionFromMatrix=function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},S.prototype.getScaleFromMatrix=function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},S.prototype.getColumnFromMatrix=function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},S.prototype.applyProjection=function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},S.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},S.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},S.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},b.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},b.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Tt.prototype.getChildByName=function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},Tt.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},Tt.prototype.translate=function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},Tt.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},Tt.prototype.applyMatrix=function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(Tt.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Pe.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(Pe.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),zr.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Be.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(ja.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(te.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),35048===this.usage},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(35048)}}}),te.prototype.setDynamic=function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?35048:35044),this},te.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},te.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},de.prototype.addIndex=function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},de.prototype.addAttribute=function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new te(arguments[1],arguments[2])))},de.prototype.addDrawCall=function(t,e,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},de.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},de.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},de.prototype.removeAttribute=function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},de.prototype.applyMatrix=function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)},Object.defineProperties(de.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),ur.prototype.setDynamic=function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?35048:35044),this},ur.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},Fs.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},Fs.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},Fs.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},cr.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},zo.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(Ut.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Jt}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}}}),Object.defineProperties(Oe.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),ir.prototype.clearTarget=function(t,e,n,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,r)},ir.prototype.animate=function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},ir.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},ir.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},ir.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},ir.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},ir.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},ir.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},ir.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},ir.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},ir.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},ir.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},ir.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},ir.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},ir.prototype.enableScissorTest=function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},ir.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},ir.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},ir.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},ir.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},ir.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},ir.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},ir.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},ir.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},ir.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},ir.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(ir.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===t?3001:3e3}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(Xi.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(w.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),class Mo extends Tt{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return(new _o).load(t,(function(t){e.setBuffer(t)})),this},class{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},He.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},He.prototype.clear=function(t,e,n,r){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,n,r)},v.crossOrigin=void 0,v.loadTexture=function(t,e,n,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const s=new wa;s.setCrossOrigin(this.crossOrigin);const a=s.load(t,n,void 0,r);return e&&(a.mapping=e),a},v.loadTextureCube=function(t,e,n,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const s=new ba;s.setCrossOrigin(this.crossOrigin);const a=s.load(t,n,void 0,r);return e&&(a.mapping=e),a},v.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},v.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"128"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="128");const Yo=/^[og]\s*(.+)?/,Jo=/^mtllib /,Zo=/^usemtl /,Qo=/^usemap /,Ko=new S,$o=new S,tl=new S,el=new S,nl=new S;function il(){const t={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(t,e){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=t,void(this.object.fromDeclaration=!1!==e);const n=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:t||"",fromDeclaration:!1!==e,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(t,e){const n=this._finalize(!1);n&&(n.inherited||n.groupCount<=0)&&this.materials.splice(n.index,1);const r={index:this.materials.length,name:t||"",mtllib:Array.isArray(e)&&e.length>0?e[e.length-1]:"",smooth:void 0!==n?n.smooth:this.smooth,groupStart:void 0!==n?n.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(t){const e={index:"number"==typeof t?t:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return e.clone=this.clone.bind(e),e}};return this.materials.push(r),r},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(t){const e=this.currentMaterial();if(e&&-1===e.groupEnd&&(e.groupEnd=this.geometry.vertices.length/3,e.groupCount=e.groupEnd-e.groupStart,e.inherited=!1),t&&this.materials.length>1)for(let n=this.materials.length-1;n>=0;n--)this.materials[n].groupCount<=0&&this.materials.splice(n,1);return t&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),e}},n&&n.name&&"function"==typeof n.clone){const t=n.clone(0);t.inherited=!0,this.object.materials.push(t)}this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(t,e){const n=parseInt(t,10);return 3*(n>=0?n-1:n+e/3)},parseNormalIndex:function(t,e){const n=parseInt(t,10);return 3*(n>=0?n-1:n+e/3)},parseUVIndex:function(t,e){const n=parseInt(t,10);return 2*(n>=0?n-1:n+e/2)},addVertex:function(t,e,n){const r=this.vertices,s=this.object.geometry.vertices;s.push(r[t+0],r[t+1],r[t+2]),s.push(r[e+0],r[e+1],r[e+2]),s.push(r[n+0],r[n+1],r[n+2])},addVertexPoint:function(t){const e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addVertexLine:function(t){const e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addNormal:function(t,e,n){const r=this.normals,s=this.object.geometry.normals;s.push(r[t+0],r[t+1],r[t+2]),s.push(r[e+0],r[e+1],r[e+2]),s.push(r[n+0],r[n+1],r[n+2])},addFaceNormal:function(t,e,n){const r=this.vertices,s=this.object.geometry.normals;Ko.fromArray(r,t),$o.fromArray(r,e),tl.fromArray(r,n),nl.subVectors(tl,$o),el.subVectors(Ko,$o),nl.cross(el),nl.normalize(),s.push(nl.x,nl.y,nl.z),s.push(nl.x,nl.y,nl.z),s.push(nl.x,nl.y,nl.z)},addColor:function(t,e,n){const r=this.colors,s=this.object.geometry.colors;void 0!==r[t]&&s.push(r[t+0],r[t+1],r[t+2]),void 0!==r[e]&&s.push(r[e+0],r[e+1],r[e+2]),void 0!==r[n]&&s.push(r[n+0],r[n+1],r[n+2])},addUV:function(t,e,n){const r=this.uvs,s=this.object.geometry.uvs;s.push(r[t+0],r[t+1]),s.push(r[e+0],r[e+1]),s.push(r[n+0],r[n+1])},addDefaultUV:function(){const t=this.object.geometry.uvs;t.push(0,0),t.push(0,0),t.push(0,0)},addUVLine:function(t){const e=this.uvs;this.object.geometry.uvs.push(e[t+0],e[t+1])},addFace:function(t,e,n,r,s,a,o,l,h){const c=this.vertices.length;let u=this.parseVertexIndex(t,c),d=this.parseVertexIndex(e,c),p=this.parseVertexIndex(n,c);if(this.addVertex(u,d,p),this.addColor(u,d,p),void 0!==o&&""!==o){const t=this.normals.length;u=this.parseNormalIndex(o,t),d=this.parseNormalIndex(l,t),p=this.parseNormalIndex(h,t),this.addNormal(u,d,p)}else this.addFaceNormal(u,d,p);if(void 0!==r&&""!==r){const t=this.uvs.length;u=this.parseUVIndex(r,t),d=this.parseUVIndex(s,t),p=this.parseUVIndex(a,t),this.addUV(u,d,p),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(t){this.object.geometry.type="Points";const e=this.vertices.length;for(let n=0,r=t.length;n<r;n++){const r=this.parseVertexIndex(t[n],e);this.addVertexPoint(r),this.addColor(r)}},addLineGeometry:function(t,e){this.object.geometry.type="Line";const n=this.vertices.length,r=this.uvs.length;for(let s=0,a=t.length;s<a;s++)this.addVertexLine(this.parseVertexIndex(t[s],n));for(let s=0,a=e.length;s<a;s++)this.addUVLine(this.parseUVIndex(e[s],r))}};return t.startObject("",!1),t}class cl extends va{constructor(t){super(t),this.materials=null}load(t,e,n,r){const s=this,a=new xa(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,(function(n){try{e(s.parse(n))}catch(e){r?r(e):console.error(e),s.manager.itemError(t)}}),n,r)}setMaterials(t){return this.materials=t,this}parse(t){const e=new il;-1!==t.indexOf("\r\n")&&(t=t.replace(/\r\n/g,"\n")),-1!==t.indexOf("\\\n")&&(t=t.replace(/\\\n/g,""));const n=t.split("\n");let r="",s="",a=0,o=[];const l="function"==typeof"".trimLeft;for(let c=0,u=n.length;c<u;c++)if(r=n[c],r=l?r.trimLeft():r.trim(),a=r.length,0!==a&&(s=r.charAt(0),"#"!==s))if("v"===s){const t=r.split(/\s+/);switch(t[0]){case"v":e.vertices.push(parseFloat(t[1]),parseFloat(t[2]),parseFloat(t[3])),t.length>=7?e.colors.push(parseFloat(t[4]),parseFloat(t[5]),parseFloat(t[6])):e.colors.push(void 0,void 0,void 0);break;case"vn":e.normals.push(parseFloat(t[1]),parseFloat(t[2]),parseFloat(t[3]));break;case"vt":e.uvs.push(parseFloat(t[1]),parseFloat(t[2]))}}else if("f"===s){const t=r.substr(1).trim().split(/\s+/),n=[];for(let e=0,r=t.length;e<r;e++){const r=t[e];if(r.length>0){const t=r.split("/");n.push(t)}}const s=n[0];for(let r=1,a=n.length-1;r<a;r++){const t=n[r],a=n[r+1];e.addFace(s[0],t[0],a[0],s[1],t[1],a[1],s[2],t[2],a[2])}}else if("l"===s){const t=r.substring(1).trim().split(" ");let n=[];const s=[];if(-1===r.indexOf("/"))n=t;else for(let e=0,r=t.length;e<r;e++){const r=t[e].split("/");""!==r[0]&&n.push(r[0]),""!==r[1]&&s.push(r[1])}e.addLineGeometry(n,s)}else if("p"===s){const t=r.substr(1).trim().split(" ");e.addPointGeometry(t)}else if(null!==(o=Yo.exec(r))){const t=(" "+o[0].substr(1).trim()).substr(1);e.startObject(t)}else if(Zo.test(r))e.object.startMaterial(r.substring(7).trim(),e.materialLibraries);else if(Jo.test(r))e.materialLibraries.push(r.substring(7).trim());else if(Qo.test(r))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if("s"===s){if(o=r.split(" "),o.length>1){const t=o[1].trim().toLowerCase();e.object.smooth="0"!==t&&"off"!==t}else e.object.smooth=!0;const t=e.object.currentMaterial();t&&(t.smooth=e.object.smooth)}else{if("\0"===r)continue;console.warn('THREE.OBJLoader: Unexpected line: "'+r+'"')}e.finalize();const h=new nr;if(h.materialLibraries=[].concat(e.materialLibraries),!0==!(1===e.objects.length&&0===e.objects[0].geometry.vertices.length))for(let c=0,u=e.objects.length;c<u;c++){const t=e.objects[c],n=t.geometry,r=t.materials,s="Line"===n.type,a="Points"===n.type;let o=!1;if(0===n.vertices.length)continue;const l=new de;l.setAttribute("position",new ie(n.vertices,3)),n.normals.length>0&&l.setAttribute("normal",new ie(n.normals,3)),n.colors.length>0&&(o=!0,l.setAttribute("color",new ie(n.colors,3))),!0===n.hasUVIndices&&l.setAttribute("uv",new ie(n.uvs,2));const u=[];for(let h=0,c=r.length;h<c;h++){const t=r[h],n=t.name+"_"+t.smooth+"_"+o;let l=e.materials[n];if(null!==this.materials)if(l=this.materials.create(t.name),!s||!l||l instanceof Vr){if(a&&l&&!(l instanceof $r)){const t=new $r({size:10,sizeAttenuation:!1});Ut.prototype.copy.call(t,l),t.color.copy(l.color),t.map=l.map,l=t}}else{const t=new Vr;Ut.prototype.copy.call(t,l),t.color.copy(l.color),l=t}void 0===l&&(l=s?new Vr:a?new $r({size:1,sizeAttenuation:!1}):new Xs,l.name=t.name,l.flatShading=!t.smooth,l.vertexColors=o,e.materials[n]=l),u.push(l)}let d;if(u.length>1){for(let t=0,e=r.length;t<e;t++){const e=r[t];l.addGroup(e.groupStart,e.groupCount,t)}d=s?new Qr(l,u):a?new rs(l,u):new Pe(l,u)}else d=s?new Qr(l,u[0]):a?new rs(l,u[0]):new Pe(l,u[0]);d.name=t.name,h.add(d)}else if(e.vertices.length>0){const t=new $r({size:1,sizeAttenuation:!1}),n=new de;n.setAttribute("position",new ie(e.vertices,3)),e.colors.length>0&&void 0!==e.colors[0]&&(n.setAttribute("color",new ie(e.colors,3)),t.vertexColors=!0);const r=new rs(n,t);h.add(r)}return h}}const rl=25,sl=new ut(.3,4.6,.05),al="PR_OPENED",ol="PR_MERGED",ll="CUSTOM",hl=16777215,ul=2197759,dl=16018366,pl="PAUSE",ml="RESUME";var fl=n(1),gl=n.n(fl)()((new class{}).prototype);const vl={},yl=new S,xl=Math.PI/180,_l=180/Math.PI;function bl(t){return t*xl}function wl(t){return t*_l}function Ml(t,e,n){const r=n||new et;r.identity(),r.makeRotationY(e),r.multiply(t.matrix),t.matrix.copy(r),t.rotation.setFromRotationMatrix(t.matrix)}function Sl(t){t instanceof Pe&&(t.geometry&&t.geometry.dispose(),t.material&&(t.material.map&&t.material.map.dispose(),t.material.lightMap&&t.material.lightMap.dispose(),t.material.bumpMap&&t.material.bumpMap.dispose(),t.material.normalMap&&t.material.normalMap.dispose(),t.material.specularMap&&t.material.specularMap.dispose(),t.material.envMap&&t.material.envMap.dispose(),t.material.emissiveMap&&t.material.emissiveMap.dispose(),t.material.metalnessMap&&t.material.metalnessMap.dispose(),t.material.roughnessMap&&t.material.roughnessMap.dispose(),t.material.dispose()))}function El(t,e){for(let n=t.children.length-1;n>=0;n--){const r=t.children[n];El(r,e),"function"==typeof e&&e(r)}}function Tl(t,e,n,r){t=bl(t),e=bl(e),n=bl(n);const s=(r=bl(r))-e,a=Math.cos(n)*Math.cos(s),o=Math.cos(n)*Math.sin(s),l=Math.atan2(Math.sin(t)+Math.sin(n),Math.sqrt((Math.cos(t)+a)*(Math.cos(t)+a)+o*o)),h=e+Math.atan2(o,Math.cos(t)+a);return[wl(l),wl(h)]}function Ll(t,e,n,r){r=r||new S;const s=(90-t)*xl,a=(e+180)*xl;return r.set(-n*Math.sin(s)*Math.cos(a),n*Math.cos(s),n*Math.sin(s)*Math.sin(a)),r}function Al(){this.array=null}class kl{constructor(t){this.props=t,this.init()}init(){const{radius:t,detail:e=50,renderer:n,shadowPoint:r,highlightPoint:s,highlightColor:a,frontHighlightColor:o=3555965,waterColor:l=857395,landColorFront:h=16777215,shadowDist:c,highlightDist:u,frontPoint:d}=this.props,p=new Gs(t,e,e),g=new js({color:l,metalness:0,roughness:.9});this.uniforms=[],g.onBeforeCompile=t=>{t.uniforms.shadowDist={value:c},t.uniforms.highlightDist={value:u},t.uniforms.shadowPoint={value:(new S).copy(r)},t.uniforms.highlightPoint={value:(new S).copy(s)},t.uniforms.frontPoint={value:(new S).copy(d)},t.uniforms.highlightColor={value:new Jt(a)},t.uniforms.frontHighlightColor={value:new Jt(o)},t.vertexShader="#define GLSLIFY 1\n#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvarying vec3 vWorldPosition;\n\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t// # include <worldpos_vertex>\n    vec4 worldPosition = vec4( transformed, 1.0 );\n\n\t#ifdef USE_INSTANCING\n\n\t\tworldPosition = instanceMatrix * worldPosition;\n\n\t#endif\n\n\tworldPosition = modelMatrix * worldPosition;\n\tvWorldPosition = worldPosition.xyz;\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",t.fragmentShader="#define GLSLIFY 1\n#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSPARENCY\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSPARENCY\n\tuniform float transparency;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nuniform float shadowDist;\nuniform float highlightDist;\nuniform vec3 shadowPoint;\nuniform vec3 highlightPoint;\nuniform vec3 frontPoint;\nuniform vec3 highlightColor;\nuniform vec3 frontHighlightColor;\n\nvarying vec3 vWorldPosition;\n\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#ifdef USE_MAP\n\n\t\tvec4 texelColor = texture2D( map, vUv );\n\t\ttexelColor = mapTexelToLinear( texelColor );\n\t\t\n\t\t#ifndef IS_FILL\n\t\t\tdiffuseColor *= texelColor;\n\t\t#endif\n\n\t#endif\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSPARENCY\n\t\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\n    float dist;\n\tfloat distZ;\n\n    // highlights\n\t#ifdef USE_HIGHLIGHT\n\t\tdist = distance(vWorldPosition, highlightPoint);\n\t\tdistZ = distance(vWorldPosition.z, 0.0);\n\t\toutgoingLight = mix(highlightColor, outgoingLight, smoothstep(0.0, highlightDist, dist) * smoothstep(0.0, 3.0, pow(distZ, 0.5)));\n        outgoingLight = mix(outgoingLight * 2.0, outgoingLight, smoothstep(0.0, 12.0, distZ));\n\t#endif\n\n    // front hightlight\n    #ifdef USE_FRONT_HIGHLIGHT\n        dist = distance(vWorldPosition * vec3(0.875, 0.5, 1.0), frontPoint);\n        outgoingLight = mix(frontHighlightColor * 1.6, outgoingLight, smoothstep(0.0, 15.0, dist));\n    #endif\n\n    // shadows\n    dist = distance(vWorldPosition, shadowPoint);\n\toutgoingLight = mix(outgoingLight * 0.01, outgoingLight, smoothstep(0.0, shadowDist, dist));\n    // shadow debug\n\t// outgoingLight = mix(vec3(1.0, 0.0, 0.0), outgoingLight, smoothstep(0.0, shadowDist, dist));\n\n\t#ifdef IS_FILL\n\t\toutgoingLight = mix(outgoingLight, outgoingLight * 0.5, 1.0 - texelColor.g * 1.5);\n\t#endif\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",this.uniforms.push(t.uniforms)},g.defines={USE_HIGHLIGHT:1,USE_HIGHLIGHT_ALT:1,USE_FRONT_HIGHLIGHT:1,DITHERING:1},this.mesh=new nr;const y=new Pe(p,g);y.renderOrder=1,this.mesh.add(y),this.meshFill=y,this.materials=[g]}setShadowPoint(t){this.uniforms&&this.uniforms.forEach((e=>{e.shadowPoint.value.copy(t)}))}setHighlightPoint(t){this.uniforms&&this.uniforms.forEach((e=>{e.highlightPoint.value.copy(t)}))}setFrontPoint(t){this.uniforms&&this.uniforms.forEach((e=>{e.frontPoint.value.copy(t)}))}setShadowDist(t){this.uniforms&&this.uniforms.forEach((e=>{e.shadowDist.value=t}))}setHighlightDist(t){this.uniforms&&this.uniforms.forEach((e=>{e.highlightDist.value=t}))}dispose(){this.mesh=null,this.materials=null,this.uniforms=null,this.meshFill=null}}function Cl(t,e,n,r,s){return function(t,e,n){return(n-e)*t+e}(function(t,e,n){return(t-e)/(n-e)||0}(t,e,n),r,s)}function Pl(t,e,n){return Math.max(e,Math.min(t,n))}class Xl{constructor(t){this.props=t,this.handleMouseDown=this.handleMouseDown.bind(this),this.handleMouseMove=this.handleMouseMove.bind(this),this.handleMouseUp=this.handleMouseUp.bind(this),this.handleMouseOut=this.handleMouseOut.bind(this),this.handleTouchStart=this.handleTouchStart.bind(this),this.handleTouchMove=this.handleTouchMove.bind(this),this.handleTouchEnd=this.handleTouchEnd.bind(this),this.handlePause=this.handlePause.bind(this),this.handleResume=this.handleResume.bind(this),this.init()}init(){this.dragging=!1,this.mouse=new m(.5,.5),this.lastMouse=new m(.5,.5),this.target=new S(0,0),this.matrix=new et,this.velocity=new m,this.autoRotationSpeedScalar=1,this.autoRotationSpeedScalarTarget=1,this.addListeners(),gl.on(pl,this.handlePause),gl.on(ml,this.handleResume)}addListeners(){const{domElement:t}=this.props;this.removeListeners();const e={capture:!1,passive:!0};t.addEventListener("mousedown",this.handleMouseDown,e),t.addEventListener("mousemove",this.handleMouseMove,e),t.addEventListener("mouseup",this.handleMouseUp,e),t.addEventListener("mouseout",this.handleMouseOut,e),t.addEventListener("mouseleave",this.handleMouseOut,e),t.addEventListener("touchstart",this.handleTouchStart,e),t.addEventListener("touchmove",this.handleTouchMove,e),t.addEventListener("touchend",this.handleTouchEnd,e),t.addEventListener("touchcancel",this.handleTouchEnd,e)}removeListeners(){const{domElement:t}=this.props;t.removeEventListener("mousedown",this.handleMouseDown),t.removeEventListener("mousemove",this.handleMouseMove),t.removeEventListener("mouseup",this.handleMouseUp),t.removeEventListener("mouseout",this.handleMouseOut),t.removeEventListener("mouseleave",this.handleMouseOut),t.removeEventListener("touchstart",this.handleTouchStart),t.removeEventListener("touchmove",this.handleTouchMove),t.removeEventListener("touchend",this.handleTouchEnd),t.removeEventListener("touchcancel",this.handleTouchEnd)}setMouse(t){const{width:e,height:n}=vl.parentNode.getBoundingClientRect();this.mouse.x=t.clientX/e*2-1,this.mouse.y=-t.clientY/n*2+1}setDragging(t){this.dragging=t;const{setDraggingCallback:e}=this.props;e&&"function"==typeof e&&e(t)}handlePause(){this.removeListeners()}handleResume(){this.addListeners()}handleMouseDown(t){this.setMouse(t),this.setDragging(!0)}handleMouseMove(t){this.setMouse(t)}handleMouseUp(t){this.setMouse(t),this.setDragging(!1)}handleMouseOut(){this.setDragging(!1)}handleTouchStart(t){this.setMouse(t.changedTouches[0]),this.lastMouse.copy(this.mouse),this.setDragging(!0)}handleTouchMove(t){this.setMouse(t.changedTouches[0])}handleTouchEnd(t){this.setMouse(t.changedTouches[0]),this.setDragging(!1)}update(t=.01){let e=0,n=0;const{object:r,objectContainer:s,rotateSpeed:a,autoRotationSpeed:o,easing:l=.1,maxRotationX:h=.3}=this.props;this.dragging&&(e=this.mouse.x-this.lastMouse.x,n=this.mouse.y-this.lastMouse.y,this.target.y=Pl(this.target.y-n,-h,.6*h)),s.rotation.x+=(this.target.y+sl.x-s.rotation.x)*l,this.target.x+=(e-this.target.x)*l,Ml(r,this.target.x*a,this.matrix),this.dragging||Ml(r,t*o*this.autoRotationSpeedScalar,this.matrix),this.autoRotationSpeedScalar+=.05*(this.autoRotationSpeedScalarTarget-this.autoRotationSpeedScalar),this.lastMouse.copy(this.mouse),this.velocity.set(e,n)}dispose(){this.removeListeners(),gl.off(pl,this.handlePause),gl.off(ml,this.handleResume),this.dragging=null,this.mouse=null,this.lastMouse=null,this.target=null,this.matrix=null,this.velocity=null,this.autoRotationSpeedScalar=null,this.autoRotationSpeedScalarTarget=null}}class Yl{constructor(t){this.props=t,this.init()}init(){const{maxAmount:t=1e3,data:e=[],radius:n=1,camera:r,maxIndexDistance:s,visibleIndex:a,colors:{openPrColor:o,openPrParticleColor:l}}=this.props,{pixelRatio:h,spikeRadius:c=.06}=vl;this.mesh=new nr;const u=new Qt({color:65280,visible:!1}),d=new Ie(.75,1,.75);d.translate(0,.5,0),d.rotateX(-Math.PI/2);const p=new Gr(d,u,t);this.mesh.add(p);const g=new Qt({color:o,transparent:!0,opacity:.4,alphaTest:.05,blending:2});g.onBeforeCompile=t=>{t.uniforms.cameraPosition={value:r.position},t.uniforms.radius={value:n},t.uniforms.visibleIndex={value:a},t.uniforms.maxIndexDistance={value:s},t.uniforms.highlightIndex={value:-9999},t.vertexShader="#define GLSLIFY 1\n#include <common>\n\nuniform float visibleIndex;\nuniform float maxIndexDistance;\n\nattribute float index;\n\nvarying float vScale;\nvarying float vIndex;\n\n#ifndef PI\n#define PI 3.141592653589793\n#endif\n\nfloat sineInOut(float t) {\n  return -0.5 * (cos(PI * t) - 1.0);\n}\n\nvoid main() {\n\tvIndex = index;\n\n\tvec3 pos = position;\n\n\tfloat scale = sineInOut(clamp(smoothstep(maxIndexDistance, 0.0, distance(index, visibleIndex)), 0., 1.));\n\tpos.z *= scale;\n\tvScale = scale;\n\n\tvec3 transformed = vec3( pos );\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n}",t.fragmentShader="#define GLSLIFY 1\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n\nuniform float radius;\nuniform float visibleIndex;\nuniform float maxIndexDistance;\nuniform float highlightIndex;\n\nvarying float vScale;\nvarying float vIndex;\n\nvoid main() {\n\tif(vScale <= 0.01){\n\t\tdiscard;\n\t\treturn;\n\t}\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <alphatest_fragment>\n\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\n\tvec3 rgb = outgoingLight.rgb;\n\tfloat alpha = diffuseColor.a;\n\n\t// highlight when mouse is over\n\tif(highlightIndex == vIndex){\n\t\trgb = vec3(1.0);\n\t\talpha = 1.0;\n\t}\n\n\tgl_FragColor = vec4( rgb, alpha );\n}",this.spikeUniforms=t.uniforms};const y=[],_=[];for(let U=0;U<t;U++)y.push(U),_.push(U);const E=new ls(c*h,c*h,1,6,1,!1);E.setAttribute("index",new mo(new Float32Array(y),1)),E.translate(0,.5,0),E.rotateX(-Math.PI/2);const T=new Gr(E,g,t);this.mesh.add(T);const A=new de,C=[],P=[],R=new Jt(l),I=new nr,D=this.getDensities(),{densityValues:N,minDensity:z,maxDensity:O}=D;let B=0;for(let U=0;U<t;U++){const t=e[U],{gop:r}=t,s=r;Ll(s.lat,s.lon,n,I.position);const a=N[B++];I.scale.z=Cl(a,z,O,.05*n,.2*n),I.lookAt(yl),I.updateMatrix(),T.setMatrixAt(U,I.matrix),p.setMatrixAt(U,I.matrix),Ll(s.lat,s.lon,n+I.scale.z+.25,I.position),C.push(I.position.x,I.position.y,I.position.z),P.push(R.r,R.g,R.b)}A.setAttribute("position",new ie(C,3).onUpload(Al)),A.setAttribute("color",new ie(P,3).onUpload(Al)),A.setAttribute("index",new ie(_,1).onUpload(Al));const F=new $r({alphaTest:.05,size:.8,depthWrite:!1});F.onBeforeCompile=t=>{t.uniforms.cameraPosition={value:r.position},t.uniforms.radius={value:n},t.uniforms.visibleIndex={value:a},t.uniforms.maxIndexDistance={value:s},t.vertexShader="#define GLSLIFY 1\nuniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nuniform float time;\nuniform float visibleIndex;\nuniform float maxIndexDistance;\nuniform float speed;\n\nattribute float index;\nattribute vec3 curveStart;\nattribute vec3 curveCtrl1;\nattribute vec3 curveCtrl2;\nattribute vec3 curveEnd;\nattribute float timeOffset;\n\nvarying float vAlpha;\n\nfloat quarticInOut(float t) {\n  return t < 0.5\n    ? +8.0 * pow(t, 4.0)\n    : -8.0 * pow(t - 1.0, 4.0) + 1.0;\n}\n\nvec3 bezier(vec3 A, vec3 B, vec3 C, vec3 D, float t) {\n  vec3 E = mix(A, B, t);\n  vec3 F = mix(B, C, t);\n  vec3 G = mix(C, D, t);\n\n  vec3 H = mix(E, F, t);\n  vec3 I = mix(F, G, t);\n\n  vec3 P = mix(H, I, t);\n\n  return P;\n}\n\nvec3 bezier(vec3 A, vec3 B, vec3 C, vec3 D, vec3 E, float t) {\n  vec3 A1 = mix(A, B, t);\n  vec3 B1 = mix(B, C, t);\n  vec3 C1 = mix(C, D, t);\n  vec3 D1 = mix(D, E, t);\n\n  vec3 A2 = mix(A1, B1, t);\n  vec3 B2 = mix(B1, C1, t);\n  vec3 C2 = mix(C1, D1, t);\n\n  vec3 A3 = mix(A2, B2, t);\n  vec3 B3 = mix(B2, C2, t);\n  \n  vec3 P = mix(A3, B3, t);\n\n  return P;\n}\n\nvec3 bezier(vec3 A, vec3 B, vec3 C, vec3 D, vec3 E, vec3 F, float t) {\n  vec3 A1 = mix(A, B, t);\n  vec3 B1 = mix(B, C, t);\n  vec3 C1 = mix(C, D, t);\n  vec3 D1 = mix(D, E, t);\n  vec3 E1 = mix(E, F, t);\n\n  vec3 A2 = mix(A1, B1, t);\n  vec3 B2 = mix(B1, C1, t);\n  vec3 C2 = mix(C1, D1, t);\n  vec3 D2 = mix(D1, E1, t);\n\n  vec3 A3 = mix(A2, B2, t);\n  vec3 B3 = mix(B2, C2, t);\n  vec3 C3 = mix(C2, D2, t);\n\n  vec3 A4 = mix(A3, B3, t);\n  vec3 B4 = mix(B3, C3, t);\n  \n  vec3 P = mix(A4, B4, t);\n\n  return P;\n}\n\nvec3 bezier(vec3 A, vec3 B, vec3 C, vec3 D, vec3 E, vec3 F, vec3 G, float t) {\n  vec3 A1 = mix(A, B, t);\n  vec3 B1 = mix(B, C, t);\n  vec3 C1 = mix(C, D, t);\n  vec3 D1 = mix(D, E, t);\n  vec3 E1 = mix(E, F, t);\n  vec3 F1 = mix(F, G, t);\n\n  vec3 A2 = mix(A1, B1, t);\n  vec3 B2 = mix(B1, C1, t);\n  vec3 C2 = mix(C1, D1, t);\n  vec3 D2 = mix(D1, E1, t);\n  vec3 E2 = mix(E1, F1, t);\n\n  vec3 A3 = mix(A2, B2, t);\n  vec3 B3 = mix(B2, C2, t);\n  vec3 C3 = mix(C2, D2, t);\n  vec3 D3 = mix(D2, E2, t);\n\n  vec3 A4 = mix(A3, B3, t);\n  vec3 B4 = mix(B3, C3, t);\n  vec3 C4 = mix(C3, D3, t);\n\n  vec3 A5 = mix(A4, B4, t);\n  vec3 B5 = mix(B4, C4, t);\n  \n  vec3 P = mix(A5, B5, t);\n\n  return P;\n}\n\nvoid main() {    \n\t#include <color_vertex>\n\n\t// animate along curve and loop\n\tfloat t = quarticInOut(fract((time * speed + timeOffset)));\n\n\tvec3 pos = position;\n\n\t#ifdef USE_CURVE\n\t\tpos =  bezier(curveStart, curveCtrl1, curveCtrl2, curveEnd, t);\n\t#endif\n\n\tvec3 transformed = vec3( pos );\n\n\t// visible near visibleIndex\n\tfloat dist = distance(index, visibleIndex);\n\tvAlpha = smoothstep(maxIndexDistance * 0.75, 0.0, dist); // show after lines draw in (* 0.75)\n\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",t.fragmentShader="#define GLSLIFY 1\nuniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nuniform float radius;\nuniform float visibleIndex;\nuniform float maxIndexDistance;\n\nvarying vec3 vViewPosition;\nvarying float vAlpha;\n\n#define V0 vec3(0.0)\n\nvoid main() {\n\tif(vAlpha <= 0.05){\n\t\tdiscard;\n\t\treturn;\n\t}\n\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\t\n\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a * vAlpha );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",this.particleUniforms=t.uniforms};const H=new rs(A,F);this.mesh.add(H),this.materials=[g,F],this.spikes=T,this.spikeIntersects=p,this.particles=H,this.spikes.renderOrder=3,this.particles.renderOrder=4}getDensities(){const{data:t,maxAmount:e=1e3,radius:n}=this.props,r=new S,s=[],a=[];for(let h=0;h<e;h++){const e=t[h],{gop:o}=e,l=o;l&&l.lat&&l.lon&&(Ll(l.lat,l.lon,n,r),s.push((new S).copy(r)),a.push(0))}let o=99999,l=-1;return a.forEach((t=>{t<o?o=t:t>l&&(l=t)})),{densityValues:a,minDensity:o,maxDensity:l}}setHighlightIndex(t){this.spikeUniforms&&this.spikeUniforms.highlightIndex.value!==t&&(this.spikeUniforms.highlightIndex.value=t)}update(t){if(this.spikeUniforms&&this.particleUniforms){const{maxAmount:e,maxIndexDistance:n}=this.props;this.spikeUniforms&&(this.spikeUniforms.visibleIndex.value=t),this.particleUniforms&&(this.particleUniforms.visibleIndex.value=t);const r=Pl(t-n|0,0,e),s=2*n|0,a=Pl(r+s,0,e);this.spikes.count=a,this.particles.geometry.setDrawRange(r,s)}}dispose(){this.mesh&&El(this.mesh,Sl),this.mesh&&this.mesh.parent&&this.mesh.parent.remove(this.mesh),this.props=null,this.mesh=null,this.spikeUniforms=null,this.particleUniforms=null,this.materials=null,this.spikes=null,this.particles=null}}class Zl{constructor(t){this.props=t,this.init()}init(){const{data:t,radius:e=1,camera:n,maxAmount:r=t.length,maxIndexDistance:s,visibleIndex:a,colors:o}=this.props,{parentNode:l,lineWidth:h,pixelRatio:c}=vl;this.mesh=new nr,this.isAnimating=[],this.animatingLandingsOut=[],this.landings=[],this.lineMeshes=[],this.lineHitMeshes=[],this.highlightedMesh,this.colors=o,this.landingGeo=new os(.35,8),this.TUBE_RADIUS_SEGMENTS=3,this.HIT_DETAIL_FRACTION=4,this.DATA_INCREMENT_SPEED=1.5,this.PAUSE_LENGTH_FACTOR=2,this.MIN_PAUSE=3e3,this.visibleIndex=0,this.lineAnimationSpeed=600;const u=new S,d=new S;this.tubeMaterial=new Qt({blending:2,opacity:.95,transparent:!0,color:this.colors.mergedPrColor}),this.highlightMaterial=new Qt({opacity:1,transparent:!1,color:this.colors.mergedPrColorHighlight}),this.hiddenMaterial=new Qt({visible:!1});for(let y=0;y<r;y++){const{gop:n,gm:r}=t[y],s=n,a=r,o=Ll(s.lat,s.lon,e),l=Ll(a.lat,a.lon,e),h=o.distanceTo(l);if(h>1.5){let t;t=Cl(h,0,2*e,1,h>1.85*e?3.25:h>1.4*e?2.3:1.5);const n=Tl(s.lat,s.lon,a.lat,a.lon),r=Ll(n[0],n[1],e*t);u.copy(r),d.copy(r);const c=Cl(h,10,30,.2,.15),p=Cl(h,10,30,.8,.85);t=Cl(h,0,2*e,1,1.7);const g=new Oa(o,u,d,l);g.getPoint(c,u),g.getPoint(p,d),u.multiplyScalar(t),d.multiplyScalar(t);const _=new Oa(o,u,d,l),E=Ll(a.lat,a.lon,e+y/1e4),T=Ll(a.lat,a.lon,e+5);this.landings.push({pos:E,lookAt:T});const A=20+parseInt(_.getLength()),C=new Vs(_,A,.08,this.TUBE_RADIUS_SEGMENTS,!1),P=new Vs(_,parseInt(A/this.HIT_DETAIL_FRACTION),.6,this.TUBE_RADIUS_SEGMENTS,!1);C.setDrawRange(0,0),P.setDrawRange(0,0);const R=new Pe(C,this.tubeMaterial),I=new Pe(P,this.hiddenMaterial);I.name="lineMesh",R.userData={dataIndex:y},I.userData={dataIndex:y,lineMeshIndex:this.lineMeshes.length},this.lineMeshes.push(R),this.lineHitMeshes.push(I)}}const{width:p,height:g}=l.getBoundingClientRect()}resetHighlight(){null!=this.highlightedMesh&&(this.highlightedMesh.material=this.tubeMaterial,this.highlightedMesh=null)}setHighlightObject(t){const e=parseInt(t.userData.lineMeshIndex),n=this.lineMeshes[e];n!=this.highlightedMesh&&(n.material=this.highlightMaterial,this.resetHighlight(),this.highlightedMesh=n)}update(t=.01,e){let n=parseInt(this.visibleIndex+t*this.DATA_INCREMENT_SPEED);n>=this.lineMeshes.length&&(n=0,this.visibleIndex=0),n>this.visibleIndex&&this.isAnimating.push(this.animatedObjectForIndex(n));let r=[],s=[];for(const a of this.isAnimating){const e=a.line.geometry.index.count,n=a.line.geometry.drawRange.count+t*this.lineAnimationSpeed;let s=a.line.geometry.drawRange.start+t*this.lineAnimationSpeed;if(n>=e&&s<e&&this.animateLandingIn(a),n>=e*this.PAUSE_LENGTH_FACTOR+this.MIN_PAUSE&&s<e){if(a.line==this.highlightedMesh){r.push(a);continue}s=this.TUBE_RADIUS_SEGMENTS*Math.ceil(s/this.TUBE_RADIUS_SEGMENTS);const t=this.TUBE_RADIUS_SEGMENTS*Math.ceil(s/this.HIT_DETAIL_FRACTION/this.TUBE_RADIUS_SEGMENTS);a.line.geometry.setDrawRange(s,n),a.lineHit.geometry.setDrawRange(t,n/this.HIT_DETAIL_FRACTION),r.push(a)}else s<e?(a.line.geometry.setDrawRange(0,n),a.lineHit.geometry.setDrawRange(0,n/this.HIT_DETAIL_FRACTION),r.push(a)):this.endAnimation(a)}for(let a=0;a<this.animatingLandingsOut.length;a++)this.animateLandingOut(this.animatingLandingsOut[a])&&s.push(this.animatingLandingsOut[a]);this.isAnimating=r,this.animatingLandingsOut=s,this.visibleIndex=this.visibleIndex+t*this.DATA_INCREMENT_SPEED}endAnimation(t){t.line.geometry.setDrawRange(0,0),t.lineHit.geometry.setDrawRange(0,0),this.mesh.remove(t.line),this.mesh.remove(t.lineHit),t.line=null,t.lineHit=null,this.animatingLandingsOut.push(t)}animateLandingIn(t){if(t.dot.scale.x>.99){if(null==t.dotFade)return;return t.dotFade.material.opacity=0,this.mesh.remove(t.dotFade),Sl(t.dotFade),void(t.dotFade=null)}const e=t.dot.scale.x+.06*(1-t.dot.scale.x);t.dot.scale.set(e,e,1);const n=t.dotFade.scale.x+.06*(1-t.dotFade.scale.x);t.dotFade.scale.set(n,n,1),t.dotFade.material.opacity=1-n}animateLandingOut(t){if(t.dot.scale.x<.01)return this.mesh.remove(t.dot),t.dot=null,Sl(t.dot),null!=t.dotFade&&(this.mesh.remove(t.dotFade),Sl(t.dotFade),t.dotFade=null),!1;const e=t.dot.scale.x-.15*t.dot.scale.x;return t.dot.scale.set(e,e,1),!0}animatedObjectForIndex(t){const e=this.lineMeshes[t];this.mesh.add(e);const n=this.lineHitMeshes[t];this.mesh.add(n);const r=this.landingFromPositionData(this.landings[t]);this.mesh.add(r);const s=this.fadingLandingMeshFromMesh(r);return this.mesh.add(s),{line:e,lineHit:n,dot:r,dotFade:s}}landingFromPositionData(t){const e=new Pe(this.landingGeo,this.tubeMaterial);return e.position.set(t.pos.x,t.pos.y,t.pos.z),e.lookAt(t.lookAt.x,t.lookAt.y,t.lookAt.z),e.scale.set(0,0,1),e}fadingLandingMeshFromMesh(t){const e=t.clone();return e.geometry=new Hs(1.55,1.8,16),e.material=new Qt({color:this.colors.mergedPrColor,blending:2,transparent:!0,opacity:0,alphaTest:.02,visible:!0}),e.scale.set(0,0,1),e.renderOrder=5,e}dispose(){this.mesh&&El(this.mesh,Sl),this.mesh&&this.mesh.parent&&this.mesh.parent.remove(this.mesh),this.mesh=null}}function Rl(){const t=navigator.connection;void 0===t||"slow-2g"!==t.effectiveType&&"2g"!==t.effectiveType?function(){Il();const t=document.querySelector(".js-webgl-globe");if(!t)return;const e=window.innerWidth<=500?".js-globe-fallback-video-small":".js-globe-fallback-video",n=t.querySelector(e);n.removeAttribute("hidden"),n.play()}():function(){Il();const t=document.querySelector(".js-webgl-globe");t&&t.querySelector(".js-globe-fallback-image").removeAttribute("hidden")}()}function Il(){const t=document.querySelector(".js-webgl-globe");if(!t)return;if(!t.hasChildNodes())return;const e=t.parentNode;e&&e.classList.remove("home-globe-container-webgl");const n=t.querySelector(".js-webgl-globe-loading");n&&t.removeChild(n);const r=t.querySelector(".js-globe-canvas");r&&t.removeChild(r);const s=t.querySelector(".js-globe-popup");s&&t.removeChild(s)}class $l{constructor(t){this.props=t,this.init(),this.now=new Date,this.cardHeader="",this.units={day:864e5,hour:36e5,minute:6e4,second:1e3},this.cardOffset={x:10,y:16}}init(){const t=document.querySelector(this.props.parentSelector||"body"),{basePath:e,imagePath:n}=vl;this.isVisible=!1,this.element=function(t,e,n){t=t||"div";const r=document.createElement(t);return e&&e.forEach((t=>{r.classList.add(t)})),n&&(r.innerHTML=n),r}("div",["data-info","position-absolute","top-0","left-0","rounded","text-mono","f6","py-3","pl-2","pr-5","z-3","js-globe-popup","text-white","d-none"],`\n      <a class='js-globe-popover-card no-underline d-flex flex-row flex-items-start'>\n\n        <div class='pr-2 pt-1 pl-2'>\n          <img src='${e}${n}pull-request-icon.svg' aria-hidden='true' class='js-globe-popup-icon-pr' loading='lazy'>\n          <img src='${e}${n}north-star.svg' aria-hidden='true' class='js-globe-popup-icon-acv mt-n1 d-none' width='24' loading='lazy'>\n        </div>\n\n        <div>\n          <div class='f4 color-text-white js-globe-popover-header'>#34234 facebook/react</div>\n          <div style='color: #959da5' class='js-globe-popover-body'></div>\n        </div>\n\n      </a>\n    `),this.element.style.maxWidth="450px",this.element.style.backgroundColor="rgba(0,0,0, 0.4)",this.element.style.backdropFilter="blur(10px)",this.element.style.webkitBackdropFilter="blur(10px)",t.appendChild(this.element),this.card=this.element.querySelector(".js-globe-popover-card"),this.header=this.card.querySelector(".js-globe-popover-header"),this.body=this.card.querySelector(".js-globe-popover-body")}update(t,e){const n=t.x+e.x+this.cardOffset.x,r=t.y+e.y+this.cardOffset.y,s=this.element.getBoundingClientRect(),a=Math.min(n,window.innerWidth-s.width-this.cardOffset.x),o=r+s.height,l=t.y-s.height-this.cardOffset.y/2+e.y,h=o>window.innerHeight+e.y?l:r;this.element.style.transform=`translate(${a}px, ${h}px)`}setInfo(t){const{user_opened_location:e,user_merged_location:n,language:r,type:s,header:a,body:o,name_with_owner:l,pr_id:h,time:c,url:u}=t,d=`#${h} ${l}`;if(this.cardHeader==d||this.cardHeader==a)return;this.cardHeader=d;const p=this.shouldShowTime(c)?this.relativeTime(c):"";null!==u&&(this.card.href=u),s===ol?(this.header.textContent=d,this.body.textContent="",this.body.insertAdjacentHTML("beforeend",`Opened in ${e},\nmerged ${p} in ${n}`),null!==r&&this.body.prepend(r,this.colorDotForLanguage(r)),this.showPRIcon()):s===al?(this.header.textContent=d,this.body.textContent="",this.body.insertAdjacentHTML("beforeend",`Opened ${p} in ${e}`),null!==r&&this.body.prepend(r,this.colorDotForLanguage(r)),this.showPRIcon()):s===ll&&(this.header.textContent=a,this.body.innerText=o,this.showGHIcon())}relativeTime(t){const e=new Date(t).toISOString();return`<time-ago datetime="${e}">${e}</time-ago>`}shouldShowTime(t){return null!==t&&this.now-t<this.units.day}showPRIcon(){document.querySelector(".js-globe-popup-icon-pr").classList.remove("d-none"),document.querySelector(".js-globe-popup-icon-acv").classList.add("d-none")}showGHIcon(){document.querySelector(".js-globe-popup-icon-pr").classList.add("d-none"),document.querySelector(".js-globe-popup-icon-acv").classList.remove("d-none")}show(){if(1==this.isVisible)return;const{domElement:t,controls:e}=this.props;t.classList.add("cursor-pointer"),this.element.classList.remove("d-none"),this.element.classList.add("d-block"),e.autoRotationSpeedScalarTarget=0,this.isVisible=!0}hide(){if(0==this.isVisible)return;const{domElement:t,controls:e}=this.props;t.classList.remove("cursor-pointer"),this.element.classList.remove("d-block"),this.element.classList.add("d-none"),e.autoRotationSpeedScalarTarget=1,this.isVisible=!1}dispose(){this.element&&this.element.parentNode&&document.body.removeChild(this.element),this.element=null,this.props=null,this.icon=null,this.dataElement=null,this.openedLocationElement=null,this.mergedLocationElement=null,this.languageElement=null}colorDotForLanguage(t){const e=document.createElement("span");return e.style.color=this.colorForLanguage(t),e.textContent=" • ",e}colorForLanguage(t){return{ActionScript:"#882B0F",AMPL:"#E6EFBB","API Blueprint":"#2ACCA8","Apollo Guidance Computer":"#0B3D91",AppleScript:"#101F1F",Arc:"#aa2afe","ASP.NET":"#9400ff",Assembly:"#6E4C13",Batchfile:"#C1F12E",C:"#555555","C#":"#178600","C++":"#f34b7d",Clojure:"#db5855",CoffeeScript:"#244776",ColdFusion:"#ed2cd6","ColdFusion CFC":"#ed2cd6","Common Lisp":"#3fb68b","Component Pascal":"#B0CE4E",Crystal:"#000100",CSON:"#244776",CSS:"#563d7c",Dart:"#00B4AB",Dockerfile:"#384d54",EJS:"#a91e50",Elixir:"#6e4a7e",Elm:"#60B5CC","Emacs Lisp":"#c065db",EmberScript:"#FFF4F3",EQ:"#a78649",Erlang:"#B83998","Game Maker Language":"#71b417",GAML:"#FFC766",Glyph:"#c1ac7f",Go:"#00ADD8",GraphQL:"#e10098",Haml:"#ece2a9",Handlebars:"#f7931e",Harbour:"#0e60e3",Haskell:"#5e5086",HTML:"#e34c26",J:"#9EEDFF",Java:"#b07219",JavaScript:"#f1e05a",Julia:"#a270ba",Kotlin:"#F18E33",Less:"#1d365d",Lex:"#DBCA00",LLVM:"#185619",Lua:"#000080",Makefile:"#427819",Markdown:"#083fa1",MATLAB:"#e16737",Mercury:"#ff2b2b",Metal:"#8f14e9",Nim:"#ffc200",Nix:"#7e7eff",NumPy:"#9C8AF9","Objective-C":"#438eff","Objective-C++":"#6866fb",Pan:"#cc0000",Pascal:"#E3F171",Pawn:"#dbb284",Perl:"#0298c3",PHP:"#4F5D95",PLSQL:"#dad8d8",PostScript:"#da291c",PowerBuilder:"#8f0f8d",PowerShell:"#012456",Prisma:"#0c344b",Processing:"#0096D8",Puppet:"#302B6D",Python:"#3572A5",R:"#198CE7",Reason:"#ff5847",Ruby:"#701516",Rust:"#dea584",Sass:"#a53b70",Scala:"#c22d40",Scheme:"#1e4aec",SCSS:"#c6538c",Shell:"#89e051",Svelte:"#ff3e00",SVG:"#ff9900",Swift:"#ffac45","TI Program":"#A0AA87",Turing:"#cf142b",Twig:"#c1d026",TypeScript:"#2b7489",Uno:"#9933cc",UnrealScript:"#a54c4d",Vala:"#fbe5cd","Vim script":"#199f4b","Visual Basic .NET":"#945db7",Vue:"#41586f",wdl:"#42f1f4",WebAssembly:"#04133b",YAML:"#cb171e"}[t]}}class th{constructor(t){this.handleResize=this.handleResize.bind(this),this.handlePause=this.handlePause.bind(this),this.handleResume=this.handleResume.bind(this),this.handleMouseMove=this.handleMouseMove.bind(this),this.setDragging=this.setDragging.bind(this),this.update=this.update.bind(this),this.hasLoaded=!1,this.initBase(t||document.body),this.initScene(),this.addListeners(),gl.on(pl,this.handlePause),gl.on(ml,this.handleResume)}initBase(t){const{width:e,height:n,x:r,y:s}=vl.parentNode.getBoundingClientRect();this.parentNodeRect={width:e,height:n,x:r,y:s},this.scene=new cr,this.camera=new Be(20,e/n,170,260),this.renderer=new ir({powerPreference:"high-performance",alpha:!0,preserveDrawingBuffer:!1}),this.then=Date.now()/1e3,this.fpsWarnings=0,this.fpsWarningThreshold=50,this.fpsTarget=60,this.fpsEmergencyThreshold=12,this.fpsTargetSensitivity=.875,this.fpsStorage=[],this.worldDotRows=200,this.worldDotSize=.095,this.renderQuality=4,this.renderer.setPixelRatio(vl.pixelRatio||1),this.renderer.setSize(e,n),t.appendChild(this.renderer.domElement),this.renderer.domElement.classList.add("webgl-canvas"),this.renderer.domElement.classList.add("js-globe-canvas");const a=new oo(16777215,.8);this.scene.add(a),this.parentContainer=new nr,this.parentContainer.name="parentContainer";let o=sl;const l=(new Date).getTimezoneOffset()||0;o.y=sl.y+Math.PI*(l/720),this.parentContainer.rotation.copy(o),this.scene.add(this.parentContainer),this.haloContainer=new nr,this.haloContainer.name="haloContainer",this.scene.add(this.haloContainer),this.container=new nr,this.container.name="container",this.parentContainer.add(this.container),this.camera.position.set(0,0,220),this.scene.add(this.camera),this.clock=new bo,this.mouse=new S(0,0,.5),this.mouseScreenPos=new m(-9999,-9999),this.raycaster=new Oo,this.raycaster.far=260,this.paused=!1,this.canvasOffset={x:0,y:0},this.updateCanvasOffset(),this.highlightMaterial=new Qt({opacity:1,transparent:!1,color:hl}),this.handleResize(),this.startUpdating()}initScene(){const{isMobile:t,globeRadius:e=rl,assets:{textures:{globeDiffuse:n,globeAlpha:r}}}=vl;this.radius=e,this.light0=new Ka(ul,12,120,.3,0,1.1),this.light1=new ao(11124735,3),this.light3=new Ka(dl,5,75,.5,0,1.25),this.light0.target=this.parentContainer,this.light1.target=this.parentContainer,this.light3.target=this.parentContainer,this.scene.add(this.light0,this.light1,this.light3),this.positionContainer(),this.shadowPoint=(new S).copy(this.parentContainer.position).add(new S(.7*this.radius,.3*-this.radius,this.radius)),this.highlightPoint=(new S).copy(this.parentContainer.position).add(new S(1.5*-this.radius,1.5*-this.radius,0)),this.frontPoint=(new S).copy(this.parentContainer.position).add(new S(0,0,this.radius));const s=new kl({radius:this.radius,detail:55,renderer:this.renderer,shadowPoint:this.shadowPoint,shadowDist:1.5*this.radius,highlightPoint:this.highlightPoint,highlightColor:5339494,highlightDist:5,frontPoint:this.frontPoint,frontHighlightColor:2569853,waterColor:1513012,landColorFront:hl,landColorBack:hl});this.container.add(s.mesh),this.globe=s;const a=new Gs(rl,45,45),o=new Oe({uniforms:{c:{type:"f",value:.7},p:{type:"f",value:15},glowColor:{type:"c",value:new Jt(1844322)},viewVector:{type:"v3",value:new S(0,0,220)}},vertexShader:"#define GLSLIFY 1\nuniform vec3 viewVector;\nuniform float c;\nuniform float p;\nvarying float intensity;\nvarying float intensityA;\nvoid main() \n{\n  vec3 vNormal = normalize( normalMatrix * normal );\n  vec3 vNormel = normalize( normalMatrix * viewVector );\n  intensity = pow( c - dot(vNormal, vNormel), p );\n  intensityA = pow( 0.63 - dot(vNormal, vNormel), p );\n  \n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"#define GLSLIFY 1\nuniform vec3 glowColor;\nvarying float intensity;\nvarying float intensityA;\nvoid main()\n{\n  gl_FragColor = vec4( glowColor * intensity, 1.0 * intensityA );\n}",side:1,blending:2,transparent:!0,dithering:!0}),l=new Pe(a,o);l.scale.multiplyScalar(1.15),l.rotateX(.03*Math.PI),l.rotateY(.03*Math.PI),l.renderOrder=3,this.haloContainer.add(l),this.dragging=!1,this.rotationSpeed=.05,this.raycastIndex=0,this.raycastTrigger=10,this.raycastTargets=[],this.intersectTests=[],this.controls=new Xl({object:this.container,objectContainer:this.parentContainer,domElement:this.renderer.domElement,setDraggingCallback:this.setDragging,rotateSpeed:t?1.5:3,autoRotationSpeed:this.rotationSpeed,easing:.12,maxRotationX:.5,camera:this.camera})}initDataObjects(t){const e={openPrColor:ul,openPrParticleColor:6137337,mergedPrColor:dl,mergedPrColorHighlight:hl};this.buildWorldGeometry(),this.addArcticCodeVault(),this.maxAmount=t.length,this.maxIndexDistance=60,this.indexIncrementSpeed=15,this.visibleIndex=60,this.openPrEntity=new Yl({data:t,maxAmount:this.maxAmount,radius:this.radius,camera:this.camera,maxIndexDistance:this.maxIndexDistance,indexIncrementSpeed:this.indexIncrementSpeed,visibleIndex:this.visibleIndex,colors:e}),this.mergedPrEntity=new Zl({data:t,maxAmount:this.maxAmount,radius:this.radius,camera:this.camera,maxIndexDistance:this.maxIndexDistance,visibleIndex:this.visibleIndex,colors:e,mouse:this.mouse});const{width:n,height:r}=vl.parentNode.getBoundingClientRect(),s=850/r*1;this.containerScale=s,this.dataInfo=new $l({parentSelector:".js-webgl-globe-data",domElement:this.renderer.domElement,controls:this.controls}),this.dataItem={},this.intersectTests.push(this.globe.meshFill),this.intersectTests.push(this.openPrEntity.spikeIntersects),this.intersectTests.push(...this.mergedPrEntity.lineHitMeshes),this.intersects=[]}monitorFps(){if(1==this.renderQuality)return;const t=Date.now()/1e3,e=t-this.then;this.then=t;const n=parseInt(1/e+.5);this.fpsStorage.push(n),this.fpsStorage.length>10&&this.fpsStorage.shift();const r=this.fpsStorage.reduce(((t,e)=>t+e))/this.fpsStorage.length;r<this.fpsTarget*this.fpsTargetSensitivity&&this.fpsStorage.length>9?(this.fpsWarnings++,this.fpsWarnings>this.fpsWarningThreshold&&(this.renderQuality=Math.max(this.renderQuality-1,1),this.fpsWarnings=0,this.updateRenderQuality(),this.fpsStorage=[])):this.fpsStorage.length>9&&r<this.fpsEmergencyThreshold?(this.renderQuality=1,this.initPerformanceEmergency()):this.fpsWarnings=0}updateRenderQuality(){4==this.renderQuality?this.initRegularQuality():3==this.renderQuality?this.initMediumQuality():2==this.renderQuality?this.initLowQuality():1==this.renderQuality&&this.initLowestQuality()}initRegularQuality(){this.renderer.setPixelRatio(vl.pixelRatio||1),this.indexIncrementSpeed=15,this.raycastTrigger=10}initMediumQuality(){this.renderer.setPixelRatio(Math.min(vl.pixelRatio,1.85)),this.indexIncrementSpeed=13,this.raycastTrigger=12}initLowQuality(){this.renderer.setPixelRatio(Math.min(vl.pixelRatio,1.5)),this.indexIncrementSpeed=10,this.raycastTrigger=14,this.worldDotRows=180,this.worldDotSize=.1,this.resetWorldMap(),this.buildWorldGeometry()}initLowestQuality(){this.renderer.setPixelRatio(1),this.indexIncrementSpeed=5,this.raycastTrigger=16,this.worldDotRows=140,this.worldDotSize=.1,this.resetWorldMap(),this.buildWorldGeometry()}initPerformanceEmergency(){this.dispose(),Rl()}buildWorldGeometry(){const{assets:{textures:{worldMap:t}}}=vl,e=new Tt,n=this.getImageData(t.image),r=[],s=this.worldDotRows;for(let h=-90;h<=90;h+=180/s){const t=Math.cos(Math.abs(h)*xl)*rl*Math.PI*2*2;for(let s=0;s<t;s++){const a=360*s/t-180;if(!this.visibilityForCoordinate(a,h,n))continue;const o=Ll(h,a,this.radius);e.position.set(o.x,o.y,o.z);const l=Ll(h,a,this.radius+5);e.lookAt(l.x,l.y,l.z),e.updateMatrix(),r.push(e.matrix.clone())}}const a=new os(this.worldDotSize,5),o=new js({color:3818644,metalness:0,roughness:.9,transparent:!0,alphaTest:.02});o.onBeforeCompile=function(t){t.fragmentShader=t.fragmentShader.replace("gl_FragColor = vec4( outgoingLight, diffuseColor.a );","\n        gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n        if (gl_FragCoord.z > 0.51) {\n          gl_FragColor.a = 1.0 + ( 0.51 - gl_FragCoord.z ) * 17.0;\n        }\n      ")};const l=new Gr(a,o,r.length);for(let h=0;h<r.length;h++)l.setMatrixAt(h,r[h]);l.renderOrder=3,this.worldMesh=l,this.container.add(l)}resetWorldMap(){this.container.remove(this.worldMesh),Sl(this.worldMesh),this.dotMesh=null}addArcticCodeVault(){new ls(.075,.075,1.5,8),this.vaultMaterial=new Qt({blending:2,opacity:.9,transparent:!0,color:4299263}),this.vaultIsHighlighted=!1;const t=Ll(78.14,15.26,this.radius),e=Ll(78.14,15.26,this.radius+5),{basePath:n,imagePath:r}=vl,s=`${n}${r}flag.obj`;(new cl).load(s,(n=>{n.position.set(t.x,t.y,t.z),n.lookAt(e.x,e.y,e.z),n.rotateX(90*xl),n.scale.set(.1,.1,.1),n.renderOrder=3;for(const t of n.children)t.material=this.vaultMaterial,t.name="arcticCodeVault",this.arcticCodeVaultMesh=t,this.intersectTests.push(this.arcticCodeVaultMesh);this.container.add(n)}))}highlightArcticCodeVault(){if(this.vaultIsHighlighted)return;this.arcticCodeVaultMesh.material=this.highlightMaterial,this.vaultIsHighlighted=!0;const t=document.querySelector(".js-globe-aurora");if(null===t)return;t.play(),t.hidden=!1;const e=t.getAnimations();for(const n of e)return void n.reverse();t.animate([{opacity:0},{opacity:1}],{fill:"both",duration:1600,easing:"ease-in-out"})}resetArcticCodeVaultHighlight(){if(!this.vaultIsHighlighted)return;this.arcticCodeVaultMesh.material=this.vaultMaterial,this.vaultIsHighlighted=!1;const t=document.querySelector(".js-globe-aurora");if(null===t)return;const e=t.getAnimations();t.getAnimations();for(const n of e)return void n.reverse();t.animate([{opacity:1},{opacity:0}],{fill:"both",duration:1600,easing:"ease-in"}),t.pause()}visibilityForCoordinate(t,e,n){const r=4*n.width,s=parseInt((t+180)/360*n.width+.5),a=n.height-parseInt((e+90)/180*n.height-.5),o=parseInt(r*(a-1)+4*s)+3;return n.data[o]>90}getImageData(t){const e=document.createElement("canvas").getContext("2d");return e.canvas.width=t.width,e.canvas.height=t.height,e.drawImage(t,0,0,t.width,t.height),e.getImageData(0,0,t.width,t.height)}addListeners(){const t={capture:!1,passive:!0};window.addEventListener("resize",this.handleResize,t),window.addEventListener("orientationchange",this.handleResize,t),new IntersectionObserver((t=>{for(const e of t)e.isIntersecting||this.paused?e.isIntersecting&&this.paused&&(this.paused=!1,gl.emit(ml)):(this.paused=!0,gl.emit(pl))})).observe(this.renderer.domElement),this.handleClick=t=>{null===this.dataItem||null===this.dataItem.url||this.shouldCancelClick(t)||window.open(this.dataItem.url,"_blank")},this.renderer.domElement.addEventListener("mouseup",this.handleClick,t),this.handleMouseDown=t=>{this.resetInteractionIntention(t)},this.renderer.domElement.addEventListener("mousedown",this.handleMouseDown,t),this.handleTouchStart=t=>{const e=t.changedTouches[0];this.handleMouseMove(e),this.resetInteractionIntention(e),t.preventDefault()},this.renderer.domElement.addEventListener("touchstart",this.handleTouchStart,{capture:!1}),this.handleTouchMove=t=>{this.shouldCancelClick(t.changedTouches[0])&&(this.mouse={x:-9999,y:-9999},t.preventDefault())},this.renderer.domElement.addEventListener("touchmove",this.handleTouchMove,{capture:!1}),this.renderer.domElement.addEventListener("mousemove",this.handleMouseMove,t)}removeListeners(){window.removeEventListener("resize",this.handleResize),window.removeEventListener("orientationchange",this.handleResize),this.renderer.domElement.removeEventListener("mousemove",this.handleMouseMove),this.renderer.domElement.removeEventListener("mouseup",this.handleClick),this.renderer.domElement.removeEventListener("mousedown",this.handleMouseDown),this.renderer.domElement.removeEventListener("touchstart",this.handleTouchStart),this.renderer.domElement.removeEventListener("touchmove",this.handleTouchMove)}updateCanvasOffset(){const t=document.querySelector(".js-webgl-globe-data").getBoundingClientRect(),e=document.querySelector(".js-webgl-globe").getBoundingClientRect();this.canvasOffset={x:e.x-t.x,y:e.y-t.y}}resetInteractionIntention(t){this.mouseDownPos={x:t.clientX,y:t.clientY}}shouldCancelClick(t){const e=Math.abs(t.clientX-this.mouseDownPos.x);return Math.abs(t.clientY-this.mouseDownPos.y)>2||e>2}positionContainer(){const{isMobile:t}=vl,{height:e}=this.parentNodeRect,n=850/e*1;this.containerScale=n,t?this.parentContainer.position.set(0,0,0):(this.parentContainer.scale.set(n,n,n),this.parentContainer.position.set(0,0,0),this.haloContainer.scale.set(n,n,n)),this.haloContainer.position.set(0,0,-10),this.positionLights(n)}positionLights(t=1){this.light0&&(this.light0.position.set(this.parentContainer.position.x-2.5*this.radius,80,-40).multiplyScalar(t),this.light0.distance=120*t),this.light1&&this.light1.position.set(this.parentContainer.position.x-50,this.parentContainer.position.y+30,10).multiplyScalar(t),this.light2&&(this.light2.position.set(this.parentContainer.position.x-25,0,100).multiplyScalar(t),this.light2.distance=150*t),this.light3&&(this.light3.position.set(this.parentContainer.position.x+this.radius,this.radius,2*this.radius).multiplyScalar(t),this.light3.distance=75*t)}handlePause(){this.stopUpdating(),this.clock.stop()}handleResume(){this.clock.start(),this.startUpdating()}handleResize(){clearTimeout(this.resizeTimeout),this.resizeTimeout=setTimeout((()=>{const{width:t,height:e,x:n,y:r}=vl.parentNode.getBoundingClientRect();this.parentNodeRect={width:t,height:e,x:n,y:r},this.camera.aspect=t/e,this.camera.updateProjectionMatrix(),this.renderer.setSize(t,e),this.positionContainer();const s=850/e*1,a=this.radius*s;this.shadowPoint.copy(this.parentContainer.position).add(new S(.7*a,.3*-a,a)),this.globe.setShadowPoint(this.shadowPoint),this.highlightPoint.copy(this.parentContainer.position).add(new S(1.5*-a,1.5*-a,0)),this.globe.setHighlightPoint(this.highlightPoint),this.frontPoint=(new S).copy(this.parentContainer.position).add(new S(0,0,a)),this.globe.setFrontPoint(this.frontPoint),this.globe.setShadowDist(1.5*a),this.globe.setHighlightDist(5*s),this.updateCanvasOffset()}),150)}handleMouseMove(t){const{width:e,height:n,x:r,y:s}=this.parentNodeRect,a=t.clientX-r,o=t.clientY-s;this.mouse.x=a/e*2-1,this.mouse.y=-o/n*2+1,this.mouseScreenPos.set(a,o)}startUpdating(){this.stopUpdating(),this.update()}stopUpdating(){cancelAnimationFrame(this.rafID)}setDragging(t=!0){this.dragging=t}setDataInfo(t){if(!this.dataInfo)return;if(this.dataItem==t)return;this.dataItem=t;const{uol:e,uml:n,l:r,type:s,body:a,header:o,nwo:l,pr:h,ma:c,oa:u}=t;let d=c||u;d&&(d=d.replace(" ","T"),d=d.includes("Z")?d:d.concat("-08:00"),d=Date.parse(d)),l&&h&&(this.dataItem.url=`https://github.com/${l}/pull/${h}`),this.dataInfo.setInfo({user_opened_location:e,user_merged_location:n,language:r,name_with_owner:l,pr_id:h,time:d,type:s,body:a,header:o,url:this.dataItem.url})}testForDataIntersection(){const{mouse:t,raycaster:e,camera:n}=this;this.intersects.length=0,function(t,e,n,r,s,a=!1){(r=r||new Oo).setFromCamera(t,e);const o=r.intersectObjects(n,a,s);o.length>0&&o[0]}(t,n,this.intersectTests,e,this.intersects),this.intersects.length&&this.intersects[0].object===this.globe.meshFill&&(this.intersects.length=0)}transitionIn(){return new Promise((()=>{this.container.add(this.openPrEntity.mesh),this.container.add(this.mergedPrEntity.mesh)}))}handleUpdate(){if(this.monitorFps(),null===this.clock)return;const t=this.clock.getDelta();if(this.controls&&this.controls.update(t),this.visibleIndex+=t*this.indexIncrementSpeed,this.visibleIndex>=this.maxAmount-60&&(this.visibleIndex=60),this.openPrEntity&&this.openPrEntity.update(this.visibleIndex),this.mergedPrEntity&&this.mergedPrEntity.update(t,this.visibleIndex),!this.dataInfo)return void this.render();const{raycaster:e,camera:n,mouseScreenPos:r}=this;let s,a=!1;if(this.raycastIndex%this.raycastTrigger==0){if(this.testForDataIntersection(),this.intersects.length){this.radius,this.containerScale;for(let t=0;t<this.intersects.length&&!a;t++){const{instanceId:e,object:n}=this.intersects[t];if("lineMesh"===n.name){s=this.setMergedPrEntityDataItem(n),a=!0;break}if(n===this.openPrEntity.spikeIntersects&&this.shouldShowOpenPrEntity(e)){s=this.setOpenPrEntityDataItem(e),a=!0;break}if("arcticCodeVault"===n.name){s={header:"Arctic Code Vault",body:"Svalbard • Cold storage of the work of 3,466,573 open source developers. For safe keeping.\nLearn more →",type:ll,url:"https://archiveprogram.github.com"},this.highlightArcticCodeVault(),a=!0;break}}}a&&s?(this.setDataInfo(s),this.dataInfo.show()):(this.dataInfo.hide(),this.openPrEntity.setHighlightIndex(-9999),this.mergedPrEntity.resetHighlight(),this.resetArcticCodeVaultHighlight(),this.dataItem=null,vl.isMobile&&(this.mouse={x:-9999,y:-9999}))}this.dragging&&(this.dataInfo.hide(),this.openPrEntity.setHighlightIndex(-9999),this.mergedPrEntity.resetHighlight(),this.resetArcticCodeVaultHighlight()),this.dataInfo.isVisible&&this.dataInfo.update(r,this.canvasOffset),this.raycastIndex++,this.raycastIndex>=this.raycastTrigger&&(this.raycastIndex=0),this.render()}update(){this.handleUpdate(),this.hasLoaded||this.sceneDidLoad(),this.rafID=requestAnimationFrame(this.update)}render(){this.renderer.render(this.scene,this.camera)}shouldShowMergedPrEntity(t,e){const n=t.geometry.attributes.index.array[e];return n>=this.visibleIndex-this.maxIndexDistance&&n<=this.visibleIndex+this.maxIndexDistance}sceneDidLoad(){this.hasLoaded=!0;const t=document.querySelector(".js-webgl-globe-loading");if(!t)return;const e={fill:"both",duration:600,easing:"ease"};this.renderer.domElement.animate([{opacity:0,transform:"scale(0.8)"},{opacity:1,transform:"scale(1)"}],e),t.animate([{opacity:1,transform:"scale(0.8)"},{opacity:0,transform:"scale(1)"}],e).addEventListener("finish",(()=>{t.remove()}))}setMergedPrEntityDataItem(t){this.mergedPrEntity.setHighlightObject(t),this.openPrEntity.setHighlightIndex(-9999);const e=this.mergedPrEntity.props.data[parseInt(t.userData.dataIndex)];return e.type=ol,e}shouldShowOpenPrEntity(t){return t>=this.visibleIndex-this.maxIndexDistance&&t<=this.visibleIndex+this.maxIndexDistance}setOpenPrEntityDataItem(t){this.openPrEntity.setHighlightIndex(t),this.mergedPrEntity.resetHighlight();const e=this.openPrEntity.props.data[t];return e.type=al,e}dispose(){this.stopUpdating(),this.removeListeners(),gl.off(pl,this.handlePause),gl.off(ml,this.handleResume),this.renderer&&this.renderer.domElement&&this.renderer.domElement.parentNode&&this.renderer.domElement.parentNode.removeChild(this.renderer.domElement),this.controls&&this.controls.dispose(),this.globe&&this.globe.dispose(),this.openPrEntity&&this.openPrEntity.dispose(),this.mergedPrEntity&&this.mergedPrEntity.dispose(),this.dataInfo&&this.dataInfo.dispose(),this.scene=null,this.camera=null,this.renderer=null,this.parentContainer=null,this.container=null,this.clock=null,this.mouse=null,this.mouseScreenPos=null,this.raycaster=null,this.paused=null,this.radius=null,this.light0=null,this.light1=null,this.light2=null,this.light3=null,this.shadowPoint=null,this.highlightPoint=null,this.frontPoint=null,this.globe=null,this.dragging=null,this.rotationSpeed=null,this.raycastIndex=null,this.raycastTrigger=null,this.raycastTargets=null,this.intersectTests=null,this.controls=null,this.maxAmount=null,this.maxIndexDistance=null,this.indexIncrementSpeed=null,this.visibleIndex=null,this.openPrEntity=null}}class nh{constructor(){this.reset()}reset(){clearInterval(this.interval),this.loadInfo={},this.assets={}}load(t,e){return this.reset(),this.progressCallback=e,new Promise((e=>{if(!t.length)return void e(null);const n=[];t.forEach((t=>{"[object Array]"!==Object.prototype.toString.call(t.url)&&(t.url.indexOf(".png")>-1||t.url.indexOf(".jpg")>-1||t.url.indexOf(".jpeg")>-1||t.url.indexOf(".gif")>-1?(this.assets.textures=this.assets.textures||{},n.push(this.loadTexture(t))):t.url.indexOf(".json")>-1&&0===t.type&&(this.assets.data=this.assets.data||{},n.push(this.loadData(t))))})),this.interval=setInterval(this.update,1e3/30),Promise.all(n).then((()=>{e({assets:this.assets,loader:this})}))}))}loadData(t){this.loadInfo[t.id]={loaded:0,total:0};const e=new XMLHttpRequest;let n=!1;return new Promise(((r,s)=>{const a=()=>{n=!0,this.assets.data[t.id]=null,this.loadInfo[t.id].loaded=this.loadInfo[t.id].total=1,s(new Error("loadData error"))};e.addEventListener("progress",(e=>{this.loadInfo[t.id].loaded=e.loaded,this.loadInfo[t.id].total=e.total})),e.overrideMimeType("application/json"),e.open("GET",t.url,!0),e.onreadystatechange=()=>{4===e.readyState&&200===e.status?(this.assets.data[t.id]=JSON.parse(e.responseText),this.loadInfo[t.id].loaded=this.loadInfo[t.id].total,r(this.assets.data[t.id])):404!==e.status||n||a()},e.onerror=a,e.send()}))}loadTexture(t){const e=new wa;return this.loadInfo[t.id]={loaded:0,total:0},new Promise(((n,r)=>{e.load(t.url,(e=>{this.loadInfo[t.id].loaded=this.loadInfo[t.id].total,this.assets.textures[t.id]=e,n()}),(e=>{this.loadInfo[t.id].loaded=e.loaded,this.loadInfo[t.id].total=e.total}),(t=>{r(t)}))}))}update(){if("function"==typeof this.progressCallback){let t=0,e=0;for(const n in this.loadInfo)this.loadInfo[n].loaded&&(t+=this.loadInfo[n].loaded),this.loadInfo[n].total&&(e+=this.loadInfo[n].total);this.progressCallback&&this.progressCallback(t,e)}}dispose(){clearInterval(this.interval),this.interval=null,this.loadInfo=null,this.assets=null,this.progressCallback=null}}async function Dl(t=""){const e=await fetch(t,{method:"GET",mode:"no-cors"});if(200!==e.status)throw new Error(`WebGL Globe: Failed to load data.json (status: ${e.status})`);return e.json()}class rh{constructor(t){this.init=this.init.bind(this),this.handleVisibilityChange=this.handleVisibilityChange.bind(this),function(t){for(const[e,n]of Object.entries(t))vl[e]=n}({app:this,env:"production",isMobile:/iPhone|iPad|iPod|Android|BlackBerry|BB10/i.test(navigator.userAgent),pixelRatio:window.devicePixelRatio||1,...t})}loadAssets(){const{basePath:t,imagePath:e}=vl,n=[{url:`${t}${e}map.png`,id:"worldMap"}],r=new nh;return new Promise(((t,e)=>{r.load(n).then((({assets:e})=>{t(e),r.dispose()})).catch((t=>e(t)))}))}async loadData(){try{const t=await Dl(vl.dataPath+"data.json");if(!t||0===t.length)throw new Error("WebGL Globe: data.json response was empty");return t}catch{return await this.loadFallbackData()}}async loadFallbackData(){try{const t=await Dl(vl.dataPath+"fallback.json");if(!t||0===t.length)throw new Error("WebGL Globe: fallback.json response was empty");return t}catch(t){throw new Error(t)}}filterData(t){const e=[];for(let s=0;s<t.length;s++){const n=t[s],r=n.gop,a=n.gm;(r||a)&&(n.gop=r||a,n.gm=a||r,n.uol=n.uol||n.uml,n.uml=n.uml||n.uol,n.gop.lat&&n.gop.lon&&n.gm.lat&&n.gm.lon&&(n.oa||n.ma)&&e.splice(Math.floor(Math.random()*e.length),0,n))}const n=e.slice(e.length-60,e.length),r=e.slice(0,60);return n.concat(e,r)}trackPageVisibility(){let t,e;void 0!==document.hidden?(t="hidden",e="visibilitychange"):void 0!==document.msHidden?(t="msHidden",e="msvisibilitychange"):void 0!==document.webkitHidden&&(t="webkitHidden",e="webkitvisibilitychange"),this.documentHidden=t,this.visibilityChange=e,document.addEventListener(e,this.handleVisibilityChange,!1)}init(){return new Promise(((t,e)=>{this.loadAssets().then((n=>{vl.assets=n;const{parentNode:r=document.body}=vl;this.loadData().then((e=>{vl.data=this.filterData(e),this.webglController=new th(r),this.webglController.initDataObjects(vl.data),this.webglController.transitionIn(1.5,.6),this.trackPageVisibility(),t()})).catch((t=>{Rl(),e(t)}))})).catch((t=>{e(t)}))}))}handleVisibilityChange(){document[this.documentHidden]?gl.emit(pl):gl.emit(ml)}get renderer(){return this.webglController?this.webglController.renderer:null}get canvas(){return this.webglController?this.webglController.renderer.domElement:null}dispose(){document.removeEventListener(this.visibilityChange,this.handleVisibilityChange),this.webglController.dispose(),this.webglController=null,this.visibilityChange=null,this.documentHidden=null,Object.keys(vl).forEach((t=>{delete vl[t]}))}}let Nl;n(17),async function(){if(await("interactive"===document.readyState||"complete"===document.readyState?Promise.resolve():new Promise((t=>{document.addEventListener("DOMContentLoaded",(()=>{t()}))}))),Nl=document.querySelector(".js-webgl-globe"),!Nl)return;if(!function(){const t=document.createElement("canvas");return(t.getContext("webgl")||t.getContext("webgl2")||t.getContext("experimental-webgl"))instanceof WebGLRenderingContext}())return Rl();let t="webgl-globe/",e="images/";const n=t+"data/",r=document.head.querySelector("link[rel=assets]");null===r||r.href.includes("localhost")||"/"===r.href||(t=r.href,e="images/modules/site/home/globe/");const s=new rh({basePath:t,imagePath:e,dataPath:n,parentNode:Nl,globeRadius:rl,lineWidth:1.5,spikeRadius:.06});s.init().then((()=>{s.canvas.addEventListener("webglcontextlost",Rl,!1)}))}()}])}();
//# sourceMappingURL=webgl-globe-28d729da.js.map
